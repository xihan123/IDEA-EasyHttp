Index: src/main/java/cn/xihan/http/config/IRequestInterceptor.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/config/IRequestInterceptor.java b/src/main/java/cn/xihan/http/config/IRequestInterceptor.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/config/IRequestInterceptor.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,51 +0,0 @@
-package cn.xihan.http.config;
-
-
-
-import cn.xihan.http.model.HttpHeaders;
-import cn.xihan.http.model.HttpParams;
-import cn.xihan.http.request.HttpRequest;
-import okhttp3.Request;
-import okhttp3.Response;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/08/05
- *    desc   : 请求参数拦截器
- */
-public interface IRequestInterceptor {
-
-    /**
-     * 拦截参数
-     *
-     * @param httpRequest   接口对象
-     * @param params        请求参数
-     * @param headers       请求头参数
-     */
-    default void interceptArguments(HttpRequest<?> httpRequest, HttpParams params, HttpHeaders headers) {}
-
-    /**
-     * 拦截请求头
-     *
-     * @param httpRequest   接口对象
-     * @param request       请求头对象
-     * @return              返回新的请求头
-     */
-
-    default Request interceptRequest(HttpRequest<?> httpRequest, Request request) {
-        return request;
-    }
-
-    /**
-     * 拦截器响应头
-     *
-     * @param httpRequest   接口对象
-     * @param response      响应头对象
-     * @return              返回新的响应头
-     */
-
-    default Response interceptResponse(HttpRequest<?> httpRequest, Response response) {
-        return response;
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/config/RequestUrl.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/config/RequestUrl.java b/src/main/java/cn/xihan/http/config/RequestUrl.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/config/RequestUrl.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,48 +0,0 @@
-package cn.xihan.http.config;
-
-
-import cn.xihan.http.annotation.HttpIgnore;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2022/03/03
- *    desc   : 请求 url 简单配置类
- */
-public final class RequestUrl implements IRequestServer, IRequestApi {
-
-   /** 主机地址 */
-   @HttpIgnore
-   private final String mHost;
-
-   /** 接口地址 */
-   @HttpIgnore
-   private final String mApi;
-
-   public RequestUrl(String url) {
-      this(url, "");
-   }
-
-   public RequestUrl(String host, String api) {
-      mHost = host;
-      mApi = api;
-   }
-
-
-   @Override
-   public String getHost() {
-      return mHost;
-   }
-
-
-   @Override
-   public String getApi() {
-      return mApi;
-   }
-
-
-   @Override
-   public String toString() {
-      return mHost + mApi;
-   }
-}
\ No newline at end of file
Index: GsonFactory/src/main/java/cn/xihan/gson/factory/data/LongTypeAdapter.java
===================================================================
diff --git a/GsonFactory/src/main/java/cn/xihan/gson/factory/data/LongTypeAdapter.java b/GsonFactory/src/main/java/cn/xihan/gson/factory/data/LongTypeAdapter.java
deleted file mode 100644
--- a/GsonFactory/src/main/java/cn/xihan/gson/factory/data/LongTypeAdapter.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,52 +0,0 @@
-package cn.xihan.gson.factory.data;
-
-import com.google.gson.TypeAdapter;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonWriter;
-
-import java.io.IOException;
-import java.math.BigDecimal;
-
-/**
- *    author : Android 轮子哥
- *    github : https://github.com/getActivity/GsonFactory
- *    time   : 2020/05/05
- *    desc   : long / Long 类型解析适配器，参考：{@link com.google.gson.internal.bind.TypeAdapters#LONG}
- */
-public class LongTypeAdapter extends TypeAdapter<Long> {
-
-    @Override
-    public Long read(JsonReader in) throws IOException {
-        switch (in.peek()) {
-            case NUMBER:
-                try {
-                    return in.nextLong();
-                } catch (NumberFormatException e) {
-                    // 如果带小数点则会抛出这个异常
-                    return new BigDecimal(in.nextString()).longValue();
-                }
-            case STRING:
-                String result = in.nextString();
-                if (result == null || "".equals(result)) {
-                    return 0L;
-                }
-                try {
-                    return Long.parseLong(result);
-                } catch (NumberFormatException e) {
-                    // 如果带小数点则会抛出这个异常
-                    return new BigDecimal(result).longValue();
-                }
-            case NULL:
-                in.nextNull();
-                return null;
-            default:
-                in.skipValue();
-                throw new IllegalArgumentException();
-        }
-    }
-
-    @Override
-    public void write(JsonWriter out, Long value) throws IOException {
-        out.value(value);
-    }
-}
\ No newline at end of file
Index: GsonFactory/src/main/java/cn/xihan/gson/factory/element/CollectionTypeAdapter.java
===================================================================
diff --git a/GsonFactory/src/main/java/cn/xihan/gson/factory/element/CollectionTypeAdapter.java b/GsonFactory/src/main/java/cn/xihan/gson/factory/element/CollectionTypeAdapter.java
deleted file mode 100644
--- a/GsonFactory/src/main/java/cn/xihan/gson/factory/element/CollectionTypeAdapter.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,83 +0,0 @@
-package cn.xihan.gson.factory.element;
-
-import cn.xihan.gson.factory.GsonFactory;
-import cn.xihan.gson.factory.JsonCallback;
-import com.google.gson.Gson;
-import com.google.gson.TypeAdapter;
-import com.google.gson.internal.ObjectConstructor;
-import com.google.gson.reflect.TypeToken;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonToken;
-import com.google.gson.stream.JsonWriter;
-
-
-import java.io.IOException;
-import java.lang.reflect.Type;
-import java.util.Collection;
-
-/**
- *    author : Android 轮子哥
- *    github : https://github.com/getActivity/GsonFactory
- *    time   : 2020/12/08
- *    desc   : Array 解析适配器，参考：{@link com.google.gson.internal.bind.CollectionTypeAdapterFactory}
- */
-public class CollectionTypeAdapter<E> extends TypeAdapter<Collection<E>> {
-
-    private final TypeAdapter<E> mElementTypeAdapter;
-    private final ObjectConstructor<? extends Collection<E>> mObjectConstructor;
-
-    private TypeToken<?> mTypeToken;
-    private String mFieldName;
-
-    public CollectionTypeAdapter(Gson gson, Type elementType, TypeAdapter<E> elementTypeAdapter, ObjectConstructor<? extends Collection<E>> constructor) {
-        mElementTypeAdapter = new TypeAdapterRuntimeTypeWrapper<>(gson, elementTypeAdapter, elementType);
-        mObjectConstructor = constructor;
-    }
-
-    public void setReflectiveType(TypeToken<?> typeToken, String fieldName) {
-        mTypeToken = typeToken;
-        mFieldName = fieldName;
-    }
-
-    @Override
-    public Collection<E> read(JsonReader in) throws IOException {
-        JsonToken jsonToken = in.peek();
-
-        if (jsonToken == JsonToken.NULL) {
-            in.nextNull();
-            return null;
-        }
-
-        if (jsonToken != JsonToken.BEGIN_ARRAY) {
-            in.skipValue();
-            JsonCallback callback = GsonFactory.getJsonCallback();
-            if (callback != null) {
-                callback.onTypeException(mTypeToken, mFieldName, jsonToken);
-            }
-            return null;
-        }
-
-        Collection<E> collection = mObjectConstructor.construct();
-        in.beginArray();
-        while (in.hasNext()) {
-            E instance = mElementTypeAdapter.read(in);
-            collection.add(instance);
-        }
-        in.endArray();
-        return collection;
-    }
-
-    @Override
-    public void write(JsonWriter out, Collection<E> collection) throws IOException {
-        if (collection == null) {
-            out.nullValue();
-            return;
-        }
-
-        out.beginArray();
-        for (E element : collection) {
-            mElementTypeAdapter.write(out, element);
-        }
-        out.endArray();
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/EasyUtils.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/EasyUtils.java b/src/main/java/cn/xihan/http/EasyUtils.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/EasyUtils.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,518 +0,0 @@
-package cn.xihan.http;
-
-
-import cn.xihan.http.annotation.HttpIgnore;
-import cn.xihan.http.annotation.HttpRename;
-import org.json.JSONArray;
-import org.json.JSONException;
-import org.json.JSONObject;
-
-import java.io.Closeable;
-import java.io.File;
-import java.io.IOException;
-import java.io.InputStream;
-import java.io.OutputStream;
-import java.io.UnsupportedEncodingException;
-import java.lang.reflect.Field;
-import java.lang.reflect.Modifier;
-import java.lang.reflect.ParameterizedType;
-import java.lang.reflect.Type;
-import java.lang.reflect.WildcardType;
-import java.net.InetAddress;
-import java.net.URLEncoder;
-import java.nio.file.Files;
-import java.security.DigestInputStream;
-import java.security.MessageDigest;
-import java.security.NoSuchAlgorithmException;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-
-import okhttp3.MultipartBody;
-import okhttp3.RequestBody;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/11/17
- *    desc   : 请求工具类
- */
-public final class EasyUtils {
-
-    // 加载中字符串
-    public static final String LOADING = "加载中...";
-
-    // 请求出错字符串
-    public static final String ERROR = "请求出错";
-
-    // 登录失效字符串
-    public static final String LOGIN_INVALID = "登录失效";
-
-    // 服务器连接超时字符串
-    public static final String TIME_OUT = "连接超时";
-
-    // 服务器响应异常字符串
-    public static final String RESPONSE_ERROR = "响应异常";
-
-    // 服务器连接异常字符串
-    public static final String CONNECT_ERROR = "连接异常";
-
-    // 请求被中断字符串
-    public static final String REQUEST_CANCEL = "请求被中断";
-
-    // 服务器数据返回异常字符串
-    public static final String DATA_ERROR = "数据异常";
-
-
-    public static void post(Runnable runnable) {
-      new Thread(runnable).start();
-    }
-
-    // 延迟执行
-    public static void postDelayed(Runnable runnable, long delay) {
-        try {
-            Thread.sleep(delay);
-            new Thread(runnable).start();
-        } catch (InterruptedException e) {
-            throw new RuntimeException(e);
-        }
-
-    }
-
-
-    /**
-     * 关闭流
-     */
-    public static void closeStream(Closeable closeable) {
-        if (closeable == null) {
-            return;
-        }
-        try {
-            closeable.close();
-        } catch (Exception e) {
-            e.printStackTrace();
-        }
-    }
-
-    /**
-     * 判断对象是否为 Bean 类
-     */
-    public static boolean isBeanType(Object object) {
-        if (object == null) {
-            return false;
-        }
-        if (object instanceof Enum) {
-            return false;
-        }
-        // Number：Long、Integer、Short、Double、Float、Byte
-        // CharSequence：String、StringBuilder、StringBuilder
-        return !(object instanceof Number || object instanceof CharSequence || object instanceof Boolean ||
-                object instanceof File || object instanceof InputStream || object instanceof RequestBody ||
-                object instanceof Character || object instanceof JSONObject || object instanceof JSONArray);
-    }
-
-    /**
-     * 判断是否包含存在流参数
-     */
-    public static boolean isMultipartParameter(List<Field> fields) {
-        for (Field field : fields) {
-            // 允许访问私有字段
-            field.setAccessible(true);
-
-            int modifiers = field.getModifiers();
-            // 如果这是一个常量字段，则直接忽略掉，例如 Parcelable 接口中的 CREATOR 字段
-            // https://github.com/getActivity/EasyHttp/issues/112
-            if (Modifier.isStatic(modifiers) && Modifier.isFinal(modifiers)) {
-                continue;
-            }
-
-            // 获取对象的类型
-            Class<?> clazz = field.getType();
-
-            // 获取对象上面实现的接口
-            Class<?>[] interfaces = clazz.getInterfaces();
-            for (int i = 0; i <= interfaces.length; i++) {
-                Class<?> temp;
-                if (i == interfaces.length) {
-                    temp = clazz;
-                } else {
-                    temp = interfaces[i];
-                }
-
-                if (List.class.equals(temp)) {
-                    // 如果实现了 List 接口，则取第一个位置的泛型
-                    if (isMultipartClass(getFieldGenericType(field, 0))) {
-                        return true;
-                    }
-                } else if (Map.class.equals(temp)) {
-                    // 如果实现了 Map 接口，则取第二个位置的泛型
-                    if (isMultipartClass(getFieldGenericType(field, 1))) {
-                        return true;
-                    }
-                }
-            }
-
-            do {
-                if (isMultipartClass(clazz)) {
-                    return true;
-                }
-                // 获取对象的父类类型
-                clazz = clazz.getSuperclass();
-            } while (clazz != null && !Object.class.equals(clazz));
-        }
-        return false;
-    }
-
-    /**
-     * 获取字段中携带的泛型类型
-     *
-     * @param field             字段对象
-     * @param position          泛型的位置
-     */
-    public static Type getFieldGenericType(Field field, int position) {
-        Type type = field.getGenericType();
-        if (!(type instanceof ParameterizedType)) {
-            return null;
-        }
-
-        // 获取泛型数组
-        Type[] actualTypeArguments = ((ParameterizedType) type).getActualTypeArguments();
-        // 如果泛型的位置超过数组的长度，证明这个位置的泛型不存在
-        if (position >= actualTypeArguments.length) {
-            return null;
-        }
-
-        // 获取指定位置上的泛型
-        Type actualType = actualTypeArguments[position];
-        // 如果这是一个通配符类型
-        if (actualType instanceof WildcardType) {
-            // 获取上界通配符
-            Type[] upperBounds = ((WildcardType) actualType).getUpperBounds();
-            if (upperBounds.length == 0) {
-                return null;
-            }
-            return upperBounds[0];
-        }
-        return actualType;
-    }
-
-    /**
-     * 判断 Type 是否为流类型
-     */
-    public static boolean isMultipartClass(Type type) {
-        if (type == null) {
-            return false;
-        }
-        return File.class.equals(type) || InputStream.class.equals(type)
-                || RequestBody.class.equals(type) || MultipartBody.Part.class.equals(type);
-    }
-
-    /**
-     * 将 List 集合转 JsonArray 对象
-     */
-    public static JSONArray listToJsonArray(List<?> list) {
-        JSONArray jsonArray = new JSONArray();
-        if (list == null || list.isEmpty()) {
-            return jsonArray;
-        }
-
-        for (Object value : list) {
-            if (value == null) {
-                continue;
-            }
-            jsonArray.put(convertObject(value));
-        }
-        return jsonArray;
-    }
-
-    /**
-     * 将 Map 集合转成 JsonObject 对象
-     */
-    public static JSONObject mapToJsonObject(Map<?, ?> map) {
-        JSONObject jsonObject = new JSONObject();
-        if (map == null || map.isEmpty()) {
-            return jsonObject;
-        }
-
-        Set<?> keySet = map.keySet();
-        for (Object key : keySet) {
-            Object value = map.get(key);
-            if (value == null) {
-                continue;
-            }
-            try {
-                jsonObject.put(String.valueOf(key), convertObject(value));
-            } catch (JSONException e) {
-                e.printStackTrace();
-            }
-        }
-        return jsonObject;
-    }
-
-    /**
-     * 将 Bean 类转成 HashMap 对象
-     */
-    public static HashMap<String, Object> beanToHashMap(Object object) {
-        if (object == null) {
-            return null;
-        }
-        if (object instanceof Enum) {
-            return null;
-        }
-
-        Field[] fields = object.getClass().getDeclaredFields();
-        HashMap<String, Object> data = new HashMap<>(fields.length);
-        for (Field field : fields) {
-            // 允许访问私有字段
-            field.setAccessible(true);
-
-            int modifiers = field.getModifiers();
-            // 如果这是一个常量字段，则直接忽略掉，例如 Parcelable 接口中的 CREATOR 字段
-            // https://github.com/getActivity/EasyHttp/issues/112
-            if (Modifier.isStatic(modifiers) && Modifier.isFinal(modifiers)) {
-                continue;
-            }
-
-            try {
-                // 获取字段的对象
-                Object value = field.get(object);
-
-                // 前提是这个字段值不能为空（基本数据类型有默认的值，而对象默认的值为 null）
-                // 又或者这个字段需要忽略，则进行忽略
-                if (value == null || field.isAnnotationPresent(HttpIgnore.class)) {
-                    continue;
-                }
-
-                // 获取字段的名称
-                String key;
-                HttpRename annotation = field.getAnnotation(HttpRename.class);
-                if (annotation != null) {
-                    key = annotation.value();
-                } else {
-                    key = field.getName();
-                    // 如果是内部类则会出现一个字段名为 this$0 的外部类对象，会导致无限递归，这里要忽略掉，如果使用静态内部类则不会出现这个问题
-                    // 和规避 Kotlin 自动生成的伴生对象：https://github.com/getActivity/EasyHttp/issues/15
-                    if (key.matches("this\\$\\d+") || "Companion".equals(key)) {
-                        continue;
-                    }
-                }
-
-                data.put(key, convertObject(value));
-
-            } catch (IllegalAccessException e) {
-                e.printStackTrace();
-            }
-        }
-
-        return data;
-    }
-
-    /**
-     * 对象转换
-     */
-    public static Object convertObject(Object object) {
-        if (object instanceof List) {
-            // 如果这是一个 List 参数
-            return listToJsonArray(((List<?>) object));
-        } else if (object instanceof Map) {
-            // 如果这是一个 Map 参数
-            return mapToJsonObject(((Map<?, ?>) object));
-        } else if (object instanceof Enum) {
-            // 如果这是一个枚举的参数
-            return String.valueOf(object);
-        } else if (isBeanType(object)) {
-            // 如果这是一个 Bean 参数
-            return mapToJsonObject(beanToHashMap(object));
-        } else {
-            // 如果这是一个普通的参数
-            return object;
-        }
-    }
-
-    /**
-     * 获取对象上面的泛型
-     */
-    public static Type getGenericType(Object object) {
-        if (object == null) {
-            return Void.class;
-        }
-        // 获取接口上面的泛型
-        Type[] types = object.getClass().getGenericInterfaces();
-        if (types.length > 0) {
-            // 如果这个对象是直接实现了接口，并且携带了泛型
-            return ((ParameterizedType) types[0]).getActualTypeArguments()[0];
-        }
-
-        // 获取父类上面的泛型
-        Type genericSuperclass = object.getClass().getGenericSuperclass();
-        if (!(genericSuperclass instanceof ParameterizedType)) {
-            return Void.class;
-        }
-
-        Type[] actualTypeArguments = ((ParameterizedType) genericSuperclass).getActualTypeArguments();
-        if (actualTypeArguments.length == 0) {
-            return Void.class;
-        }
-
-        // 如果这个对象是通过类继承，并且携带了泛型
-        return actualTypeArguments[0];
-    }
-
-    /**
-     * 获取进度百分比
-     */
-    public static int getProgressProgress(long totalByte, long currentByte) {
-        if (totalByte <= 0) {
-            // 返回 -1 表示无法获取进度
-            return -1;
-        }
-        // 计算百分比，这里踩了两个坑
-        // 当文件很大的时候：字节数 * 100 会超过 int 最大值，计算结果会变成负数
-        // 还有需要注意的是，long 除以 long 等于 long，这里的字节数除以总字节数应该要 double 类型的
-        return (int) (((double) currentByte / totalByte) * 100);
-    }
-
-    /**
-     * 字符串编码
-     */
-    public static String encodeString(String text) {
-        if (isEmpty(text)) {
-            return "";
-        }
-        try {
-            return URLEncoder.encode(text, "UTF-8");
-        } catch (UnsupportedEncodingException e) {
-            e.printStackTrace();
-            return text;
-        }
-    }
-
-    /**
-     * 格式化 Json 字符串
-     */
-    @SuppressWarnings("AlibabaUndefineMagicConstant")
-    public static String formatJson(String json) {
-        if (json == null) {
-            return "";
-        }
-
-        try {
-            if (json.startsWith("{")) {
-                return unescapeJson(new JSONObject(json).toString(4));
-            } else if (json.startsWith("[")) {
-                return unescapeJson(new JSONArray(json).toString(4));
-            }
-        } catch (JSONException e) {
-            e.printStackTrace();
-        }
-        return json;
-    }
-
-    /**
-     * 去除 Json 中非必要的字符转义
-     */
-    public static String unescapeJson(String json) {
-        if (isEmpty(json)) {
-            return "";
-        }
-        // https://github.com/getActivity/EasyHttp/issues/67
-        return json.replace("\\/", "/");
-    }
-
-    /**
-     * 获取对象的唯一标记
-     */
-
-    public static String getObjectTag(Object object) {
-        if (object == null) {
-            return null;
-        }
-        return String.valueOf(object);
-    }
-
-    /**
-     * 创建文件夹
-     */
-    @SuppressWarnings("ResultOfMethodCallIgnored")
-    public static void createFolder(File targetFolder) {
-        if (targetFolder.exists()) {
-            if (targetFolder.isDirectory()) {
-                return;
-            }
-            targetFolder.delete();
-        }
-        targetFolder.mkdirs();
-    }
-
-    /**
-     * 获取文件的 md5
-     */
-    public static String getFileMd5(InputStream inputStream) {
-        if (inputStream == null) {
-            return "";
-        }
-        DigestInputStream digestInputStream = null;
-        try {
-            MessageDigest messageDigest = MessageDigest.getInstance("MD5");
-            digestInputStream = new DigestInputStream(inputStream, messageDigest);
-            byte[] buffer = new byte[1024 * 256];
-            while (true) {
-                if (!(digestInputStream.read(buffer) > 0)) {
-                    break;
-                }
-            }
-            messageDigest = digestInputStream.getMessageDigest();
-            byte[] md5 = messageDigest.digest();
-            StringBuilder sb = new StringBuilder();
-            for (byte b : md5) {
-                sb.append(String.format("%02X", b));
-            }
-            return sb.toString().toLowerCase();
-        } catch (NoSuchAlgorithmException | IOException e) {
-            e.printStackTrace();
-        } finally {
-            EasyUtils.closeStream(inputStream);
-            EasyUtils.closeStream(digestInputStream);
-        }
-        return null;
-    }
-
-    /**
-     * 打开文件的输入流
-     */
-    public static InputStream openFileInputStream(File file) throws IOException {
-        return Files.newInputStream(file.toPath());
-    }
-
-    /**
-     * 打开文件的输出流
-     */
-    public static OutputStream openFileOutputStream(File file) throws IOException {
-        return Files.newOutputStream(file.toPath());
-    }
-
-    /**
-     *  判断字符串是否为空
-     */
-    public static boolean isEmpty(String str) {
-        return str == null || str.length() == 0 || str.trim().length() == 0;
-    }
-
-    /**
-     * 判断网络是否可用
-     */
-    public static boolean isNetworkAvailable() {
-        try {
-            InetAddress addr = InetAddress.getByName("www.baidu.com");
-            boolean state = addr.isReachable(3000);
-
-            // 获取本机IP地址
-            InetAddress localAddr = InetAddress.getLocalHost();
-            boolean state1 = localAddr.getHostName().equals("127.0.0.1");
-            return state || state1;
-        } catch (Exception e) {
-            return false;
-        }
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/annotation/HttpIgnore.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/annotation/HttpIgnore.java b/src/main/java/cn/xihan/http/annotation/HttpIgnore.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/annotation/HttpIgnore.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,18 +0,0 @@
-package cn.xihan.http.annotation;
-
-import java.lang.annotation.Documented;
-import java.lang.annotation.ElementType;
-import java.lang.annotation.Retention;
-import java.lang.annotation.RetentionPolicy;
-import java.lang.annotation.Target;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/05/19
- *    desc   : 忽略注解（这个参数或者请求头将不会被发送到后台）
- */
-@Documented
-@Retention(RetentionPolicy.RUNTIME)
-@Target(ElementType.FIELD)
-public @interface HttpIgnore {}
\ No newline at end of file
Index: FastKv/src/main/java/cn/xihan/fastkv/DataType.java
===================================================================
diff --git a/FastKv/src/main/java/cn/xihan/fastkv/DataType.java b/FastKv/src/main/java/cn/xihan/fastkv/DataType.java
deleted file mode 100644
--- a/FastKv/src/main/java/cn/xihan/fastkv/DataType.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,16 +0,0 @@
-package cn.xihan.fastkv;
-
-interface DataType {
-    byte DELETE_MASK = (byte) 0x80;
-    byte EXTERNAL_MASK = 0x40;
-    byte TYPE_MASK = 0x3F;
-
-    byte BOOLEAN = 1;
-    byte INT = 2;
-    byte FLOAT = 3;
-    byte LONG = 4;
-    byte DOUBLE = 5;
-    byte STRING = 6;
-    byte ARRAY = 7;
-    byte OBJECT = 8;
-}
Index: src/main/java/cn/xihan/http/config/RequestApi.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/config/RequestApi.java b/src/main/java/cn/xihan/http/config/RequestApi.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/config/RequestApi.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,33 +0,0 @@
-package cn.xihan.http.config;
-
-
-import cn.xihan.http.annotation.HttpIgnore;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/05/19
- *    desc   : 请求接口简单配置类
- */
-public class RequestApi implements IRequestApi {
-
-    /** 接口地址 */
-    @HttpIgnore
-    private final String mApi;
-
-    public RequestApi(String api) {
-        mApi = api;
-    }
-
-
-    @Override
-    public String getApi() {
-        return mApi;
-    }
-
-
-    @Override
-    public String toString() {
-        return mApi;
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/config/IRequestServer.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/config/IRequestServer.java b/src/main/java/cn/xihan/http/config/IRequestServer.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/config/IRequestServer.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,35 +0,0 @@
-package cn.xihan.http.config;
-
-
-import cn.xihan.http.model.BodyType;
-import cn.xihan.http.model.CacheMode;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/05/19
- *    desc   : 请求服务配置
- */
-public interface IRequestServer extends
-        IRequestHost, IRequestClient,
-        IRequestType, IRequestCache {
-
-
-    @Override
-    default BodyType getBodyType() {
-        // 默认以表单的方式提交
-        return BodyType.FORM;
-    }
-
-
-    @Override
-    default CacheMode getCacheMode() {
-        // 默认的缓存方式
-        return CacheMode.DEFAULT;
-    }
-
-    @Override
-    default long getCacheTime() {
-        return Long.MAX_VALUE;
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/exception/HttpException.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/exception/HttpException.java b/src/main/java/cn/xihan/http/exception/HttpException.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/exception/HttpException.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,52 +0,0 @@
-package cn.xihan.http.exception;
-
-
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/05/19
- *    desc   : 网络请求异常
- */
-public class HttpException extends Exception {
-
-    private final String mMessage;
-    private Throwable mThrowable;
-
-    public HttpException(String message) {
-        super(message);
-        mMessage = message;
-    }
-
-    public HttpException(String message, Throwable cause) {
-        super(message, cause);
-        mMessage = message;
-        mThrowable = cause;
-    }
-
-    /**
-     * 获取错误信息
-     */
-    @Override
-    public String getMessage() {
-        return mMessage;
-    }
-
-
-    @Override
-    public StackTraceElement[] getStackTrace() {
-        if (mThrowable != null) {
-            return mThrowable.getStackTrace();
-        }
-        return super.getStackTrace();
-    }
-
-
-    @Override
-    public synchronized Throwable getCause() {
-        if (mThrowable != null) {
-            return mThrowable.getCause();
-        }
-        return super.getCause();
-    }
-}
\ No newline at end of file
Index: FastKv/src/main/java/cn/xihan/fastkv/Util.java
===================================================================
diff --git a/FastKv/src/main/java/cn/xihan/fastkv/Util.java b/FastKv/src/main/java/cn/xihan/fastkv/Util.java
deleted file mode 100644
--- a/FastKv/src/main/java/cn/xihan/fastkv/Util.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,156 +0,0 @@
-package cn.xihan.fastkv;
-
-import java.io.*;
-import java.lang.reflect.Field;
-import java.lang.reflect.Method;
-import java.nio.file.Files;
-import java.nio.file.attribute.BasicFileAttributes;
-import java.security.SecureRandom;
-
-class Util {
-    private static class Holder {
-        static final SecureRandom random = new SecureRandom();
-        static final char[] digits = {
-                '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
-                'a', 'b', 'c', 'd', 'e', 'f'};
-    }
-
-    static final int NAME_SIZE = 32;
-
-    /**
-     * Like UUID.randomUUID().toString(), but without '-'.
-     */
-    static String randomName() {
-        int len = NAME_SIZE >> 1;
-        byte[] bytes = new byte[len];
-        Holder.random.nextBytes(bytes);
-        char[] buf = new char[NAME_SIZE];
-        for (int i = 0; i < len; i++) {
-            int b = bytes[i];
-            int index = i << 1;
-            buf[index] = Holder.digits[(b >> 4) & 0xF];
-            buf[index + 1] = Holder.digits[b & 0xF];
-        }
-        return new String(buf);
-    }
-
-    @SuppressWarnings({"rawtypes", "unchecked"})
-    static int getPageSize() {
-        try {
-            Class unsafeClass = Class.forName("sun.misc.Unsafe");
-            Field theUnsafe = unsafeClass.getDeclaredField("theUnsafe");
-            theUnsafe.setAccessible(true);
-            Method method = unsafeClass.getDeclaredMethod("pageSize");
-            method.setAccessible(true);
-            return (int) (Integer) method.invoke(theUnsafe.get(null));
-        } catch (Throwable ignore) {
-        }
-        return 4096;
-    }
-
-    static boolean makeFileIfNotExist(File file) throws IOException {
-        if (file.isFile()) {
-            return true;
-        } else {
-            File parent = file.getParentFile();
-            return parent != null && (parent.isDirectory() || parent.mkdirs()) && file.createNewFile();
-        }
-    }
-
-    static byte[] getBytes(File file) throws IOException {
-        BasicFileAttributes basicFileAttributes = Files.readAttributes(file.toPath(), BasicFileAttributes.class);
-        if (!basicFileAttributes.isRegularFile()) {
-            return null;
-        }
-        long len = basicFileAttributes.size();
-        if ((len >> 32) != 0) {
-            throw new IllegalArgumentException("file too large, path:" + file.getPath());
-        }
-        byte[] bytes = new byte[(int) len];
-        readBytes(file, bytes, (int) len);
-        return bytes;
-    }
-
-    static void readBytes(File file, byte[] bytes, int len) throws IOException {
-        RandomAccessFile accessFile = new RandomAccessFile(file, "rw");
-        try {
-            int p = 0;
-            while (p < len) {
-                int count = accessFile.read(bytes, p, len - p);
-                if (count < 0) break;
-                p += count;
-            }
-        } finally {
-            closeQuietly(accessFile);
-        }
-    }
-
-    static boolean saveBytes(File file, byte[] bytes) {
-        try {
-            File tmpFile = new File(file.getParent(), file.getName() + ".tmp");
-            if (!makeFileIfNotExist(tmpFile)) {
-                return false;
-            }
-            RandomAccessFile accessFile = new RandomAccessFile(tmpFile, "rw");
-            try {
-                accessFile.setLength(bytes.length);
-                accessFile.write(bytes);
-            } finally {
-                closeQuietly(accessFile);
-            }
-            if (!file.exists() || file.delete()) {
-                return tmpFile.renameTo(file);
-            }
-        } catch (Exception ignore) {
-        }
-        return false;
-    }
-
-    static void closeQuietly(Closeable closeable) {
-        if (closeable != null) {
-            try {
-                closeable.close();
-            } catch (Exception ignore) {
-            }
-        }
-    }
-
-    static void deleteFile(File file) {
-        try {
-            if (file.exists()) {
-                deleteRecursive(file);
-            }
-        } catch (Exception ignore) {
-        }
-    }
-
-    private static void deleteRecursive(File file) {
-        if (file.isDirectory()) {
-            File[] fs = file.listFiles();
-            if (fs != null) {
-                for (File f : fs) {
-                    deleteRecursive(f);
-                }
-            }
-        }
-        //noinspection ResultOfMethodCallIgnored
-        file.delete();
-    }
-
-    static int binarySearch(int[] a, int value) {
-        int lo = 0;
-        int hi = (a.length >> 1) - 1;
-        while (lo <= hi) {
-            final int mid = (lo + hi) >>> 1;
-            final int midVal = a[mid << 1];
-            if (midVal < value) {
-                lo = mid + 1;
-            } else if (midVal > value) {
-                hi = mid - 1;
-            } else {
-                return mid;
-            }
-        }
-        return hi;
-    }
-}
Index: src/main/java/cn/xihan/http/body/TextBody.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/body/TextBody.java b/src/main/java/cn/xihan/http/body/TextBody.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/body/TextBody.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,56 +0,0 @@
-package cn.xihan.http.body;
-
-
-
-import java.io.IOException;
-
-import cn.xihan.http.model.ContentType;
-import okhttp3.MediaType;
-import okhttp3.RequestBody;
-import okio.BufferedSink;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/10/26
- *    desc   : 文本参数提交
- */
-public class TextBody extends RequestBody {
-
-    /** 字符串数据 */
-    private final String mText;
-
-    /** 字节数组 */
-    private final byte[] mBytes;
-
-    public TextBody() {
-        this("");
-    }
-
-    public TextBody(String text) {
-        mText = text;
-        mBytes = mText.getBytes();
-    }
-
-    @Override
-    public MediaType contentType() {
-        return ContentType.TEXT;
-    }
-
-    @Override
-    public long contentLength() {
-        // 需要注意：这里需要用字节数组的长度来计算
-        return mBytes.length;
-    }
-
-    @Override
-    public void writeTo(BufferedSink sink) throws IOException {
-        sink.write(mBytes, 0, mBytes.length);
-    }
-
-
-    @Override
-    public String toString() {
-        return mText;
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/request/GetRequest.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/request/GetRequest.java b/src/main/java/cn/xihan/http/request/GetRequest.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/request/GetRequest.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,23 +0,0 @@
-package cn.xihan.http.request;
-
-
-import cn.xihan.http.model.HttpMethod;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/07/20
- *    desc   : Get 请求
- */
-public final class GetRequest extends UrlRequest<GetRequest> {
-
-    public GetRequest() {
-
-    }
-
-
-    @Override
-    public String getRequestMethod() {
-        return HttpMethod.GET.toString();
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/config/DownloadApi.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/config/DownloadApi.java b/src/main/java/cn/xihan/http/config/DownloadApi.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/config/DownloadApi.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,14 +0,0 @@
-package cn.xihan.http.config;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2021/12/09
- *    desc   : 下载请求接口简单配置类
- */
-public final class DownloadApi extends RequestApi {
-
-    public DownloadApi(String api) {
-        super(api);
-    }
-}
\ No newline at end of file
Index: FastKv/src/main/java/cn/xihan/fastkv/StringSetEncoder.java
===================================================================
diff --git a/FastKv/src/main/java/cn/xihan/fastkv/StringSetEncoder.java b/FastKv/src/main/java/cn/xihan/fastkv/StringSetEncoder.java
deleted file mode 100644
--- a/FastKv/src/main/java/cn/xihan/fastkv/StringSetEncoder.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,65 +0,0 @@
-package cn.xihan.fastkv;
-
-import java.util.LinkedHashSet;
-import java.util.Set;
-
-class StringSetEncoder implements FastKV.Encoder<Set<String>> {
-    static final StringSetEncoder INSTANCE = new StringSetEncoder();
-
-    private StringSetEncoder() {
-    }
-
-    @Override
-    public String tag() {
-        return "StringSet";
-    }
-
-    @Override
-    public byte[] encode(Set<String> src) {
-        if (src.isEmpty()) {
-            return new byte[0];
-        }
-        int index = 0;
-        int count = 0;
-        int n = src.size();
-        int[] sizeArray = new int[n];
-        String[] strArray = new String[n];
-        for (String str : src) {
-            if (str == null) {
-                count += 5;
-                sizeArray[index] = -1;
-            } else {
-                int strSize = FastBuffer.getStringSize(str);
-                strArray[index] = str;
-                sizeArray[index] = strSize;
-                count += FastBuffer.getVarint32Size(strSize) + strSize;
-            }
-            index++;
-        }
-        FastBuffer buffer = new FastBuffer(count);
-        for (int i = 0; i < n; i++) {
-            int size = sizeArray[i];
-            buffer.putVarint32(size);
-            if (size >= 0) {
-                buffer.putString(strArray[i]);
-            }
-        }
-        return buffer.hb;
-    }
-
-    @Override
-    public Set<String> decode(byte[] bytes, int offset, int length) {
-        Set<String> set = new LinkedHashSet<>();
-        if (length > 0) {
-            FastBuffer buffer = new FastBuffer(bytes, offset);
-            int limit = offset + length;
-            while (buffer.position < limit) {
-                set.add(buffer.getString(buffer.getVarint32()));
-            }
-            if (buffer.position != limit) {
-                throw new IllegalArgumentException("Invalid String set");
-            }
-        }
-        return set;
-    }
-}
Index: src/main/java/cn/xihan/http/model/HttpCacheManager.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/model/HttpCacheManager.java b/src/main/java/cn/xihan/http/model/HttpCacheManager.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/model/HttpCacheManager.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,41 +0,0 @@
-package cn.xihan.http.model;
-
-
-import cn.xihan.fastkv.FastKV;
-import cn.xihan.gson.factory.GsonFactory;
-import cn.xihan.http.config.IRequestApi;
-import cn.xihan.http.request.HttpRequest;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2022/03/22
- *    desc   : Http 缓存管理器
- */
-public final class HttpCacheManager {
-
-   private volatile static FastKV sFastKv;
-
-
-   /**
-    * 获取单例的 FastKV 实例
-    */
-   public static FastKV getFastKv() {
-      if(sFastKv == null) {
-         synchronized (RequestHandler.class) {
-            if (sFastKv == null) {
-               sFastKv = new FastKV.Builder(System.getProperty("user.dir") + "\\cache","http_cache_id").build();
-            }
-         }
-      }
-      return sFastKv;
-   }
-
-   /**
-    * 生成缓存的 key
-    */
-   public static String generateCacheKey(HttpRequest<?> httpRequest) {
-      IRequestApi requestApi = httpRequest.getRequestApi();
-      return "用户 id" + "\n" + requestApi.getApi() + "\n" + GsonFactory.getSingletonGson().toJson(requestApi);
-   }
-}
\ No newline at end of file
Index: GsonFactory/src/main/java/cn/xihan/gson/factory/data/FloatTypeAdapter.java
===================================================================
diff --git a/GsonFactory/src/main/java/cn/xihan/gson/factory/data/FloatTypeAdapter.java b/GsonFactory/src/main/java/cn/xihan/gson/factory/data/FloatTypeAdapter.java
deleted file mode 100644
--- a/GsonFactory/src/main/java/cn/xihan/gson/factory/data/FloatTypeAdapter.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,41 +0,0 @@
-package cn.xihan.gson.factory.data;
-
-import com.google.gson.TypeAdapter;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonWriter;
-
-import java.io.IOException;
-
-/**
- *    author : Android 轮子哥
- *    github : https://github.com/getActivity/GsonFactory
- *    time   : 2020/05/05
- *    desc   : float / Float 类型解析适配器，参考：{@link com.google.gson.internal.bind.TypeAdapters#FLOAT}
- */
-public class FloatTypeAdapter extends TypeAdapter<Float> {
-
-    @Override
-    public Float read(JsonReader in) throws IOException {
-        switch (in.peek()) {
-            case NUMBER:
-                return (float) in.nextDouble();
-            case STRING:
-                String result = in.nextString();
-                if (result == null || "".equals(result)) {
-                    return 0F;
-                }
-                return Float.parseFloat(result);
-            case NULL:
-                in.nextNull();
-                return null;
-            default:
-                in.skipValue();
-                throw new IllegalArgumentException();
-        }
-    }
-
-    @Override
-    public void write(JsonWriter out, Float value) throws IOException {
-        out.value(value);
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/exception/ResultException.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/exception/ResultException.java b/src/main/java/cn/xihan/http/exception/ResultException.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/exception/ResultException.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,30 +0,0 @@
-package cn.xihan.http.exception;
-
-
-import cn.xihan.http.model.HttpData;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/06/25
- *    desc   : 返回结果异常
- */
-public final class ResultException extends HttpException {
-
-    private final HttpData<?> mData;
-
-    public ResultException(String message, HttpData<?> data) {
-        super(message);
-        mData = data;
-    }
-
-    public ResultException(String message, Throwable cause, HttpData<?> data) {
-        super(message, cause);
-        mData = data;
-    }
-
-
-    public HttpData<?> getHttpData() {
-        return mData;
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/config/ILogStrategy.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/config/ILogStrategy.java b/src/main/java/cn/xihan/http/config/ILogStrategy.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/config/ILogStrategy.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,42 +0,0 @@
-package cn.xihan.http.config;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/04/24
- *    desc   : 日志打印策略
- */
-public interface ILogStrategy {
-
-    /**
-     * 打印分割线
-     */
-    default void printLine(String tag) {
-        printLog(tag, "----------------------------------------");
-    }
-
-    /**
-     * 打印日志
-     */
-    void printLog(String tag, String log);
-
-    /**
-     * 打印 Json
-     */
-    void printJson(String tag, String json);
-
-    /**
-     * 打印键值对
-     */
-    void printKeyValue(String tag, String key, String value);
-
-    /**
-     * 打印异常
-     */
-    void printThrowable(String tag, Throwable throwable);
-
-    /**
-     * 打印堆栈
-     */
-    void printStackTrace(String tag, StackTraceElement[] stackTrace);
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/request/TraceRequest.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/request/TraceRequest.java b/src/main/java/cn/xihan/http/request/TraceRequest.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/request/TraceRequest.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,22 +0,0 @@
-package cn.xihan.http.request;
-
-
-import cn.xihan.http.model.HttpMethod;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2021/04/29
- *    desc   : Trace 请求
- */
-public final class TraceRequest extends UrlRequest<TraceRequest> {
-
-    public TraceRequest() {
-
-    }
-
-    @Override
-    public String getRequestMethod() {
-        return HttpMethod.TRACE.toString();
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/model/HttpListData.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/model/HttpListData.java b/src/main/java/cn/xihan/http/model/HttpListData.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/model/HttpListData.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,47 +0,0 @@
-package cn.xihan.http.model;
-
-import java.util.List;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/10/07
- *    desc   : 统一接口列表数据结构
- */
-public class HttpListData<T> extends HttpData<HttpListData.ListBean<T>> {
-
-    public static class ListBean<T> {
-
-        /** 当前页码 */
-        private int pageIndex;
-        /** 页大小 */
-        private int pageSize;
-        /** 总数量 */
-        private int totalNumber;
-        /** 数据 */
-        private List<T> items;
-
-        /**
-         * 判断是否是最后一页
-         */
-        public boolean isLastPage() {
-            return Math.ceil((float) totalNumber / pageSize) <= pageIndex;
-        }
-
-        public int getTotalNumber() {
-            return totalNumber;
-        }
-
-        public int getPageIndex() {
-            return pageIndex;
-        }
-
-        public int getPageSize() {
-            return pageSize;
-        }
-
-        public List<T> getItems() {
-            return items;
-        }
-    }
-}
\ No newline at end of file
Index: GsonFactory/src/main/java/cn/xihan/gson/factory/element/TypeAdapterRuntimeTypeWrapper.java
===================================================================
diff --git a/GsonFactory/src/main/java/cn/xihan/gson/factory/element/TypeAdapterRuntimeTypeWrapper.java b/GsonFactory/src/main/java/cn/xihan/gson/factory/element/TypeAdapterRuntimeTypeWrapper.java
deleted file mode 100644
--- a/GsonFactory/src/main/java/cn/xihan/gson/factory/element/TypeAdapterRuntimeTypeWrapper.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,75 +0,0 @@
-package cn.xihan.gson.factory.element;
-
-import com.google.gson.Gson;
-import com.google.gson.TypeAdapter;
-import com.google.gson.internal.bind.ReflectiveTypeAdapterFactory;
-import com.google.gson.reflect.TypeToken;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonWriter;
-
-import java.io.IOException;
-import java.lang.reflect.Type;
-import java.lang.reflect.TypeVariable;
-
-/**
- *    author : Android 轮子哥
- *    github : https://github.com/getActivity/GsonFactory
- *    time   : 2020/12/08
- *    desc   : Object 解析适配器，参考：{@link com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper}
- */
-public class TypeAdapterRuntimeTypeWrapper<T> extends TypeAdapter<T> {
-
-    private final Gson mGson;
-    private final TypeAdapter<T> mDelegate;
-    private final Type mType;
-
-    public TypeAdapterRuntimeTypeWrapper(Gson gson, TypeAdapter<T> delegate, Type type) {
-        mGson = gson;
-        mDelegate = delegate;
-        mType = type;
-    }
-
-    @Override
-    public T read(JsonReader in) throws IOException {
-        return mDelegate.read(in);
-    }
-
-    @SuppressWarnings({"rawtypes", "unchecked"})
-    @Override
-    public void write(JsonWriter out, T value) throws IOException {
-        // Order of preference for choosing type adapters
-        // First preference: a type adapter registered for the runtime type
-        // Second preference: a type adapter registered for the declared type
-        // Third preference: reflective type adapter for the runtime type (if it is a sub class of the declared type)
-        // Fourth preference: reflective type adapter for the declared type
-
-        TypeAdapter chosen = mDelegate;
-        Type runtimeType = getRuntimeTypeIfMoreSpecific(mType, value);
-        if (runtimeType != mType) {
-            TypeAdapter runtimeTypeAdapter = mGson.getAdapter(TypeToken.get(runtimeType));
-            if (!(runtimeTypeAdapter instanceof ReflectiveTypeAdapterFactory.Adapter)) {
-                // The user registered a type adapter for the runtime type, so we will use that
-                chosen = runtimeTypeAdapter;
-            } else if (!(mDelegate instanceof ReflectiveTypeAdapterFactory.Adapter)) {
-                // The user registered a type adapter for Base class, so we prefer it over the
-                // reflective type adapter for the runtime type
-                chosen = mDelegate;
-            } else {
-                // Use the type adapter for runtime type
-                chosen = runtimeTypeAdapter;
-            }
-        }
-        chosen.write(out, value);
-    }
-
-    /**
-     * Finds a compatible runtime type if it is more specific
-     */
-    private Type getRuntimeTypeIfMoreSpecific(Type type, Object value) {
-        if (value != null
-                && (type instanceof TypeVariable<?> || type instanceof Class<?>)) {
-            type = value.getClass();
-        }
-        return type;
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/model/ResponseClass.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/model/ResponseClass.java b/src/main/java/cn/xihan/http/model/ResponseClass.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/model/ResponseClass.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,9 +0,0 @@
-package cn.xihan.http.model;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/08/14
- *    desc   : 数据解析模型类
- */
-public abstract class ResponseClass<T> {}
\ No newline at end of file
Index: FastKv/src/main/java/cn/xihan/fastkv/FastKV.java
===================================================================
diff --git a/FastKv/src/main/java/cn/xihan/fastkv/FastKV.java b/FastKv/src/main/java/cn/xihan/fastkv/FastKV.java
deleted file mode 100644
--- a/FastKv/src/main/java/cn/xihan/fastkv/FastKV.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,1700 +0,0 @@
-package cn.xihan.fastkv;
-
-import java.io.File;
-import java.io.IOException;
-import java.io.RandomAccessFile;
-import java.nio.ByteOrder;
-import java.nio.MappedByteBuffer;
-import java.nio.channels.FileChannel;
-import java.nio.charset.StandardCharsets;
-import java.util.*;
-import java.util.concurrent.ConcurrentHashMap;
-import java.util.concurrent.Executor;
-
-import cn.xihan.fastkv.Container.*;
-
-@SuppressWarnings("rawtypes")
-public class FastKV {
-    private static final String BOTH_FILES_ERROR = "both files error";
-    private static final String PARSE_DATA_FAILED = "parse dara failed";
-    private static final String OPEN_FILE_FAILED = "open file failed";
-    private static final String MAP_FAILED = "map failed";
-
-    static final String TRUNCATE_FINISH = "truncate finish";
-    static final String GC_FINISH = "gc finish";
-
-    private static final String A_SUFFIX = ".kva";
-    private static final String B_SUFFIX = ".kvb";
-    private static final String C_SUFFIX = ".kvc";
-    private static final String TEMP_SUFFIX = ".tmp";
-
-    private static final int DATA_SIZE_LIMIT = 1 << 29;
-
-    private static final int[] TYPE_SIZE = {0, 1, 4, 4, 8, 8};
-    private static final byte[] EMPTY_ARRAY = new byte[0];
-    private static final int DATA_START = 12;
-    private static final int BASE_GC_KEYS_THRESHOLD = 80;
-    private static final int BASE_GC_BYTES_THRESHOLD = 4096;
-    private static final int INTERNAL_LIMIT = 2048;
-
-    private static final int PAGE_SIZE = Util.getPageSize();
-    private static final int DOUBLE_LIMIT = Math.max(PAGE_SIZE << 1, 1 << 14);
-    private static final int TRUNCATE_THRESHOLD = DOUBLE_LIMIT << 1;
-
-    private final String path;
-    private final String name;
-    private final Map<String, Encoder> encoderMap;
-    private final Logger logger = FastKVConfig.sLogger;
-
-    private FileChannel aChannel;
-    private FileChannel bChannel;
-    private MappedByteBuffer aBuffer;
-    private MappedByteBuffer bBuffer;
-    private FastBuffer fastBuffer;
-
-    private int dataEnd;
-    private long checksum;
-    private final Map<String, BaseContainer> data = new HashMap<>();
-    private boolean startLoading = false;
-
-    private int updateStart;
-    private int updateSize;
-    private int removeStart;
-    private boolean sizeChanged;
-
-    private String tempExternalName;
-
-    private int invalidBytes;
-    private final ArrayList<Segment> invalids = new ArrayList<>();
-
-    // The default writing mode is non-blocking (write partial data with mmap).
-    // If mmap API throw IOException, degrade to blocking mode (write all data to disk with blocking I/O).
-    // User could assign to using blocking mode by FastKV.Builder
-    static final int NON_BLOCKING = 0;
-    static final int ASYNC_BLOCKING = 1;
-    static final int SYNC_BLOCKING = 2;
-    private int writingMode;
-
-    // Only take effect when mode is not NON_BLOCKING
-    private boolean autoCommit = true;
-
-    private final Executor executor = new LimitExecutor();
-
-    FastKV(final String path, final String name, Encoder[] encoders, int writingMode) {
-        this.path = path;
-        this.name = name;
-        this.writingMode = writingMode;
-
-        Map<String, Encoder> map = new HashMap<>();
-        StringSetEncoder encoder = StringSetEncoder.INSTANCE;
-        map.put(encoder.tag(), encoder);
-        if (encoders != null && encoders.length > 0) {
-            for (Encoder e : encoders) {
-                String tag = e.tag();
-                if (map.containsKey(tag)) {
-                    error("duplicate encoder tag:" + tag);
-                } else {
-                    map.put(tag, e);
-                }
-            }
-        }
-        this.encoderMap = map;
-
-        synchronized (data) {
-            FastKVConfig.getExecutor().execute(this::loadData);
-            while (!startLoading) {
-                try {
-                    // wait util loadData() get the object lock
-                    data.wait();
-                } catch (InterruptedException ignore) {
-                }
-            }
-        }
-    }
-
-    private synchronized void loadData() {
-        // we got the object lock, notify the waiter to continue the constructor
-        synchronized (data) {
-            startLoading = true;
-            data.notify();
-        }
-        long start = System.nanoTime();
-        if (!loadFromCFile() && writingMode == NON_BLOCKING) {
-            loadFromABFile();
-        }
-        if (fastBuffer == null) {
-            fastBuffer = new FastBuffer(PAGE_SIZE);
-        }
-        if (logger != null) {
-            long t = (System.nanoTime() - start) / 1000000;
-            info("loading finish, data len:" + dataEnd + ", get keys:" + data.size() + ", use time:" + t + " ms");
-        }
-    }
-
-    private void loadFromABFile() {
-        File aFile = new File(path, name + A_SUFFIX);
-        File bFile = new File(path, name + B_SUFFIX);
-        try {
-            if (!Util.makeFileIfNotExist(aFile) || !Util.makeFileIfNotExist(bFile)) {
-                error(new Exception(OPEN_FILE_FAILED));
-                toBlockingMode();
-                return;
-            }
-            RandomAccessFile aAccessFile = new RandomAccessFile(aFile, "rw");
-            RandomAccessFile bAccessFile = new RandomAccessFile(bFile, "rw");
-            long aFileLen = aAccessFile.length();
-            long bFileLen = bAccessFile.length();
-            aChannel = aAccessFile.getChannel();
-            bChannel = bAccessFile.getChannel();
-            try {
-                aBuffer = aChannel.map(FileChannel.MapMode.READ_WRITE, 0, aFileLen > 0 ? aFileLen : PAGE_SIZE);
-                aBuffer.order(ByteOrder.LITTLE_ENDIAN);
-                bBuffer = bChannel.map(FileChannel.MapMode.READ_WRITE, 0, bFileLen > 0 ? bFileLen : PAGE_SIZE);
-                bBuffer.order(ByteOrder.LITTLE_ENDIAN);
-            } catch (IOException e) {
-                error(e);
-                toBlockingMode();
-                tryBlockingIO(aFile, bFile);
-                return;
-            }
-            fastBuffer = new FastBuffer(aBuffer.capacity());
-
-            if (aFileLen == 0 && bFileLen == 0) {
-                dataEnd = DATA_START;
-            } else {
-                int aDataSize = aBuffer.getInt();
-                long aCheckSum = aBuffer.getLong();
-                int bDataSize = bBuffer.getInt();
-                long bCheckSum = bBuffer.getLong();
-
-                boolean isAValid = false;
-                if (aDataSize >= 0 && (aDataSize <= aFileLen - DATA_START)) {
-                    dataEnd = DATA_START + aDataSize;
-                    aBuffer.rewind();
-                    aBuffer.get(fastBuffer.hb, 0, dataEnd);
-                    if (aCheckSum == fastBuffer.getChecksum(DATA_START, aDataSize) && parseData() == 0) {
-                        checksum = aCheckSum;
-                        isAValid = true;
-                    }
-                }
-                if (isAValid) {
-                    if (aFileLen != bFileLen || !isABFileEqual()) {
-                        warning(new Exception("B file error"));
-                        copyBuffer(aBuffer, bBuffer, dataEnd);
-                    }
-                } else {
-                    boolean isBValid = false;
-                    if (bDataSize >= 0 && (bDataSize <= bFileLen - DATA_START)) {
-                        data.clear();
-                        clearInvalid();
-                        dataEnd = DATA_START + bDataSize;
-                        if (fastBuffer.hb.length != bBuffer.capacity()) {
-                            fastBuffer = new FastBuffer(bBuffer.capacity());
-                        }
-                        bBuffer.rewind();
-                        bBuffer.get(fastBuffer.hb, 0, dataEnd);
-                        if (bCheckSum == fastBuffer.getChecksum(DATA_START, bDataSize) && parseData() == 0) {
-                            warning(new Exception("A file error"));
-                            copyBuffer(bBuffer, aBuffer, dataEnd);
-                            checksum = bCheckSum;
-                            isBValid = true;
-                        }
-                    }
-                    if (!isBValid) {
-                        error(BOTH_FILES_ERROR);
-                        resetData();
-                    }
-                }
-            }
-        } catch (Exception e) {
-            error(e);
-            clearData();
-            toBlockingMode();
-        }
-    }
-
-    private void tryBlockingIO(File aFile, File bFile) {
-        try {
-            if (loadWithBlockingIO(aFile)) {
-                return;
-            }
-        } catch (IOException e) {
-            warning(e);
-        }
-        clearData();
-        try {
-            if (loadWithBlockingIO(bFile)) {
-                return;
-            }
-        } catch (IOException e) {
-            warning(e);
-        }
-        clearData();
-    }
-
-    private boolean isABFileEqual() {
-        FastBuffer tempBuffer = new FastBuffer(dataEnd);
-        bBuffer.rewind();
-        bBuffer.get(tempBuffer.hb, 0, dataEnd);
-        byte[] a = fastBuffer.hb;
-        byte[] b = tempBuffer.hb;
-        for (int i = 0; i < dataEnd; i++) {
-            if (a[i] != b[i]) {
-                return false;
-            }
-        }
-        return true;
-    }
-
-    private boolean loadFromCFile() {
-        boolean hadWriteToABFile = false;
-        File cFile = new File(path, name + C_SUFFIX);
-        File tmpFile = new File(path, name + TEMP_SUFFIX);
-        try {
-            File srcFile = null;
-            if (cFile.exists()) {
-                srcFile = cFile;
-            } else if (tmpFile.exists()) {
-                srcFile = tmpFile;
-            }
-            if (srcFile != null) {
-                if (loadWithBlockingIO(srcFile)) {
-                    if (writingMode == NON_BLOCKING) {
-                        if (writeToABFile(fastBuffer)) {
-                            info("recover from c file");
-                            hadWriteToABFile = true;
-                            deleteCFiles();
-                        } else {
-                            writingMode = ASYNC_BLOCKING;
-                        }
-                    }
-                } else {
-                    clearData();
-                    deleteCFiles();
-                }
-            } else {
-                // Handle the case:
-                // User opening with non-blocking mode at first, and change to blocking mode in later.
-                if (writingMode != NON_BLOCKING) {
-                    File aFile = new File(path, name + A_SUFFIX);
-                    File bFile = new File(path, name + B_SUFFIX);
-                    if (aFile.exists() && bFile.exists()) {
-                        tryBlockingIO(aFile, bFile);
-                    }
-                }
-            }
-        } catch (Exception e) {
-            error(e);
-        }
-        return hadWriteToABFile;
-    }
-
-    private boolean loadWithBlockingIO(File srcFile) throws IOException {
-        long fileLen = srcFile.length();
-        if (fileLen == 0 || fileLen > DATA_SIZE_LIMIT) {
-            return false;
-        }
-        int fileSize = (int) fileLen;
-        int capacity = getNewCapacity(PAGE_SIZE, fileSize);
-        FastBuffer buffer;
-        if (fastBuffer != null && fastBuffer.hb.length == capacity) {
-            buffer = fastBuffer;
-            buffer.position = 0;
-        } else {
-            buffer = new FastBuffer(new byte[capacity]);
-            fastBuffer = buffer;
-        }
-        Util.readBytes(srcFile, buffer.hb, fileSize);
-        int dataSize = buffer.getInt();
-        long sum = buffer.getLong();
-        dataEnd = DATA_START + dataSize;
-        if (dataSize >= 0 && (dataSize <= fileSize - DATA_START)
-                && sum == buffer.getChecksum(DATA_START, dataSize)
-                && parseData() == 0) {
-            checksum = sum;
-            return true;
-        }
-        return false;
-    }
-
-    private boolean writeToABFile(FastBuffer buffer) {
-        int fileLen = buffer.hb.length;
-        File aFile = new File(path, name + A_SUFFIX);
-        File bFile = new File(path, name + B_SUFFIX);
-        try {
-            if (!Util.makeFileIfNotExist(aFile) || !Util.makeFileIfNotExist(bFile)) {
-                throw new Exception(OPEN_FILE_FAILED);
-            }
-            RandomAccessFile aAccessFile = new RandomAccessFile(aFile, "rw");
-            RandomAccessFile bAccessFile = new RandomAccessFile(bFile, "rw");
-            aAccessFile.setLength(fileLen);
-            bAccessFile.setLength(fileLen);
-            aChannel = aAccessFile.getChannel();
-            bChannel = bAccessFile.getChannel();
-            aBuffer = aChannel.map(FileChannel.MapMode.READ_WRITE, 0, fileLen);
-            aBuffer.order(ByteOrder.LITTLE_ENDIAN);
-            bBuffer = bChannel.map(FileChannel.MapMode.READ_WRITE, 0, fileLen);
-            bBuffer.order(ByteOrder.LITTLE_ENDIAN);
-            aBuffer.put(buffer.hb, 0, dataEnd);
-            bBuffer.put(buffer.hb, 0, dataEnd);
-            return true;
-        } catch (Exception e) {
-            error(e);
-        }
-        return false;
-    }
-
-    private void checkValueSize(int size, boolean external) {
-        if (external) {
-            if (size != Util.NAME_SIZE) {
-                throw new IllegalStateException("name size not match");
-            }
-        } else {
-            if (size < 0 || size >= INTERNAL_LIMIT) {
-                throw new IllegalStateException("value size out of bound");
-            }
-        }
-    }
-
-    private void copyBuffer(MappedByteBuffer src, MappedByteBuffer des, int end) {
-        if (src.capacity() != des.capacity()) {
-            try {
-                FileChannel channel = (des == bBuffer) ? bChannel : aChannel;
-                MappedByteBuffer newBuffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, src.capacity());
-                newBuffer.order(ByteOrder.LITTLE_ENDIAN);
-                if (des == bBuffer) {
-                    bBuffer = newBuffer;
-                } else {
-                    aBuffer = newBuffer;
-                }
-                des = newBuffer;
-            } catch (IOException e) {
-                error(e);
-                toBlockingMode();
-                return;
-            }
-        }
-        src.rewind();
-        des.rewind();
-        src.limit(end);
-        des.put(src);
-        src.limit(src.capacity());
-    }
-
-    private int parseData() {
-        FastBuffer buffer = fastBuffer;
-        buffer.position = DATA_START;
-        try {
-            while (buffer.position < dataEnd) {
-                int start = buffer.position;
-                byte info = buffer.get();
-                byte type = (byte) (info & DataType.TYPE_MASK);
-                if (type < DataType.BOOLEAN || type > DataType.OBJECT) {
-                    throw new Exception(PARSE_DATA_FAILED);
-                }
-                int keySize = buffer.get() & 0xFF;
-                if (info < 0) {
-                    buffer.position += keySize;
-                    int valueSize = (type <= DataType.DOUBLE) ? TYPE_SIZE[type] : buffer.getShort() & 0xFFFF;
-                    fastBuffer.position += valueSize;
-                    countInvalid(start, fastBuffer.position);
-                    continue;
-                }
-                String key = buffer.getString(keySize);
-                int pos = buffer.position;
-                if (type <= DataType.DOUBLE) {
-                    switch (type) {
-                        case DataType.BOOLEAN:
-                            data.put(key, new BooleanContainer(pos, buffer.get() == 1));
-                            break;
-                        case DataType.INT:
-                            data.put(key, new IntContainer(pos, buffer.getInt()));
-                            break;
-                        case DataType.LONG:
-                            data.put(key, new LongContainer(pos, buffer.getLong()));
-                            break;
-                        case DataType.FLOAT:
-                            data.put(key, new FloatContainer(pos, buffer.getFloat()));
-                            break;
-                        default:
-                            data.put(key, new DoubleContainer(pos, buffer.getDouble()));
-                            break;
-                    }
-                } else {
-                    int size = buffer.getShort() & 0xFFFF;
-                    boolean external = (info & DataType.EXTERNAL_MASK) != 0;
-                    checkValueSize(size, external);
-                    switch (type) {
-                        case DataType.STRING:
-                            String str = buffer.getString(size);
-                            data.put(key, new StringContainer(start, pos + 2, str, size, external));
-                            break;
-                        case DataType.ARRAY:
-                            Object value = external ? buffer.getString(size) : buffer.getBytes(size);
-                            data.put(key, new ArrayContainer(start, pos + 2, value, size, external));
-                            break;
-                        default:
-                            if (external) {
-                                String fileName = buffer.getString(size);
-                                data.put(key, new ObjectContainer(start, pos + 2, fileName, size, true));
-                            } else {
-                                int tagSize = buffer.get() & 0xFF;
-                                String tag = buffer.getString(tagSize);
-                                Encoder encoder = encoderMap.get(tag);
-                                int objectSize = size - (tagSize + 1);
-                                if (objectSize < 0) {
-                                    throw new Exception(PARSE_DATA_FAILED);
-                                }
-                                if (encoder != null) {
-                                    try {
-                                        Object obj = encoder.decode(buffer.hb, buffer.position, objectSize);
-                                        if (obj != null) {
-                                            data.put(key, new ObjectContainer(start, pos + 2, obj, size, false));
-                                        }
-                                    } catch (Exception e) {
-                                        error(e);
-                                    }
-                                } else {
-                                    error("object with tag: " + tag + " without encoder");
-                                }
-                                buffer.position += objectSize;
-                            }
-                            break;
-                    }
-                }
-            }
-        } catch (Exception e) {
-            warning(e);
-            return -1;
-        }
-        if (buffer.position != dataEnd) {
-            warning(new Exception(PARSE_DATA_FAILED));
-            return -1;
-        }
-        return 0;
-    }
-
-    public synchronized boolean contains(String key) {
-        return data.containsKey(key);
-    }
-
-    public synchronized boolean getBoolean(String key) {
-        return getBoolean(key, false);
-    }
-
-    public synchronized boolean getBoolean(String key, boolean defValue) {
-        BooleanContainer c = (BooleanContainer) data.get(key);
-        return c == null ? defValue : c.value;
-    }
-
-    public int getInt(String key) {
-        return getInt(key, 0);
-    }
-
-    public synchronized int getInt(String key, int defValue) {
-        IntContainer c = (IntContainer) data.get(key);
-        return c == null ? defValue : c.value;
-    }
-
-    public float getFloat(String key) {
-        return getFloat(key, 0f);
-    }
-
-    public synchronized float getFloat(String key, float defValue) {
-        FloatContainer c = (FloatContainer) data.get(key);
-        return c == null ? defValue : c.value;
-    }
-
-    public synchronized long getLong(String key) {
-        LongContainer c = (LongContainer) data.get(key);
-        return c == null ? 0L : c.value;
-    }
-
-    public synchronized long getLong(String key, long defValue) {
-        LongContainer c = (LongContainer) data.get(key);
-        return c == null ? defValue : c.value;
-    }
-
-    public double getDouble(String key) {
-        return getDouble(key, 0D);
-    }
-
-    public synchronized double getDouble(String key, double defValue) {
-        DoubleContainer c = (DoubleContainer) data.get(key);
-        return c == null ? defValue : c.value;
-    }
-
-    public String getString(String key) {
-        return getString(key, "");
-    }
-
-    public synchronized String getString(String key, String defValue) {
-        StringContainer c = (StringContainer) data.get(key);
-        if (c != null) {
-            return c.external ? getStringFromFile(c) : (String) c.value;
-        }
-        return defValue;
-    }
-
-    private String getStringFromFile(StringContainer c) {
-        String fileName = (String) c.value;
-        File file = new File(path + name, fileName);
-        try {
-            byte[] bytes = Util.getBytes(file);
-            if (bytes != null) {
-                return (bytes.length == 0) ? "" : new String(bytes, StandardCharsets.UTF_8);
-            }
-        } catch (Exception e) {
-            error(e);
-        }
-        return "";
-    }
-
-    public byte[] getArray(String key) {
-        return getArray(key, EMPTY_ARRAY);
-    }
-
-    public synchronized byte[] getArray(String key, byte[] defValue) {
-        ArrayContainer c = (ArrayContainer) data.get(key);
-        if (c != null) {
-            return c.external ? getArrayFromFile(c) : (byte[]) c.value;
-        }
-        return defValue;
-    }
-
-    private byte[] getArrayFromFile(ArrayContainer c) {
-        File file = new File(path + name, (String) c.value);
-        try {
-            byte[] a = Util.getBytes(file);
-            return a != null ? a : EMPTY_ARRAY;
-        } catch (Exception e) {
-            error(e);
-        }
-        return EMPTY_ARRAY;
-    }
-
-    @SuppressWarnings("unchecked")
-    public synchronized <T> T getObject(String key) {
-        ObjectContainer c = (ObjectContainer) data.get(key);
-        if (c != null) {
-            return c.external ? (T) getObjectFromFile(c) : (T) c.value;
-        }
-        return null;
-    }
-
-    private Object getObjectFromFile(ObjectContainer c) {
-        File file = new File(path + name, (String) c.value);
-        try {
-            byte[] bytes = Util.getBytes(file);
-            if (bytes != null) {
-                int tagSize = bytes[0] & 0xFF;
-                String tag = new String(bytes, 1, tagSize, StandardCharsets.UTF_8);
-                Encoder encoder = encoderMap.get(tag);
-                if (encoder != null) {
-                    int offset = 1 + tagSize;
-                    return encoder.decode(bytes, offset, bytes.length - offset);
-                } else {
-                    warning(new Exception("No encoder for tag:" + tag));
-                }
-            } else {
-                warning(new Exception("Read object data failed"));
-            }
-        } catch (Exception e) {
-            error(e);
-        }
-        return null;
-    }
-
-    public synchronized Set<String> getStringSet(String key) {
-        return getObject(key);
-    }
-
-    public synchronized void putBoolean(String key, boolean value) {
-        checkKey(key);
-        BooleanContainer c = (BooleanContainer) data.get(key);
-        if (c == null) {
-            wrapHeader(key, DataType.BOOLEAN);
-            int offset = fastBuffer.position;
-            fastBuffer.put((byte) (value ? 1 : 0));
-            updateChange();
-            data.put(key, new BooleanContainer(offset, value));
-            checkIfCommit();
-        } else if (c.value != value) {
-            c.value = value;
-            updateBoolean((byte) (value ? 1 : 0), c.offset);
-            checkIfCommit();
-        }
-    }
-
-    public synchronized void putInt(String key, int value) {
-        checkKey(key);
-        IntContainer c = (IntContainer) data.get(key);
-        if (c == null) {
-            wrapHeader(key, DataType.INT);
-            int offset = fastBuffer.position;
-            fastBuffer.putInt(value);
-            updateChange();
-            data.put(key, new IntContainer(offset, value));
-            checkIfCommit();
-        } else if (c.value != value) {
-            long sum = (value ^ c.value) & 0xFFFFFFFFL;
-            c.value = value;
-            updateInt32(value, sum, c.offset);
-            checkIfCommit();
-        }
-    }
-
-    public synchronized void putFloat(String key, float value) {
-        checkKey(key);
-        FloatContainer c = (FloatContainer) data.get(key);
-        if (c == null) {
-            wrapHeader(key, DataType.FLOAT);
-            int offset = fastBuffer.position;
-            fastBuffer.putInt(Float.floatToRawIntBits(value));
-            updateChange();
-            data.put(key, new FloatContainer(offset, value));
-            checkIfCommit();
-        } else if (c.value != value) {
-            int newValue = Float.floatToRawIntBits(value);
-            long sum = (Float.floatToRawIntBits(c.value) ^ newValue) & 0xFFFFFFFFL;
-            c.value = value;
-            updateInt32(newValue, sum, c.offset);
-            checkIfCommit();
-        }
-    }
-
-    public synchronized void putLong(String key, long value) {
-        checkKey(key);
-        LongContainer c = (LongContainer) data.get(key);
-        if (c == null) {
-            wrapHeader(key, DataType.LONG);
-            int offset = fastBuffer.position;
-            fastBuffer.putLong(value);
-            updateChange();
-            data.put(key, new LongContainer(offset, value));
-            checkIfCommit();
-        } else if (c.value != value) {
-            long sum = value ^ c.value;
-            c.value = value;
-            updateInt64(value, sum, c.offset);
-            checkIfCommit();
-        }
-    }
-
-    public synchronized void putDouble(String key, double value) {
-        checkKey(key);
-        DoubleContainer c = (DoubleContainer) data.get(key);
-        if (c == null) {
-            wrapHeader(key, DataType.DOUBLE);
-            int offset = fastBuffer.position;
-            fastBuffer.putLong(Double.doubleToRawLongBits(value));
-            updateChange();
-            data.put(key, new DoubleContainer(offset, value));
-            checkIfCommit();
-        } else if (c.value != value) {
-            long newValue = Double.doubleToRawLongBits(value);
-            long sum = Double.doubleToRawLongBits(c.value) ^ newValue;
-            c.value = value;
-            updateInt64(newValue, sum, c.offset);
-            checkIfCommit();
-        }
-    }
-
-    public synchronized void putString(String key, String value) {
-        checkKey(key);
-        if (value == null) {
-            remove(key);
-        } else {
-            StringContainer c = (StringContainer) data.get(key);
-            if (value.length() * 3 < INTERNAL_LIMIT) {
-                // putString is a frequently operation,
-                // so we make some redundant code to speed up putString method.
-                fastPutString(key, value, c);
-            } else {
-                byte[] bytes = value.isEmpty() ? EMPTY_ARRAY : value.getBytes(StandardCharsets.UTF_8);
-                addOrUpdate(key, value, bytes, c, DataType.STRING);
-            }
-        }
-    }
-
-    public synchronized void putArray(String key, byte[] value) {
-        checkKey(key);
-        if (value == null) {
-            remove(key);
-        } else {
-            ArrayContainer c = (ArrayContainer) data.get(key);
-            addOrUpdate(key, value, value, c, DataType.ARRAY);
-        }
-    }
-
-    /**
-     * @param key     The name of the data to modify
-     * @param value   The new value
-     * @param encoder The encoder to encode value to byte[], encoder must register in  Builder.encoder(),
-     *                for decoding byte[] to object in next loading.
-     * @param <T>     Type of value
-     */
-    public synchronized <T> void putObject(String key, T value, Encoder<T> encoder) {
-        checkKey(key);
-        if (encoder == null) {
-            throw new IllegalArgumentException("Encoder is null");
-        }
-        String tag = encoder.tag();
-        if (tag == null || tag.isEmpty() || tag.length() > 50) {
-            throw new IllegalArgumentException("Invalid encoder tag:" + tag);
-        }
-        if (!encoderMap.containsKey(tag)) {
-            throw new IllegalArgumentException("Encoder hasn't been registered");
-        }
-
-        if (value == null) {
-            remove(key);
-            return;
-        }
-        byte[] obj = null;
-        try {
-            obj = encoder.encode(value);
-        } catch (Exception e) {
-            error(e);
-        }
-        if (obj == null) {
-            remove(key);
-            return;
-        }
-
-        // assemble object bytes
-        int tagSize = FastBuffer.getStringSize(tag);
-        FastBuffer buffer = new FastBuffer(1 + tagSize + obj.length);
-        buffer.put((byte) tagSize);
-        buffer.putString(tag);
-        buffer.putBytes(obj);
-        byte[] bytes = buffer.hb;
-
-        ObjectContainer c = (ObjectContainer) data.get(key);
-        addOrUpdate(key, value, bytes, c, DataType.OBJECT);
-    }
-
-    public synchronized void putStringSet(String key, Set<String> set) {
-        if (set == null) {
-            remove(key);
-        } else {
-            putObject(key, set, StringSetEncoder.INSTANCE);
-        }
-    }
-
-    public synchronized void remove(String key) {
-        BaseContainer container = data.get(key);
-        if (container != null) {
-            String oldFileName = null;
-            data.remove(key);
-            byte type = container.getType();
-            if (type <= DataType.DOUBLE) {
-                int keySize = FastBuffer.getStringSize(key);
-                int start = container.offset - (2 + keySize);
-                remove(type, start, container.offset + TYPE_SIZE[type]);
-            } else {
-                VarContainer c = (VarContainer) container;
-                remove(type, c.start, c.offset + c.valueSize);
-                oldFileName = c.external ? (String) c.value : null;
-            }
-            byte newByte = (byte) (type | DataType.DELETE_MASK);
-            if (writingMode == NON_BLOCKING) {
-                aBuffer.putLong(4, checksum);
-                aBuffer.put(removeStart, newByte);
-                bBuffer.putLong(4, checksum);
-                bBuffer.put(removeStart, newByte);
-            } else {
-                fastBuffer.putLong(4, checksum);
-            }
-            removeStart = 0;
-            if (oldFileName != null) {
-                Util.deleteFile(new File(path + name, oldFileName));
-            }
-            checkGC();
-            checkIfCommit();
-        }
-    }
-
-    public synchronized void clear() {
-        resetData();
-        if (writingMode != NON_BLOCKING) {
-            deleteCFiles();
-        }
-    }
-
-    public synchronized Map<String, Object> getAll() {
-        int size = data.size();
-        if (size == 0) {
-            return new HashMap<>();
-        }
-        Map<String, Object> result = new HashMap<>(size * 4 / 3 + 1);
-        for (Map.Entry<String, BaseContainer> entry : data.entrySet()) {
-            String key = entry.getKey();
-            BaseContainer c = entry.getValue();
-            Object value = null;
-            switch (c.getType()) {
-                case DataType.BOOLEAN:
-                    value = ((BooleanContainer) c).value;
-                    break;
-                case DataType.INT:
-                    value = ((IntContainer) c).value;
-                    break;
-                case DataType.FLOAT:
-                    value = ((FloatContainer) c).value;
-                    break;
-                case DataType.LONG:
-                    value = ((LongContainer) c).value;
-                    break;
-                case DataType.DOUBLE:
-                    value = ((DoubleContainer) c).value;
-                    break;
-                case DataType.STRING:
-                    StringContainer sc = (StringContainer) c;
-                    value = sc.external ? getStringFromFile(sc) : sc.value;
-                    break;
-                case DataType.ARRAY:
-                    ArrayContainer ac = (ArrayContainer) c;
-                    value = ac.external ? getArrayFromFile(ac) : ac.value;
-                    break;
-                case DataType.OBJECT:
-                    ObjectContainer oc = (ObjectContainer) c;
-                    value = oc.external ? getObjectFromFile(oc) : ((ObjectContainer) c).value;
-                    break;
-            }
-            result.put(key, value);
-        }
-        return result;
-    }
-
-    public void putAll(Map<String, Object> values) {
-        putAll(values, null);
-    }
-
-    /**
-     * Batch put objects.
-     * Only support type in [boolean, int, long, float, double, String, byte[], Set of String] and object with encoder.
-     *
-     * @param values   map of key to value
-     * @param encoders map of value Class to Encoder
-     */
-    public synchronized void putAll(Map<String, Object> values, Map<Class, Encoder> encoders) {
-        for (Map.Entry<String, Object> entry : values.entrySet()) {
-            String key = entry.getKey();
-            Object value = entry.getValue();
-            if (key != null && !key.isEmpty()) {
-                if (value instanceof String) {
-                    putString(key, (String) value);
-                } else if (value instanceof Boolean) {
-                    putBoolean(key, (Boolean) value);
-                } else if (value instanceof Integer) {
-                    putInt(key, (Integer) value);
-                } else if (value instanceof Long) {
-                    putLong(key, (Long) value);
-                } else if (value instanceof Float) {
-                    putFloat(key, (Float) value);
-                } else if (value instanceof Double) {
-                    putDouble(key, (Double) value);
-                } else if (value instanceof Set) {
-                    Set set = (Set) value;
-                    if (!set.isEmpty() && set.iterator().next() instanceof String) {
-                        //noinspection unchecked
-                        putStringSet(key, (Set<String>) value);
-                    }
-                } else if (value instanceof byte[]) {
-                    putArray(key, (byte[]) value);
-                } else {
-                    if (encoders != null) {
-                        Encoder encoder = encoders.get(value.getClass());
-                        if (encoder != null) {
-                            //noinspection unchecked
-                            putObject(key, value, encoder);
-                        } else {
-                            warning(new Exception("missing encoder for type:" + value.getClass()));
-                        }
-                    } else {
-                        warning(new Exception("missing encoders"));
-                    }
-                }
-            }
-        }
-    }
-
-    /**
-     * Forces any changes to be written to the storage device containing the mapped file.
-     * No need to call this unless what's had written is very import.
-     * The system crash or power off before data syncing to disk might make recently update loss.
-     */
-    public synchronized void force() {
-        if (writingMode == NON_BLOCKING) {
-            aBuffer.force();
-            bBuffer.force();
-        }
-    }
-
-    /**
-     * When you open file with mode of SYNC_BLOCKING or ASYNC_BLOCKING,
-     * It will auto commit after every putting or removing, by default.
-     * If you need to batch update several key-values, you could call this method at first,
-     * and call {@link #commit()} after updating, that method will recover {@link #autoCommit} to 'true' again.
-     */
-    public synchronized void disableAutoCommit() {
-        this.autoCommit = false;
-    }
-
-    public synchronized boolean commit() {
-        autoCommit = true;
-        return commitToCFile();
-    }
-
-    private void checkIfCommit() {
-        if (writingMode != NON_BLOCKING && autoCommit) {
-            commitToCFile();
-        }
-    }
-
-    private boolean commitToCFile() {
-        if (writingMode == ASYNC_BLOCKING) {
-            executor.execute(this::writeToCFile);
-        } else if (writingMode == SYNC_BLOCKING) {
-            return writeToCFile();
-        }
-        return true;
-    }
-
-    private synchronized boolean writeToCFile() {
-        try {
-            File tmpFile = new File(path, name + TEMP_SUFFIX);
-            if (Util.makeFileIfNotExist(tmpFile)) {
-                RandomAccessFile accessFile = new RandomAccessFile(tmpFile, "rw");
-                accessFile.setLength(dataEnd);
-                accessFile.write(fastBuffer.hb, 0, dataEnd);
-                accessFile.close();
-                File cFile = new File(path, name + C_SUFFIX);
-                if (!cFile.exists() || cFile.delete()) {
-                    if (tmpFile.renameTo(cFile)) {
-                        return true;
-                    } else {
-                        warning(new Exception("rename failed"));
-                    }
-                }
-            }
-        } catch (Exception e) {
-            error(e);
-        }
-        return false;
-    }
-
-    private void deleteCFiles() {
-        try {
-            Util.deleteFile(new File(path, name + C_SUFFIX));
-            Util.deleteFile(new File(path, name + TEMP_SUFFIX));
-        } catch (Exception e) {
-            error(e);
-        }
-    }
-
-    private void toBlockingMode() {
-        writingMode = ASYNC_BLOCKING;
-        Util.closeQuietly(aChannel);
-        Util.closeQuietly(bChannel);
-        aChannel = null;
-        bChannel = null;
-        aBuffer = null;
-        bBuffer = null;
-    }
-
-    private void resetData() {
-        if (writingMode == NON_BLOCKING) {
-            try {
-                resetBuffer(aBuffer);
-                resetBuffer(bBuffer);
-            } catch (IOException e) {
-                toBlockingMode();
-            }
-        }
-        clearData();
-        Util.deleteFile(new File(path + name));
-    }
-
-    private void resetBuffer(MappedByteBuffer buffer) throws IOException {
-        if (buffer.capacity() != PAGE_SIZE) {
-            FileChannel channel = buffer == aBuffer ? aChannel : bChannel;
-            channel.truncate(PAGE_SIZE);
-            MappedByteBuffer newBuffer = channel.map(FileChannel.MapMode.READ_WRITE, 0, PAGE_SIZE);
-            newBuffer.order(ByteOrder.LITTLE_ENDIAN);
-            if (buffer == aBuffer) {
-                aBuffer = newBuffer;
-            } else {
-                bBuffer = newBuffer;
-            }
-            buffer = newBuffer;
-        }
-        buffer.putInt(0, 0);
-        buffer.putLong(4, 0L);
-    }
-
-    private void clearData() {
-        dataEnd = DATA_START;
-        checksum = 0L;
-        clearInvalid();
-        data.clear();
-        if (fastBuffer == null || fastBuffer.hb.length != PAGE_SIZE) {
-            fastBuffer = new FastBuffer(PAGE_SIZE);
-        } else {
-            fastBuffer.putInt(0, 0);
-            fastBuffer.putLong(4, 0L);
-        }
-    }
-
-    private void checkKey(String key) {
-        if (key == null || key.isEmpty()) {
-            throw new IllegalArgumentException("key is empty");
-        }
-    }
-
-    private void checkKeySize(int keySize) {
-        if (keySize > 0xFF) {
-            throw new IllegalArgumentException("key's length must less than 256");
-        }
-    }
-
-    private void wrapHeader(String key, byte type) {
-        wrapHeader(key, type, TYPE_SIZE[type]);
-    }
-
-    private void wrapHeader(String key, byte type, int valueSize) {
-        int keySize = FastBuffer.getStringSize(key);
-        checkKeySize(keySize);
-        updateSize = 2 + keySize + valueSize;
-        preparePutBytes();
-        fastBuffer.put(type);
-        putKey(key, keySize);
-    }
-
-    private void updateChange() {
-        checksum ^= fastBuffer.getChecksum(updateStart, updateSize);
-        if (writingMode == NON_BLOCKING) {
-            // When size of changed data is more than 8 bytes,
-            // checksum might fail to check the integrity in small probability.
-            // So we make the dataLen to be negative,
-            // if crash happen when writing data to mmap memory,
-            // we can know that the writing was not completely.
-            aBuffer.putInt(0, -1);
-            syncABBuffer(aBuffer);
-            aBuffer.putInt(0, dataEnd - DATA_START);
-
-            // bBuffer doesn't need to mark dataLen's part before writing bytes,
-            // cause aBuffer has already written completely.
-            // We just need to have one file to be completely at least at any time.
-            syncABBuffer(bBuffer);
-        } else {
-            if (sizeChanged) {
-                fastBuffer.putInt(0, dataEnd - DATA_START);
-            }
-            fastBuffer.putLong(4, checksum);
-        }
-        sizeChanged = false;
-        removeStart = 0;
-        updateSize = 0;
-    }
-
-    private void syncABBuffer(MappedByteBuffer buffer) {
-        if (sizeChanged && buffer != aBuffer) {
-            buffer.putInt(0, dataEnd - DATA_START);
-        }
-        buffer.putLong(4, checksum);
-        if (removeStart != 0) {
-            buffer.put(removeStart, fastBuffer.hb[removeStart]);
-        }
-        if (updateSize != 0) {
-            buffer.position(updateStart);
-            buffer.put(fastBuffer.hb, updateStart, updateSize);
-        }
-    }
-
-    private int bytesThreshold() {
-        if (dataEnd <= (1 << 14)) {
-            return BASE_GC_BYTES_THRESHOLD;
-        } else {
-            return dataEnd <= (1 << 16) ? BASE_GC_BYTES_THRESHOLD << 1 : BASE_GC_BYTES_THRESHOLD << 2;
-        }
-    }
-
-    private void ensureSize(int allocate) {
-        int capacity = fastBuffer.hb.length;
-        int expected = dataEnd + allocate;
-        if (expected >= capacity) {
-            if (invalidBytes > allocate && invalidBytes > bytesThreshold()) {
-                gc(allocate);
-            } else {
-                int newCapacity = getNewCapacity(capacity, expected);
-                byte[] bytes = new byte[newCapacity];
-                System.arraycopy(fastBuffer.hb, 0, bytes, 0, dataEnd);
-                fastBuffer.hb = bytes;
-                if (writingMode == NON_BLOCKING) {
-                    try {
-                        aBuffer = aChannel.map(FileChannel.MapMode.READ_WRITE, 0, newCapacity);
-                        aBuffer.order(ByteOrder.LITTLE_ENDIAN);
-                        bBuffer = bChannel.map(FileChannel.MapMode.READ_WRITE, 0, newCapacity);
-                        bBuffer.order(ByteOrder.LITTLE_ENDIAN);
-                    } catch (IOException e) {
-                        error(new Exception(MAP_FAILED, e));
-                        fastBuffer.putInt(0, dataEnd - DATA_START);
-                        fastBuffer.putLong(4, checksum);
-                        toBlockingMode();
-                    }
-                }
-            }
-        }
-    }
-
-    private long shiftCheckSum(long checkSum, int offset) {
-        int shift = (offset & 7) << 3;
-        return (checkSum << shift) | (checkSum >>> (64 - shift));
-    }
-
-    private void updateBoolean(byte value, int offset) {
-        checksum ^= shiftCheckSum(1L, offset);
-        if (writingMode == NON_BLOCKING) {
-            aBuffer.putLong(4, checksum);
-            aBuffer.put(offset, value);
-            bBuffer.putLong(4, checksum);
-            bBuffer.put(offset, value);
-        } else {
-            fastBuffer.putLong(4, checksum);
-        }
-        fastBuffer.hb[offset] = value;
-    }
-
-    private void updateInt32(int value, long sum, int offset) {
-        checksum ^= shiftCheckSum(sum, offset);
-        if (writingMode == NON_BLOCKING) {
-            aBuffer.putLong(4, checksum);
-            aBuffer.putInt(offset, value);
-            bBuffer.putLong(4, checksum);
-            bBuffer.putInt(offset, value);
-        } else {
-            fastBuffer.putLong(4, checksum);
-        }
-        fastBuffer.putInt(offset, value);
-    }
-
-    private void updateInt64(long value, long sum, int offset) {
-        checksum ^= shiftCheckSum(sum, offset);
-        if (writingMode == NON_BLOCKING) {
-            aBuffer.putLong(4, checksum);
-            aBuffer.putLong(offset, value);
-            bBuffer.putLong(4, checksum);
-            bBuffer.putLong(offset, value);
-        } else {
-            fastBuffer.putLong(4, checksum);
-        }
-        fastBuffer.putLong(offset, value);
-    }
-
-    private void updateBytes(int offset, byte[] bytes) {
-        int size = bytes.length;
-        checksum ^= fastBuffer.getChecksum(offset, size);
-        fastBuffer.position = offset;
-        fastBuffer.putBytes(bytes);
-        checksum ^= fastBuffer.getChecksum(offset, size);
-        if (writingMode == NON_BLOCKING) {
-            aBuffer.putInt(0, -1);
-            aBuffer.putLong(4, checksum);
-            aBuffer.position(offset);
-            aBuffer.put(bytes);
-            aBuffer.putInt(0, dataEnd - DATA_START);
-            bBuffer.putLong(4, checksum);
-            bBuffer.position(offset);
-            bBuffer.put(bytes);
-        } else {
-            fastBuffer.putLong(4, checksum);
-        }
-    }
-
-    private void preparePutBytes() {
-        ensureSize(updateSize);
-        updateStart = dataEnd;
-        dataEnd += updateSize;
-        fastBuffer.position = updateStart;
-        sizeChanged = true;
-    }
-
-    private void putKey(String key, int keySize) {
-        fastBuffer.put((byte) keySize);
-        if (keySize == key.length()) {
-            //noinspection deprecation
-            key.getBytes(0, keySize, fastBuffer.hb, fastBuffer.position);
-            fastBuffer.position += keySize;
-        } else {
-            fastBuffer.putString(key);
-        }
-    }
-
-    private void putStringValue(String value, int valueSize) {
-        fastBuffer.putShort((short) valueSize);
-        if (valueSize == value.length()) {
-            //noinspection deprecation
-            value.getBytes(0, valueSize, fastBuffer.hb, fastBuffer.position);
-        } else {
-            fastBuffer.putString(value);
-        }
-    }
-
-    private void fastPutString(String key, String value, StringContainer c) {
-        int stringSize = FastBuffer.getStringSize(value);
-        if (c == null) {
-            int keySize = FastBuffer.getStringSize(key);
-            checkKeySize(keySize);
-            int preSize = 4 + keySize;
-            updateSize = preSize + stringSize;
-            preparePutBytes();
-            fastBuffer.put(DataType.STRING);
-            putKey(key, keySize);
-            putStringValue(value, stringSize);
-            data.put(key, new StringContainer(updateStart, updateStart + preSize, value, stringSize, false));
-            updateChange();
-        } else {
-            String oldFileName = null;
-            boolean needCheckGC = false;
-            int preSize = c.offset - c.start;
-            if (c.valueSize == stringSize) {
-                checksum ^= fastBuffer.getChecksum(c.offset, c.valueSize);
-                if (stringSize == value.length()) {
-                    //noinspection deprecation
-                    value.getBytes(0, stringSize, fastBuffer.hb, c.offset);
-                } else {
-                    fastBuffer.position = c.offset;
-                    fastBuffer.putString(value);
-                }
-                updateStart = c.offset;
-                updateSize = stringSize;
-            } else {
-                updateSize = preSize + stringSize;
-                preparePutBytes();
-                fastBuffer.put(DataType.STRING);
-                int keyBytes = preSize - 3;
-                System.arraycopy(fastBuffer.hb, c.start + 1, fastBuffer.hb, fastBuffer.position, keyBytes);
-                fastBuffer.position += keyBytes;
-                putStringValue(value, stringSize);
-
-                remove(DataType.STRING, c.start, c.offset + c.valueSize);
-                needCheckGC = true;
-                if (c.external) {
-                    oldFileName = (String) c.value;
-                }
-
-                c.external = false;
-                c.start = updateStart;
-                c.offset = updateStart + preSize;
-                c.valueSize = stringSize;
-            }
-            c.value = value;
-            updateChange();
-            if (needCheckGC) {
-                checkGC();
-            }
-            if (oldFileName != null) {
-                Util.deleteFile(new File(path + name, oldFileName));
-            }
-        }
-        checkIfCommit();
-    }
-
-    private void addOrUpdate(String key, Object value, byte[] bytes, VarContainer c, byte type) {
-        if (c == null) {
-            addObject(key, value, bytes, type);
-        } else {
-            if (c.external || c.valueSize != bytes.length) {
-                updateObject(key, value, bytes, c);
-            } else {
-                updateBytes(c.offset, bytes);
-                c.value = value;
-            }
-        }
-        checkIfCommit();
-    }
-
-    private void addObject(String key, Object value, byte[] bytes, byte type) {
-        int offset = saveArray(key, bytes, type);
-        if (offset != 0) {
-            int size;
-            Object v;
-            boolean external = tempExternalName != null;
-            if (external) {
-                size = Util.NAME_SIZE;
-                v = tempExternalName;
-                tempExternalName = null;
-            } else {
-                size = bytes.length;
-                v = value;
-            }
-            BaseContainer c;
-            if (type == DataType.STRING) {
-                c = new StringContainer(updateStart, offset, (String) v, size, external);
-            } else if (type == DataType.ARRAY) {
-                c = new ArrayContainer(updateStart, offset, v, size, external);
-            } else {
-                c = new ObjectContainer(updateStart, offset, v, size, external);
-            }
-            data.put(key, c);
-            updateChange();
-        }
-    }
-
-    private void updateObject(String key, Object value, byte[] bytes, VarContainer c) {
-        int offset = saveArray(key, bytes, c.getType());
-        if (offset != 0) {
-            String oldFileName = c.external ? (String) c.value : null;
-            remove(c.getType(), c.start, c.offset + c.valueSize);
-            boolean external = tempExternalName != null;
-            c.start = updateStart;
-            c.offset = offset;
-            c.external = external;
-            if (external) {
-                c.value = tempExternalName;
-                c.valueSize = Util.NAME_SIZE;
-                tempExternalName = null;
-            } else {
-                c.value = value;
-                c.valueSize = bytes.length;
-            }
-            updateChange();
-            checkGC();
-            if (oldFileName != null) {
-                Util.deleteFile(new File(path + name, oldFileName));
-            }
-        }
-    }
-
-    private int saveArray(String key, byte[] value, byte type) {
-        tempExternalName = null;
-        if (value.length < INTERNAL_LIMIT) {
-            return wrapArray(key, value, type);
-        } else {
-            info("large value, key: " + key + ", size: " + value.length);
-            String fileName = Util.randomName();
-            File file = new File(path + name, fileName);
-            if (Util.saveBytes(file, value)) {
-                tempExternalName = fileName;
-                byte[] fileNameBytes = new byte[Util.NAME_SIZE];
-                //noinspection deprecation
-                fileName.getBytes(0, Util.NAME_SIZE, fileNameBytes, 0);
-                return wrapArray(key, fileNameBytes, (byte) (type | DataType.EXTERNAL_MASK));
-            } else {
-                error("save large value failed");
-                return 0;
-            }
-        }
-    }
-
-    private int wrapArray(String key, byte[] value, byte type) {
-        wrapHeader(key, type, 2 + value.length);
-        fastBuffer.putShort((short) value.length);
-        int offset = fastBuffer.position;
-        fastBuffer.putBytes(value);
-        return offset;
-    }
-
-    private void remove(byte type, int start, int end) {
-        countInvalid(start, end);
-        byte newByte = (byte) (type | DataType.DELETE_MASK);
-        byte oldByte = fastBuffer.hb[start];
-        int shift = (start & 7) << 3;
-        checksum ^= ((long) (newByte ^ oldByte) & 0xFF) << shift;
-        fastBuffer.hb[start] = newByte;
-        removeStart = start;
-    }
-
-    private void checkGC() {
-        if (invalidBytes >= (bytesThreshold() << 1)
-                || invalids.size() >= (dataEnd < (1 << 14) ? BASE_GC_KEYS_THRESHOLD : BASE_GC_KEYS_THRESHOLD << 1)) {
-            gc(0);
-        }
-    }
-
-    private void mergeInvalids() {
-        int i = invalids.size() - 1;
-        Segment p = invalids.get(i);
-        while (i > 0) {
-            Segment q = invalids.get(--i);
-            if (p.start == q.end) {
-                q.end = p.end;
-                invalids.remove(i + 1);
-            }
-            p = q;
-        }
-    }
-
-    void gc(int allocate) {
-        Collections.sort(invalids);
-        mergeInvalids();
-
-        final Segment head = invalids.get(0);
-        final int gcStart = head.start;
-        final int newDataEnd = dataEnd - invalidBytes;
-        final int newDataSize = newDataEnd - DATA_START;
-        final int updateSize = newDataEnd - gcStart;
-        final int gcSize = dataEnd - gcStart;
-        final boolean fullChecksum = newDataSize < gcSize + updateSize;
-        if (!fullChecksum) {
-            checksum ^= fastBuffer.getChecksum(gcStart, gcSize);
-        }
-        // compact and record shift
-        int n = invalids.size();
-        final int remain = dataEnd - invalids.get(n - 1).end;
-        int shiftCount = (remain > 0) ? n : n - 1;
-        int[] srcToShift = new int[shiftCount << 1];
-        int desPos = head.start;
-        int srcPos = head.end;
-        for (int i = 1; i < n; i++) {
-            Segment q = invalids.get(i);
-            int size = q.start - srcPos;
-            System.arraycopy(fastBuffer.hb, srcPos, fastBuffer.hb, desPos, size);
-            int index = (i - 1) << 1;
-            srcToShift[index] = srcPos;
-            srcToShift[index + 1] = srcPos - desPos;
-            desPos += size;
-            srcPos = q.end;
-        }
-        if (remain > 0) {
-            System.arraycopy(fastBuffer.hb, srcPos, fastBuffer.hb, desPos, remain);
-            int index = (n - 1) << 1;
-            srcToShift[index] = srcPos;
-            srcToShift[index + 1] = srcPos - desPos;
-        }
-        clearInvalid();
-
-        if (fullChecksum) {
-            checksum = fastBuffer.getChecksum(DATA_START, newDataEnd - DATA_START);
-        } else {
-            checksum ^= fastBuffer.getChecksum(gcStart, newDataEnd - gcStart);
-        }
-        dataEnd = newDataEnd;
-
-        if (writingMode == NON_BLOCKING) {
-            aBuffer.putInt(0, -1);
-            aBuffer.putLong(4, checksum);
-            aBuffer.position(gcStart);
-            aBuffer.put(fastBuffer.hb, gcStart, updateSize);
-            aBuffer.putInt(0, newDataSize);
-            bBuffer.putInt(0, newDataSize);
-            bBuffer.putLong(4, checksum);
-            bBuffer.position(gcStart);
-            bBuffer.put(fastBuffer.hb, gcStart, updateSize);
-        } else {
-            fastBuffer.putInt(0, newDataSize);
-            fastBuffer.putLong(4, checksum);
-        }
-
-        updateOffset(gcStart, srcToShift);
-        int expectedEnd = newDataEnd + allocate;
-        if (fastBuffer.hb.length - expectedEnd > TRUNCATE_THRESHOLD) {
-            truncate(expectedEnd);
-        }
-        info(GC_FINISH);
-    }
-
-    private void updateOffset(int gcStart, int[] srcToShift) {
-        Collection<BaseContainer> values = data.values();
-        for (BaseContainer c : values) {
-            if (c.offset > gcStart) {
-                int index = Util.binarySearch(srcToShift, c.offset);
-                int shift = srcToShift[(index << 1) + 1];
-                c.offset -= shift;
-                if (c.getType() >= DataType.STRING) {
-                    ((VarContainer) c).start -= shift;
-                }
-            }
-        }
-    }
-
-    private void truncate(int expectedEnd) {
-        // reserve at least one page space
-        int newCapacity = getNewCapacity(PAGE_SIZE, expectedEnd + PAGE_SIZE);
-        if (newCapacity >= fastBuffer.hb.length) {
-            return;
-        }
-        byte[] bytes = new byte[newCapacity];
-        System.arraycopy(fastBuffer.hb, 0, bytes, 0, dataEnd);
-        fastBuffer.hb = bytes;
-        if (writingMode == NON_BLOCKING) {
-            try {
-                aChannel.truncate(newCapacity);
-                aBuffer = aChannel.map(FileChannel.MapMode.READ_WRITE, 0, newCapacity);
-                aBuffer.order(ByteOrder.LITTLE_ENDIAN);
-                bChannel.truncate(newCapacity);
-                bBuffer = bChannel.map(FileChannel.MapMode.READ_WRITE, 0, newCapacity);
-                bBuffer.order(ByteOrder.LITTLE_ENDIAN);
-            } catch (IOException e) {
-                error(new Exception(MAP_FAILED, e));
-                toBlockingMode();
-            }
-        }
-        info(TRUNCATE_FINISH);
-    }
-
-    private int getNewCapacity(int capacity, int expected) {
-        if (expected > DATA_SIZE_LIMIT) {
-            throw new IllegalStateException("data size out of limit");
-        }
-        if (expected <= PAGE_SIZE) {
-            return PAGE_SIZE;
-        } else {
-            while (capacity < expected) {
-                if (capacity <= DOUBLE_LIMIT) {
-                    capacity <<= 1;
-                } else {
-                    capacity += DOUBLE_LIMIT;
-                }
-            }
-            return capacity;
-        }
-    }
-
-    private void countInvalid(int start, int end) {
-        invalidBytes += (end - start);
-        invalids.add(new Segment(start, end));
-    }
-
-    private void clearInvalid() {
-        invalidBytes = 0;
-        invalids.clear();
-    }
-
-    private static class Segment implements Comparable<Segment> {
-        final int start;
-        int end;
-
-        Segment(int start, int end) {
-            this.start = start;
-            this.end = end;
-        }
-
-        @Override
-        public int compareTo(Segment o) {
-            return start - o.start;
-        }
-    }
-
-    private void error(String message) {
-        if (logger != null) {
-            logger.e(name, new Exception(message));
-        }
-    }
-
-    private void error(Exception e) {
-        if (logger != null) {
-            logger.e(name, e);
-        }
-    }
-
-    private void warning(Exception e) {
-        if (logger != null) {
-            logger.w(name, e);
-        }
-    }
-
-    private void info(String message) {
-        if (logger != null) {
-            logger.i(name, message);
-        }
-    }
-
-    // All params of Logger && Encoder are not null.
-    public interface Logger {
-        void i(String name, String message);
-
-        void w(String name, Exception e);
-
-        void e(String name, Exception e);
-    }
-
-    public interface Encoder<T> {
-        String tag();
-
-        byte[] encode(T obj);
-
-        // bytes is not null (The caller had checked)
-        T decode(byte[] bytes, int offset, int length);
-    }
-
-    public static class Builder {
-        private static final Map<String, FastKV> INSTANCE_MAP = new ConcurrentHashMap<>();
-        private final String path;
-        private final String name;
-        private Encoder[] encoders;
-        private int writingMode = NON_BLOCKING;
-
-        public Builder(String path, String name) {
-            if (path == null || path.isEmpty()) {
-                throw new IllegalArgumentException("path is empty");
-            }
-            if (name == null || name.isEmpty()) {
-                throw new IllegalArgumentException("name is empty");
-            }
-            this.path = path.endsWith("/") ? path : (path + '/');
-            this.name = name;
-        }
-
-        /**
-         * Set obj Encoders
-         *
-         * @param encoders The encoder array to decode the bytes to obj.
-         * @return the builder
-         */
-        public Builder encoder(Encoder[] encoders) {
-            this.encoders = encoders;
-            return this;
-        }
-
-        /**
-         * Assigned writing mode to SYNC_BLOCKING.
-         * <p>
-         * In non-blocking mode (write data with mmap),
-         * it might loss update if the system crash or power off before flush data to disk.
-         * You could use {@link #force()} to avoid loss update, or use SYNC_BLOCKING mode.
-         * <p>
-         * In blocking mode, every update will write all data to the file, which is expensive cost.
-         * <p>
-         * So it's recommended to use blocking mode only if the data is every important.
-         * <p>
-         *
-         * @return the builder
-         */
-        public Builder blocking() {
-            writingMode = SYNC_BLOCKING;
-            return this;
-        }
-
-        /**
-         * Similar to {@link #blocking()}, but put writing task to async thread.
-         *
-         * @return the builder
-         */
-        public Builder asyncBlocking() {
-            writingMode = ASYNC_BLOCKING;
-            return this;
-        }
-
-        public FastKV build() {
-            String key = path + name;
-            FastKV kv = INSTANCE_MAP.get(key);
-            if (kv == null) {
-                synchronized (Builder.class) {
-                    kv = INSTANCE_MAP.get(key);
-                    if (kv == null) {
-                        kv = new FastKV(path, name, encoders, writingMode);
-                        INSTANCE_MAP.put(key, kv);
-                    }
-                }
-            }
-            return kv;
-        }
-    }
-
-    @Override
-    public synchronized String toString() {
-        return "FastKV: path:" + path + " name:" + name;
-    }
-}
Index: src/main/java/cn/xihan/http/exception/CancelException.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/exception/CancelException.java b/src/main/java/cn/xihan/http/exception/CancelException.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/exception/CancelException.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,18 +0,0 @@
-package cn.xihan.http.exception;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/06/25
- *    desc   : 请求取消异常
- */
-public final class CancelException extends HttpException {
-
-    public CancelException(String message) {
-        super(message);
-    }
-
-    public CancelException(String message, Throwable cause) {
-        super(message, cause);
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/listener/OnUpdateListener.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/listener/OnUpdateListener.java b/src/main/java/cn/xihan/http/listener/OnUpdateListener.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/listener/OnUpdateListener.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,25 +0,0 @@
-package cn.xihan.http.listener;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/08/15
- *    desc   : 带上传进度回调的监听器
- */
-public interface OnUpdateListener<T> extends OnHttpListener<T> {
-
-    /**
-     * 上传字节改变
-     *
-     * @param totalByte             总字节数
-     * @param updateByte            已上传字节数
-     */
-    default void onByte(long totalByte, long updateByte) {}
-
-    /**
-     * 上传进度改变
-     *
-     * @param progress          上传进度值（0-100）
-     */
-    void onProgress(int progress);
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/exception/NullBodyException.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/exception/NullBodyException.java b/src/main/java/cn/xihan/http/exception/NullBodyException.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/exception/NullBodyException.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,18 +0,0 @@
-package cn.xihan.http.exception;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/12/24
- *    desc   : 空实体异常
- */
-public final class NullBodyException extends HttpException {
-
-    public NullBodyException(String message) {
-        super(message);
-    }
-
-    public NullBodyException(String message, Throwable cause) {
-        super(message, cause);
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/model/HttpData.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/model/HttpData.java b/src/main/java/cn/xihan/http/model/HttpData.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/model/HttpData.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,43 +0,0 @@
-package cn.xihan.http.model;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/05/19
- *    desc   : 统一接口数据结构
- */
-public class HttpData<T> {
-
-    /** 返回码 */
-    private int errorCode;
-    /** 提示语 */
-    private String errorMsg;
-    /** 数据 */
-    private T data;
-
-    public int getCode() {
-        return errorCode;
-    }
-
-    public String getMessage() {
-        return errorMsg;
-    }
-
-    public T getData() {
-        return data;
-    }
-
-    /**
-     * 是否请求成功
-     */
-    public boolean isRequestSucceed() {
-        return errorCode == 0;
-    }
-
-    /**
-     * 是否 Token 失效
-     */
-    public boolean isTokenFailure() {
-        return errorCode == 1001;
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/EasyHttp.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/EasyHttp.java b/src/main/java/cn/xihan/http/EasyHttp.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/EasyHttp.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,126 +0,0 @@
-package cn.xihan.http;
-
-
-
-import cn.xihan.http.request.*;
-import okhttp3.Call;
-import okhttp3.OkHttpClient;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/05/19
- *    desc   : 网络请求类
- */
-@SuppressWarnings("unused")
-public final class EasyHttp {
-
-    /**
-     * Get 请求
-     */
-    public static GetRequest get() {
-        return new GetRequest();
-    }
-
-    /**
-     * Post 请求
-     */
-    public static PostRequest post() {
-        return new PostRequest();
-    }
-
-    /**
-     * Head 请求
-     */
-    public static HeadRequest head() {
-        return new HeadRequest();
-    }
-
-    /**
-     * Delete 请求
-     */
-    public static DeleteRequest delete() {
-        return new DeleteRequest();
-    }
-
-    /**
-     * Put 请求
-     */
-    public static PutRequest put() {
-        return new PutRequest();
-    }
-
-    /**
-     * Patch 请求
-     */
-    public static PatchRequest patch() {
-        return new PatchRequest();
-    }
-
-    /**
-     * Options 请求
-     */
-    public static OptionsRequest options() {
-        return new OptionsRequest();
-    }
-
-    /**
-     * Trace 请求
-     */
-    public static TraceRequest trace() {
-        return new TraceRequest();
-    }
-
-    /**
-     * 下载请求
-     */
-    public static DownloadRequest download() {
-        return new DownloadRequest();
-    }
-
-    /**
-     * 根据 TAG 取消请求任务
-     */
-    public static void cancel(Object tag) {
-        cancel(EasyUtils.getObjectTag(tag));
-    }
-
-    public static void cancel(String tag) {
-        if (tag == null) {
-            return;
-        }
-
-        OkHttpClient client = EasyConfig.getInstance().getClient();
-
-        // 清除排队等候的任务
-        for (Call call : client.dispatcher().queuedCalls()) {
-            if (tag.equals(call.request().tag())) {
-                call.cancel();
-            }
-        }
-
-        // 清除正在执行的任务
-        for (Call call : client.dispatcher().runningCalls()) {
-            if (tag.equals(call.request().tag())) {
-                call.cancel();
-            }
-        }
-    }
-
-    /**
-     * 清除所有请求任务
-     */
-    public static void cancel() {
-        OkHttpClient client = EasyConfig.getInstance().getClient();
-
-        // 清除排队等候的任务
-        for (Call call : client.dispatcher().queuedCalls()) {
-            call.cancel();
-        }
-
-        // 清除正在执行的任务
-        for (Call call : client.dispatcher().runningCalls()) {
-            call.cancel();
-        }
-    }
-}
\ No newline at end of file
Index: FastKv/src/main/java/cn/xihan/fastkv/LimitExecutor.java
===================================================================
diff --git a/FastKv/src/main/java/cn/xihan/fastkv/LimitExecutor.java b/FastKv/src/main/java/cn/xihan/fastkv/LimitExecutor.java
deleted file mode 100644
--- a/FastKv/src/main/java/cn/xihan/fastkv/LimitExecutor.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,43 +0,0 @@
-package cn.xihan.fastkv;
-
-
-
-import java.util.concurrent.Executor;
-
-/**
- * Use for duplicate tasks.
- * Only one task at most can wait to be executed.
- */
-public class LimitExecutor implements Executor {
-    private Runnable mActive;
-    private Runnable mWaiting;
-
-    public synchronized void execute(final Runnable r) {
-        if (mActive == null) {
-            mActive = wrapTask(r);
-            FastKVConfig.getExecutor().execute(mActive);
-        } else {
-            if (mWaiting == null) {
-                mWaiting = wrapTask(r);
-            }
-        }
-    }
-
-    private Runnable wrapTask(Runnable r) {
-        return () -> {
-            try {
-                r.run();
-            } finally {
-                scheduleNext();
-            }
-        };
-    }
-
-    private synchronized void scheduleNext() {
-        mActive = mWaiting;
-        mWaiting = null;
-        if (mActive != null) {
-            FastKVConfig.getExecutor().execute(mActive);
-        }
-    }
-}
Index: GsonFactory/src/main/java/cn/xihan/gson/factory/data/BigDecimalTypeAdapter.java
===================================================================
diff --git a/GsonFactory/src/main/java/cn/xihan/gson/factory/data/BigDecimalTypeAdapter.java b/GsonFactory/src/main/java/cn/xihan/gson/factory/data/BigDecimalTypeAdapter.java
deleted file mode 100644
--- a/GsonFactory/src/main/java/cn/xihan/gson/factory/data/BigDecimalTypeAdapter.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,41 +0,0 @@
-package cn.xihan.gson.factory.data;
-
-import com.google.gson.TypeAdapter;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonWriter;
-
-import java.io.IOException;
-import java.math.BigDecimal;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/GsonFactory">https://github.com/getActivity/GsonFactory</a>
- *    time   : 2021/01/01
- *    desc   : BigDecimal 类型解析适配器，参考：{@link com.google.gson.internal.bind.TypeAdapters#BIG_DECIMAL}
- */
-public class BigDecimalTypeAdapter extends TypeAdapter<BigDecimal> {
-
-    @Override
-    public BigDecimal read(JsonReader in) throws IOException {
-        switch (in.peek()) {
-            case NUMBER:
-            case STRING:
-                String result = in.nextString();
-                if (result == null || "".equals(result)) {
-                    return new BigDecimal(0);
-                }
-                return new BigDecimal(result);
-            case NULL:
-                in.nextNull();
-                return null;
-            default:
-                in.skipValue();
-                return null;
-        }
-    }
-
-    @Override
-    public void write(JsonWriter out, BigDecimal value) throws IOException {
-        out.value(value);
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/request/HttpRequest.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/request/HttpRequest.java b/src/main/java/cn/xihan/http/request/HttpRequest.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/request/HttpRequest.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,563 +0,0 @@
-package cn.xihan.http.request;
-
-
-
-import java.io.IOException;
-import java.lang.reflect.Field;
-import java.lang.reflect.Modifier;
-import java.lang.reflect.Type;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-import java.util.Map;
-import java.util.concurrent.TimeUnit;
-
-import cn.xihan.http.EasyConfig;
-import cn.xihan.http.EasyHttp;
-import cn.xihan.http.EasyLog;
-import cn.xihan.http.EasyUtils;
-import cn.xihan.http.annotation.HttpHeader;
-import cn.xihan.http.annotation.HttpIgnore;
-import cn.xihan.http.annotation.HttpRename;
-import cn.xihan.http.callback.NormalCallback;
-import cn.xihan.http.config.*;
-
-import cn.xihan.http.listener.OnHttpListener;
-import cn.xihan.http.model.*;
-import okhttp3.CacheControl;
-import okhttp3.Call;
-import okhttp3.Request;
-import okhttp3.Response;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/07/20
- *    desc   : 所有请求方式的基类
- */
-@SuppressWarnings("unchecked")
-public abstract class HttpRequest<T extends HttpRequest<?>> {
-
-    /** 请求接口配置 */
-    private IRequestApi mRequestApi;
-    /** 接口主机地址 */
-    private IRequestHost mRequestHost = EasyConfig.getInstance().getServer();
-    /** 提交参数类型 */
-    private IRequestType mRequestType = EasyConfig.getInstance().getServer();
-    /** 接口缓存方式 */
-    private IRequestCache mRequestCache = EasyConfig.getInstance().getServer();
-    /** OkHttp 客户端 */
-    private IRequestClient mRequestClient = EasyConfig.getInstance().getServer();
-    /** 请求处理策略 */
-    private IRequestHandler mRequestHandler = EasyConfig.getInstance().getHandler();
-    /** 请求拦截策略 */
-    private IRequestInterceptor mRequestInterceptor = EasyConfig.getInstance().getInterceptor();
-
-    /** 请求执行代理类 */
-    private CallProxy mCallProxy;
-
-    /** 请求标记 */
-    private String mTag;
-
-    /** 请求延迟 */
-    private long mDelayMillis;
-
-    public HttpRequest() {
-
-    }
-
-    public T api(Class<? extends IRequestApi> api) {
-        try {
-            return api(api.newInstance());
-        } catch (InstantiationException | IllegalAccessException e) {
-            throw new RuntimeException(e);
-        }
-    }
-
-    public T api(String api) {
-        return api(new RequestApi(api));
-    }
-
-    /**
-     * 设置请求配置
-     */
-    public T api(IRequestApi api) {
-        mRequestApi = api;
-        if (api instanceof IRequestHost) {
-            mRequestHost = (IRequestHost) api;
-        }
-        if (api instanceof IRequestClient) {
-            mRequestClient = (IRequestClient) api;
-        }
-        if (api instanceof IRequestType) {
-            mRequestType = (IRequestType) api;
-        }
-        if (api instanceof IRequestCache) {
-            mRequestCache = (IRequestCache) api;
-        }
-        if (api instanceof IRequestHandler) {
-            mRequestHandler = (IRequestHandler) api;
-        }
-        if (api instanceof IRequestInterceptor) {
-            mRequestInterceptor = (IRequestInterceptor) api;
-        }
-        return (T) this;
-    }
-
-    public T server(Class<? extends IRequestServer> api) {
-        try {
-            return server(api.newInstance());
-        } catch (InstantiationException | IllegalAccessException e) {
-            throw new RuntimeException(e);
-        }
-    }
-
-    public T server(String host) {
-        return server(new RequestServer(host));
-    }
-
-    /**
-     * 替换默认的服务器配器（推荐使用 api 的方式来替代 server，具体实现可见 api 方法源码）
-     */
-    public T server(IRequestServer server) {
-        mRequestHost = server;
-        mRequestClient = server;
-        mRequestType = server;
-        mRequestCache = server;
-        return (T) this;
-    }
-
-    /**
-     * 替换默认的请求处理策略
-     */
-    public T handler(IRequestHandler handler) {
-        mRequestHandler = handler;
-        return (T) this;
-    }
-
-    /**
-     * 替换默认的拦截器策略
-     */
-    public T interceptor(IRequestInterceptor interceptor) {
-        mRequestInterceptor = interceptor;
-        return (T) this;
-    }
-
-    public T delay(long delay, TimeUnit unit) {
-        return delay(unit.toMillis(delay));
-    }
-
-    /**
-     * 设置请求延迟执行
-     *
-     * @param delayMillis       延迟毫秒数
-     */
-    public T delay(long delayMillis) {
-        mDelayMillis = delayMillis;
-        return (T) this;
-    }
-
-    /**
-     * 设置请求的标记（可用于 {@link EasyHttp#cancel(String)}）
-     */
-    public T tag(Object tag) {
-        return tag(EasyUtils.getObjectTag(tag));
-    }
-
-    public T tag(String tag) {
-        mTag = tag;
-        return (T) this;
-    }
-
-    /**
-     * 创建连接对象
-     */
-
-    protected Call createCall() {
-
-        BodyType type = mRequestType.getBodyType();
-
-        HttpParams params = new HttpParams();
-        HttpHeaders headers = new HttpHeaders();
-
-        List<Field> fields = new ArrayList<>();
-
-        Class<?> clazz = mRequestApi.getClass();
-        do {
-            Field[] declaredFields = clazz.getDeclaredFields();
-            fields.addAll(0, Arrays.asList(declaredFields));
-            // 遍历获取父类的字段
-            clazz = clazz.getSuperclass();
-        } while (clazz != null && !Object.class.equals(clazz));
-
-        // 当前请求是否存在流参数
-        params.setMultipart(EasyUtils.isMultipartParameter(fields));
-
-        // 如果参数中包含流参数并且当前请求方式不是表单的话
-        if (params.isMultipart() && type != BodyType.FORM) {
-            // 就强制设置成以表单形式提交参数
-            type = BodyType.FORM;
-        }
-
-        for (Field field : fields) {
-            // 允许访问私有字段
-            field.setAccessible(true);
-
-            int modifiers = field.getModifiers();
-            // 如果这是一个常量字段，则直接忽略掉，例如 Parcelable 接口中的 CREATOR 字段
-            // https://github.com/getActivity/EasyHttp/issues/112
-            if (Modifier.isStatic(modifiers) && Modifier.isFinal(modifiers)) {
-                continue;
-            }
-
-            try {
-                // 获取字段的对象
-                Object value = field.get(mRequestApi);
-
-                // 获取字段的名称
-                String key;
-                HttpRename annotation = field.getAnnotation(HttpRename.class);
-                if (annotation != null) {
-                    key = annotation.value();
-                } else {
-                    key = field.getName();
-                    // 如果是内部类则会出现一个字段名为 this$0 的外部类对象，会导致无限递归，这里要忽略掉，如果使用静态内部类则不会出现这个问题
-                    // 和规避 Kotlin 自动生成的伴生对象：https://github.com/getActivity/EasyHttp/issues/15
-                    if (key.matches("this\\$\\d+") || "Companion".equals(key)) {
-                        continue;
-                    }
-                }
-
-                // 如果这个字段需要忽略，则进行忽略
-                if (field.isAnnotationPresent(HttpIgnore.class)) {
-                    if (field.isAnnotationPresent(HttpHeader.class)) {
-                        headers.remove(key);
-                    } else {
-                        params.remove(key);
-                    }
-                    continue;
-                }
-
-                // 前提是这个字段值不能为空（基本数据类型有默认的值，而对象默认的值为 null）
-                if (value == null) {
-                    // 遍历下一个字段
-                    continue;
-                }
-
-                // 如果这是一个请求头参数
-                if (field.isAnnotationPresent(HttpHeader.class)) {
-                    addHttpHeaders(headers, key, value);
-                    continue;
-                }
-
-                addHttpParams(params, key, value, type);
-
-            } catch (IllegalAccessException e) {
-                EasyLog.printThrowable(this, e);
-            }
-        }
-
-        String url = mRequestHost.getHost() + mRequestApi.getApi();
-        if (mRequestInterceptor != null) {
-            mRequestInterceptor.interceptArguments(this, params, headers);
-        }
-
-        Request request = createRequest(url, mTag, params, headers, type);
-
-        if (mRequestInterceptor != null) {
-            request = mRequestInterceptor.interceptRequest(this, request);
-        }
-        if (request == null) {
-            throw new NullPointerException("The request object cannot be empty");
-        }
-        return mRequestClient.getOkHttpClient().newCall(request);
-    }
-
-    /**
-     * 执行异步请求
-     */
-    public void request(OnHttpListener<?> listener) {
-        if (mDelayMillis > 0) {
-            // 打印请求延迟时间
-            EasyLog.printKeyValue(this, "RequestDelay", String.valueOf(mDelayMillis));
-        }
-
-        StackTraceElement[] stackTrace = new Throwable().getStackTrace();
-        EasyUtils.postDelayed(() -> {
-
-            EasyLog.printStackTrace(this, stackTrace);
-
-            mCallProxy = new CallProxy(createCall());
-            new NormalCallback(this)
-                    .setListener(listener)
-                    .setCall(mCallProxy)
-                    .start();
-
-        }, mDelayMillis);
-    }
-
-    /**
-     * 执行同步请求
-     * @param responseClass                 需要解析泛型的对象
-     * @return                              返回解析完成的对象
-     * @throws Exception                    如果请求失败或者解析失败则抛出异常
-     */
-    public <Bean> Bean execute(ResponseClass<Bean> responseClass) throws Exception {
-
-        if (mDelayMillis > 0) {
-            // 打印请求延迟时间
-            EasyLog.printKeyValue(this, "RequestDelay", String.valueOf(mDelayMillis));
-            Thread.sleep(mDelayMillis);
-        }
-
-
-        EasyLog.printStackTrace(this, new Throwable().getStackTrace());
-
-        Type reflectType = mRequestHandler.getType(responseClass);
-
-        // 必须将 Call 对象创建放到这里来，否则无法显示请求日志
-        mCallProxy = new CallProxy(createCall());
-
-        CacheMode cacheMode = getRequestCache().getCacheMode();
-        if (cacheMode == CacheMode.USE_CACHE_ONLY ||
-                cacheMode == CacheMode.USE_CACHE_FIRST) {
-            try {
-                Object result = mRequestHandler.readCache(this, reflectType, mRequestCache.getCacheTime());
-                EasyLog.printLog(this, "ReadCache result：" + result);
-                if (cacheMode == CacheMode.USE_CACHE_FIRST) {
-                    // 使用异步请求来刷新缓存
-                    new NormalCallback(this)
-                            .setCall(mCallProxy)
-                            .start();
-                }
-                if (result != null) {
-                    return (Bean) result;
-                }
-            } catch (Exception cacheException) {
-                EasyLog.printLog(this, "ReadCache error");
-                EasyLog.printThrowable(this, cacheException);
-            }
-        }
-
-        try {
-            Response response = mCallProxy.execute();
-            Object result = mRequestHandler.requestSucceed(this, response, reflectType);
-
-            if (cacheMode == CacheMode.USE_CACHE_ONLY || cacheMode == CacheMode.USE_CACHE_AFTER_FAILURE) {
-                try {
-                    boolean writeSucceed = mRequestHandler.writeCache(this, response, result);
-                    EasyLog.printLog(this, "WriteCache result：" + writeSucceed);
-                } catch (Exception cacheException) {
-                    EasyLog.printLog(this, "WriteCache error");
-                    EasyLog.printThrowable(this, cacheException);
-                }
-            }
-
-            return (Bean) result;
-
-        } catch (Exception exception) {
-
-            EasyLog.printThrowable(this, exception);
-
-            // 如果设置了只在网络请求失败才去读缓存
-            if (exception instanceof IOException && cacheMode == CacheMode.USE_CACHE_AFTER_FAILURE) {
-                try {
-                    Object result = mRequestHandler.readCache(this, reflectType, mRequestCache.getCacheTime());
-                    EasyLog.printLog(this, "ReadCache result：" + result);
-                    if (result != null) {
-                        return (Bean) result;
-                    }
-                } catch (Exception cacheException) {
-                    EasyLog.printLog(this, "ReadCache error");
-                    EasyLog.printThrowable(this, cacheException);
-                }
-            }
-
-            Exception finalException = mRequestHandler.requestFail(this, exception);
-            if (finalException != exception) {
-                EasyLog.printThrowable(this, finalException);
-            }
-            throw finalException;
-        }
-    }
-
-    /**
-     * 取消请求
-     */
-    public T cancel() {
-        if (mCallProxy != null) {
-            mCallProxy.cancel();
-        }
-        return (T) this;
-    }
-
-    /**
-     * 获取请求标记
-     */
-
-    public String getTag() {
-        return mTag;
-    }
-
-
-
-    /**
-     * 获取请求接口对象
-     */
-
-    public IRequestApi getRequestApi() {
-        return mRequestApi;
-    }
-
-    /**
-     * 获取请求主机地址
-     */
-    public IRequestHost getRequestHost() {
-        return mRequestHost;
-    }
-
-    /**
-     * 获取参数提交方式
-     */
-    public IRequestType getRequestType() {
-        return mRequestType;
-    }
-
-    /**
-     * 获取请求缓存策略
-     */
-
-    public IRequestCache getRequestCache() {
-        return mRequestCache;
-    }
-
-    /**
-     * 获取请求的 OkHttpClient 对象
-     */
-    public IRequestClient getRequestClient() {
-        return mRequestClient;
-    }
-
-    /**
-     * 获取请求处理对象
-     */
-    public IRequestHandler getRequestHandler() {
-        return mRequestHandler;
-    }
-
-    /**
-     * 获取请求的方式
-     */
-    public abstract String getRequestMethod();
-
-    /**
-     * 获取请求的拦截器（可能为空）
-     */
-
-    public IRequestInterceptor getRequestInterceptor() {
-        return mRequestInterceptor;
-    }
-
-    /**
-     * 获取延迟请求时间
-     */
-    protected long getDelayMillis() {
-        return mDelayMillis;
-    }
-
-    /**
-     * 打印键值对
-     */
-    protected void printKeyValue(String key, Object value) {
-        if (value instanceof Enum) {
-            // 如果这是一个枚举类型
-            EasyLog.printKeyValue(this, key, "\"" + value + "\"");
-        } else if (value instanceof String) {
-            EasyLog.printKeyValue(this, key, "\"" + value + "\"");
-        } else {
-            EasyLog.printKeyValue(this, key, String.valueOf(value));
-        }
-    }
-
-    /**
-     * 添加请求头
-     */
-    protected void addHttpHeaders(HttpHeaders headers, String key, Object value) {
-        if (value instanceof Map) {
-            Map<?, ?> map = ((Map<?, ?>) value);
-            for (Object o : map.keySet()) {
-                if (o != null && map.get(o) != null) {
-                    headers.put(String.valueOf(o), String.valueOf(map.get(o)));
-                }
-            }
-        } else {
-            headers.put(key, String.valueOf(value));
-        }
-    }
-
-    /**
-     * 添加请求参数
-     */
-    protected abstract void addHttpParams(HttpParams params, String key, Object value, BodyType type);
-
-    /**
-     * 创建请求的对象
-     */
-    protected Request createRequest(String url, String tag, HttpParams params, HttpHeaders headers, BodyType type) {
-        Request.Builder requestBuilder = createRequestBuilder(url, tag);
-        addRequestHeader(requestBuilder, headers);
-        addRequestParams(requestBuilder, params, type);
-
-        Request request = requestBuilder.build();
-        printRequestLog(request, params, headers, type);
-        return request;
-    }
-
-    /**
-     * 创建请求构建对象
-     */
-    public Request.Builder createRequestBuilder(String url, String tag) {
-        Request.Builder requestBuilder = new Request.Builder();
-        requestBuilder.url(url);
-        if (tag != null) {
-            requestBuilder.tag(tag);
-        }
-
-        // 如果设置了不缓存数据
-        if (mRequestCache.getCacheMode() == CacheMode.NO_CACHE) {
-            requestBuilder.cacheControl(new CacheControl.Builder().noCache().build());
-        }
-        return requestBuilder;
-    }
-
-    /**
-     * 添加请求头
-     */
-    protected void addRequestHeader(Request.Builder requestBuilder, HttpHeaders headers) {
-        if (headers.isEmpty()) {
-            return;
-        }
-
-        for (String key : headers.getKeys()) {
-            String value = headers.get(key);
-            try {
-                requestBuilder.addHeader(key, value);
-            } catch (IllegalArgumentException e) {
-                // 请求头中的 key 和 value 如果包含中文需要经过编码，否则 OkHttp 会报错
-                requestBuilder.addHeader(EasyUtils.encodeString(key), EasyUtils.encodeString(value));
-                // java.lang.IllegalArgumentException: Unexpected char 0x6211 at 0 in KeyName value: KeyValue
-                e.printStackTrace();
-            }
-        }
-    }
-
-    /**
-     * 添加请求参数
-     */
-    protected abstract void addRequestParams(Request.Builder requestBuilder, HttpParams params, BodyType type);
-
-    /**
-     * 打印请求日志
-     */
-    protected abstract void printRequestLog(Request request, HttpParams params, HttpHeaders headers, BodyType type);
-}
\ No newline at end of file
Index: FastKv/src/main/java/cn/xihan/fastkv/FastKVConfig.java
===================================================================
diff --git a/FastKv/src/main/java/cn/xihan/fastkv/FastKVConfig.java b/FastKv/src/main/java/cn/xihan/fastkv/FastKVConfig.java
deleted file mode 100644
--- a/FastKv/src/main/java/cn/xihan/fastkv/FastKVConfig.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,40 +0,0 @@
-package cn.xihan.fastkv;
-
-import java.util.concurrent.*;
-
-public final class FastKVConfig {
-    static FastKV.Logger sLogger;
-    static volatile Executor sExecutor;
-
-    private FastKVConfig() {
-    }
-
-    public static void setLogger(FastKV.Logger logger) {
-        sLogger = logger;
-    }
-
-    /**
-     * It's highly recommended setting your own Executor for reusing threads in common thread pool.
-     *
-     * @param executor The executor for loading or writing.
-     */
-    public static void setExecutor(Executor executor) {
-        if (executor != null) {
-            sExecutor = executor;
-        }
-    }
-
-    static Executor getExecutor() {
-        if (sExecutor == null) {
-            synchronized (FastKVConfig.class) {
-                if (sExecutor == null) {
-                    ThreadPoolExecutor executor = new ThreadPoolExecutor(4, 4,
-                            10, TimeUnit.SECONDS, new LinkedBlockingQueue<>());
-                    executor.allowCoreThreadTimeOut(true);
-                    sExecutor = executor;
-                }
-            }
-        }
-        return sExecutor;
-    }
-}
Index: src/main/java/cn/xihan/http/request/OptionsRequest.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/request/OptionsRequest.java b/src/main/java/cn/xihan/http/request/OptionsRequest.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/request/OptionsRequest.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,22 +0,0 @@
-package cn.xihan.http.request;
-
-
-import cn.xihan.http.model.HttpMethod;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2021/04/29
- *    desc   : Options 请求
- */
-public final class OptionsRequest extends UrlRequest<OptionsRequest> {
-
-    public OptionsRequest() {
-
-    }
-
-    @Override
-    public String getRequestMethod() {
-        return HttpMethod.OPTIONS.toString();
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/config/IRequestClient.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/config/IRequestClient.java b/src/main/java/cn/xihan/http/config/IRequestClient.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/config/IRequestClient.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,23 +0,0 @@
-package cn.xihan.http.config;
-
-
-
-import cn.xihan.http.EasyConfig;
-import okhttp3.OkHttpClient;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2021/03/02
- *    desc   : OkHttpClient 配置
- */
-public interface IRequestClient {
-
-    /**
-     * 获取 OkHttpClient
-     */
-
-    default OkHttpClient getOkHttpClient() {
-        return EasyConfig.getInstance().getClient();
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/model/HttpParams.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/model/HttpParams.java b/src/main/java/cn/xihan/http/model/HttpParams.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/model/HttpParams.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,64 +0,0 @@
-package cn.xihan.http.model;
-
-
-import cn.xihan.http.EasyConfig;
-
-import java.util.HashMap;
-import java.util.Set;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/07/20
- *    desc   : 请求参数封装
- */
-public final class HttpParams {
-
-    /** 请求参数存放集合 */
-    private final HashMap<String, Object> mParams = new HashMap<>(EasyConfig.getInstance().getParams());
-
-    /** 是否有流参数 */
-    private boolean mMultipart;
-
-    public void put(String key, Object value) {
-        if (key == null || value == null) {
-            return;
-        }
-        mParams.put(key, value);
-    }
-
-    public void remove(String key) {
-        if (key == null) {
-            return;
-        }
-        mParams.remove(key);
-    }
-
-    public Object get(String key) {
-        return mParams.get(key);
-    }
-
-    public void clear() {
-        mParams.clear();
-    }
-
-    public boolean isEmpty() {
-        return mParams.isEmpty();
-    }
-
-    public Set<String> getKeys() {
-        return mParams.keySet();
-    }
-
-    public HashMap<String, Object> getParams() {
-        return mParams;
-    }
-
-    public boolean isMultipart() {
-        return mMultipart;
-    }
-
-    public void setMultipart(boolean multipart) {
-        mMultipart = multipart;
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/request/BodyRequest.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/request/BodyRequest.java b/src/main/java/cn/xihan/http/request/BodyRequest.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/request/BodyRequest.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,304 +0,0 @@
-package cn.xihan.http.request;
-
-
-
-import java.io.File;
-import java.io.FileNotFoundException;
-import java.io.IOException;
-import java.io.InputStream;
-import java.util.List;
-import java.util.Map;
-
-import cn.xihan.http.EasyConfig;
-import cn.xihan.http.EasyLog;
-import cn.xihan.http.EasyUtils;
-import cn.xihan.http.body.JsonBody;
-import cn.xihan.http.body.ProgressBody;
-import cn.xihan.http.body.TextBody;
-import cn.xihan.http.body.UpdateBody;
-import cn.xihan.http.listener.OnHttpListener;
-import cn.xihan.http.listener.OnUpdateListener;
-import cn.xihan.http.model.BodyType;
-import cn.xihan.http.model.HttpHeaders;
-import cn.xihan.http.model.HttpParams;
-import okhttp3.FormBody;
-import okhttp3.MultipartBody;
-import okhttp3.Request;
-import okhttp3.RequestBody;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/10/07
- *    desc   : 带 RequestBody 请求
- */
-@SuppressWarnings("unchecked")
-public abstract class BodyRequest<T extends BodyRequest<?>> extends HttpRequest<T> {
-
-    private OnUpdateListener<?> mUpdateListener;
-
-    private RequestBody mRequestBody;
-
-    public BodyRequest() {
-
-    }
-
-    /**
-     * 自定义 json 字符串
-     */
-    public T json(Map<?, ?> map) {
-        if (map == null) {
-            return (T) this;
-        }
-        return body(new JsonBody(map));
-    }
-
-    public T json(List<?> list) {
-        if (list == null) {
-            return (T) this;
-        }
-        return body(new JsonBody(list));
-    }
-
-    public T json(String json) {
-        if (json == null) {
-            return (T) this;
-        }
-        return body(new JsonBody(json));
-    }
-
-    /**
-     * 自定义文本字符串
-     */
-    public T text(String text) {
-        if (text == null) {
-            return (T) this;
-        }
-        return body(new TextBody(text));
-    }
-
-    /**
-     * 自定义 RequestBody
-     */
-    public T body(RequestBody body) {
-        mRequestBody = body;
-        return (T) this;
-    }
-
-    /**
-     * 执行异步请求（执行传入上传进度监听器）
-     */
-    @Override
-    public void request(OnHttpListener<?> listener) {
-        if (listener instanceof OnUpdateListener) {
-            mUpdateListener = (OnUpdateListener<?>) listener;
-        }
-        if (mRequestBody != null) {
-            mRequestBody = new ProgressBody(this, mRequestBody, mUpdateListener);
-        }
-        super.request(listener);
-    }
-
-    @Override
-    protected void addHttpParams(HttpParams params, String key, Object value, BodyType bodyType) {
-        switch (bodyType) {
-            case JSON:
-                // Json 提交
-                params.put(key, EasyUtils.convertObject(value));
-                break;
-            case FORM:
-            default:
-                // 表单提交
-                params.put(key, value);
-                break;
-        }
-    }
-
-    @Override
-    protected void addRequestParams(Request.Builder requestBuilder, HttpParams params, BodyType type) {
-        RequestBody body = mRequestBody != null ? mRequestBody : createRequestBody(params, type);
-        requestBuilder.method(getRequestMethod(), body);
-    }
-
-    @Override
-    protected void printRequestLog(Request request, HttpParams params, HttpHeaders headers, BodyType type) {
-        if (!EasyConfig.getInstance().isLogEnabled()) {
-            return;
-        }
-
-        EasyLog.printKeyValue(this, "RequestUrl", String.valueOf(request.url()));
-        EasyLog.printKeyValue(this, "RequestMethod", getRequestMethod());
-
-        RequestBody body = request.body();
-
-        // 打印请求头和参数的日志
-        if (!headers.isEmpty() || !params.isEmpty()) {
-            EasyLog.printLine(this);
-        }
-
-        for (String key : headers.getKeys()) {
-            EasyLog.printKeyValue(this, key, headers.get(key));
-        }
-
-        if (!headers.isEmpty() && !params.isEmpty()) {
-            EasyLog.printLine(this);
-        }
-
-        if (body instanceof FormBody ||
-                body instanceof MultipartBody ||
-                body instanceof ProgressBody) {
-            // 打印表单
-            for (String key : params.getKeys()) {
-                Object value = params.get(key);
-                if (value instanceof Map) {
-                    // 如果这是一个 Map 集合
-                    Map<?, ?> map = ((Map<?, ?>) value);
-                    for (Object itemKey : map.keySet()) {
-                        if (itemKey == null) {
-                            continue;
-                        }
-                        printKeyValue(String.valueOf(itemKey), map.get(itemKey));
-                    }
-                } else if (value instanceof List) {
-                    // 如果这是一个 List 集合
-                    List<?> list = (List<?>) value;
-                    for (int i = 0; i < list.size(); i++) {
-                        Object itemValue = list.get(i);
-                        printKeyValue(key + "[" + i + "]", itemValue);
-                    }
-                } else {
-                    printKeyValue(key, value);
-                }
-            }
-        } else if (body instanceof JsonBody) {
-            // 打印 Json
-            EasyLog.printJson(this, body.toString());
-        } else if (body != null) {
-            // 打印文本
-            EasyLog.printLog(this, body.toString());
-        }
-
-        if (!headers.isEmpty() || !params.isEmpty()) {
-            EasyLog.printLine(this);
-        }
-    }
-
-    /**
-     * 组装 RequestBody 对象
-     */
-    private RequestBody createRequestBody(HttpParams params, BodyType type) {
-        RequestBody requestBody;
-
-        if (params.isMultipart() && !params.isEmpty()) {
-            MultipartBody.Builder bodyBuilder = new MultipartBody.Builder();
-            bodyBuilder.setType(MultipartBody.FORM);
-            for (String key : params.getKeys()) {
-                Object value = params.get(key);
-
-                if (value instanceof Map) {
-                    // 如果这是一个 Map 集合
-                    Map<?, ?> map = ((Map<?, ?>) value);
-                    for (Object itemKey : map.keySet()) {
-                        if (itemKey == null) {
-                           continue;
-                        }
-                        Object itemValue = map.get(itemKey);
-                        if (itemValue == null) {
-                            continue;
-                        }
-                        addFormData(bodyBuilder, String.valueOf(itemKey), itemValue);
-                    }
-                } else if (value instanceof List) {
-                    // 如果这是一个 List 集合
-                    List<?> list = (List<?>) value;
-                    for (Object itemValue : list) {
-                        if (itemValue == null) {
-                            continue;
-                        }
-                        addFormData(bodyBuilder, key, itemValue);
-                    }
-                } else {
-                    addFormData(bodyBuilder, key, value);
-                }
-            }
-
-            try {
-                requestBody = bodyBuilder.build();
-            } catch (IllegalStateException ignored) {
-                // 如果参数为空则会抛出异常：Multipart body must have at least one part.
-                requestBody = new FormBody.Builder().build();
-            }
-
-        } else if (type == BodyType.JSON) {
-            requestBody = new JsonBody(params.getParams());
-        } else {
-            FormBody.Builder bodyBuilder = new FormBody.Builder();
-            if (!params.isEmpty()) {
-                for (String key : params.getKeys()) {
-                    Object value = params.get(key);
-                    if (value instanceof List) {
-                        List<?> list = (List<?>) value;
-                        for (Object itemValue : list) {
-                            if (itemValue == null) {
-                                continue;
-                            }
-                            bodyBuilder.add(key, String.valueOf(itemValue));
-                        }
-                        continue;
-                    }
-
-                    bodyBuilder.add(key, String.valueOf(value));
-                }
-            }
-            requestBody = bodyBuilder.build();
-        }
-
-        return mUpdateListener == null ? requestBody : new ProgressBody(this, requestBody, mUpdateListener);
-    }
-
-    /**
-     * 添加参数
-     */
-    private void addFormData(MultipartBody.Builder bodyBuilder, String key, Object object) {
-        if (object instanceof File) {
-            // 如果这是一个 File 对象
-            File file = (File) object;
-            String fileName =  file.getName();
-
-            // 文件名必须不能带中文，所以这里要编码
-            String encodeFileName = EasyUtils.encodeString(fileName);
-
-            try {
-                MultipartBody.Part part = MultipartBody.Part.createFormData(key, encodeFileName, new UpdateBody(file));
-                bodyBuilder.addPart(part);
-            } catch (FileNotFoundException e) {
-                // 文件不存在，将被忽略上传
-                EasyLog.printLog(this, "File does not exist, will be ignored upload: " +
-                        key + " = " + file.getPath());
-            }
-        } else if (object instanceof InputStream) {
-            // 如果这是一个 InputStream 对象
-            InputStream inputStream = (InputStream) object;
-            try {
-                bodyBuilder.addPart(MultipartBody.Part.createFormData(key, null, new UpdateBody(inputStream, key)));
-            } catch (IOException e) {
-                EasyLog.printThrowable(this, e);
-            }
-        } else if (object instanceof RequestBody) {
-            // 如果这是一个自定义的 RequestBody 对象
-            RequestBody requestBody = (RequestBody) object;
-            if (requestBody instanceof UpdateBody) {
-                bodyBuilder.addPart(MultipartBody.Part.createFormData(key, EasyUtils.encodeString(
-                        ((UpdateBody) requestBody).getKeyName()), requestBody));
-            } else {
-                bodyBuilder.addPart(MultipartBody.Part.createFormData(key, null, requestBody));
-            }
-        } else if (object instanceof MultipartBody.Part) {
-            // 如果这是一个自定义的 MultipartBody.Part 对象
-            bodyBuilder.addPart((MultipartBody.Part) object);
-        } else {
-            // 如果这是一个普通参数
-            bodyBuilder.addFormDataPart(key, String.valueOf(object));
-        }
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/listener/HttpCallback.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/listener/HttpCallback.java b/src/main/java/cn/xihan/http/listener/HttpCallback.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/listener/HttpCallback.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,56 +0,0 @@
-package cn.xihan.http.listener;
-
-import okhttp3.Call;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/05/19
- *    desc   : 请求回调包装类
- */
-@SuppressWarnings({"rawtypes", "unchecked"})
-public class HttpCallback<T> implements OnHttpListener<T> {
-
-    private final OnHttpListener mListener;
-
-    public HttpCallback(OnHttpListener listener) {
-        mListener = listener;
-    }
-
-    @Override
-    public void onStart(Call call) {
-        if (mListener == null) {
-            return;
-        }
-        mListener.onStart(call);
-    }
-
-    @Override
-    public void onSucceed(T result, boolean cache) {
-        onSucceed(result);
-    }
-
-    @Override
-    public void onSucceed(T result) {
-        if (mListener == null) {
-            return;
-        }
-        mListener.onSucceed(result);
-    }
-
-    @Override
-    public void onFail(Exception e) {
-        if (mListener == null) {
-            return;
-        }
-        mListener.onFail(e);
-    }
-
-    @Override
-    public void onEnd(Call call) {
-        if (mListener == null) {
-            return;
-        }
-        mListener.onEnd(call);
-    }
-}
\ No newline at end of file
Index: GsonFactory/src/main/java/cn/xihan/gson/factory/element/CollectionTypeAdapterFactory.java
===================================================================
diff --git a/GsonFactory/src/main/java/cn/xihan/gson/factory/element/CollectionTypeAdapterFactory.java b/GsonFactory/src/main/java/cn/xihan/gson/factory/element/CollectionTypeAdapterFactory.java
deleted file mode 100644
--- a/GsonFactory/src/main/java/cn/xihan/gson/factory/element/CollectionTypeAdapterFactory.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,58 +0,0 @@
-package cn.xihan.gson.factory.element;
-
-import com.google.gson.Gson;
-import com.google.gson.TypeAdapter;
-import com.google.gson.TypeAdapterFactory;
-import com.google.gson.internal.$Gson$Types;
-import com.google.gson.internal.ConstructorConstructor;
-import com.google.gson.internal.ObjectConstructor;
-import com.google.gson.reflect.TypeToken;
-
-import java.lang.reflect.GenericArrayType;
-import java.lang.reflect.Type;
-import java.util.Collection;
-
-/**
- *    author : Android 轮子哥
- *    github : https://github.com/getActivity/GsonFactory
- *    time   : 2020/12/08
- *    desc   : Array 解析适配器，参考：{@link com.google.gson.internal.bind.CollectionTypeAdapterFactory}
- */
-public class CollectionTypeAdapterFactory implements TypeAdapterFactory {
-
-    private final ConstructorConstructor mConstructorConstructor;
-
-    public CollectionTypeAdapterFactory(ConstructorConstructor constructor) {
-        mConstructorConstructor = constructor;
-    }
-
-    @SuppressWarnings({"unchecked", "rawtypes"})
-    @Override
-    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {
-        Type type = typeToken.getType();
-        Class<? super T> rawType = typeToken.getRawType();
-        // 判断是否包含这种类型
-        if (ReflectiveTypeUtils.containsClass(rawType)) {
-            return null;
-        }
-        if (typeToken.getType() instanceof GenericArrayType ||
-                typeToken.getType() instanceof Class &&
-                ((Class<?>) typeToken.getType()).isArray()) {
-            return null;
-        }
-
-        if (!Collection.class.isAssignableFrom(rawType)) {
-            return null;
-        }
-
-        Type elementType = $Gson$Types.getCollectionElementType(type, rawType);
-        TypeAdapter<?> elementTypeAdapter = gson.getAdapter(TypeToken.get(elementType));
-        ObjectConstructor<T> constructor = mConstructorConstructor.get(typeToken);
-
-        // create() doesn't define a type parameter
-        CollectionTypeAdapter collectionTypeAdapter =
-                new CollectionTypeAdapter(gson, elementType, elementTypeAdapter, constructor);
-        collectionTypeAdapter.setReflectiveType(typeToken, null);
-        return collectionTypeAdapter;
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/config/IRequestApi.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/config/IRequestApi.java b/src/main/java/cn/xihan/http/config/IRequestApi.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/config/IRequestApi.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,18 +0,0 @@
-package cn.xihan.http.config;
-
-
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/05/19
- *    desc   : 请求接口配置
- */
-public interface IRequestApi {
-
-    /**
-     * 请求接口
-     */
-
-    String getApi();
-}
\ No newline at end of file
Index: GsonFactory/src/main/java/cn/xihan/gson/factory/GsonFactory.java
===================================================================
diff --git a/GsonFactory/src/main/java/cn/xihan/gson/factory/GsonFactory.java b/GsonFactory/src/main/java/cn/xihan/gson/factory/GsonFactory.java
deleted file mode 100644
--- a/GsonFactory/src/main/java/cn/xihan/gson/factory/GsonFactory.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,113 +0,0 @@
-package cn.xihan.gson.factory;
-
-import cn.xihan.gson.factory.data.*;
-import cn.xihan.gson.factory.element.CollectionTypeAdapterFactory;
-import cn.xihan.gson.factory.element.ReflectiveTypeAdapterFactory;
-import com.google.gson.FieldNamingPolicy;
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-import com.google.gson.InstanceCreator;
-import com.google.gson.TypeAdapterFactory;
-import com.google.gson.internal.ConstructorConstructor;
-import com.google.gson.internal.Excluder;
-import com.google.gson.internal.bind.TypeAdapters;
-
-import org.json.JSONArray;
-import org.json.JSONObject;
-
-import java.lang.reflect.Type;
-import java.math.BigDecimal;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-
-/**
- *    author : Android 轮子哥
- *    github : https://github.com/getActivity/GsonFactory
- *    time   : 2020/11/10
- *    desc   : Gson 解析容错适配器
- */
-@SuppressWarnings("unused")
-public final class GsonFactory {
-
-    private static final HashMap<Type, InstanceCreator<?>> INSTANCE_CREATORS = new HashMap<>(0);
-
-    private static final List<TypeAdapterFactory> TYPE_ADAPTER_FACTORIES = new ArrayList<>();
-
-    private static JsonCallback sJsonCallback;
-
-    private static volatile Gson sGson;
-
-    private GsonFactory() {}
-
-    /**
-     * 获取单例的 Gson 对象
-     */
-    public static Gson getSingletonGson() {
-        // 加入双重校验锁
-        if(sGson == null) {
-            synchronized (GsonFactory.class) {
-                if(sGson == null){
-                    sGson = newGsonBuilder().create();
-                }
-            }
-        }
-        return sGson;
-    }
-
-    /**
-     * 设置单例的 Gson 对象
-     */
-    public static void setSingletonGson(Gson gson) {
-        sGson = gson;
-    }
-
-    /**
-     * 注册类型解析适配器
-     */
-    public static void registerTypeAdapterFactory(TypeAdapterFactory factory) {
-        TYPE_ADAPTER_FACTORIES.add(factory);
-    }
-
-    public static void setJsonCallback(JsonCallback callback) {
-        GsonFactory.sJsonCallback = callback;
-    }
-
-    public static JsonCallback getJsonCallback() {
-        return sJsonCallback;
-    }
-
-    /**
-     * 注册构造函数创建器
-     *
-     * @param type                  对象类型
-     * @param creator               实例创建器
-     */
-    public static void registerInstanceCreator(Type type, InstanceCreator<?> creator) {
-        INSTANCE_CREATORS.put(type, creator);
-    }
-
-    /**
-     * 创建 Gson 构建对象
-     */
-    public static GsonBuilder newGsonBuilder() {
-        GsonBuilder gsonBuilder = new GsonBuilder();
-        ConstructorConstructor constructor = new ConstructorConstructor(INSTANCE_CREATORS, true);
-        gsonBuilder.registerTypeAdapterFactory(TypeAdapters.newFactory(String.class, new StringTypeAdapter()))
-                .registerTypeAdapterFactory(TypeAdapters.newFactory(boolean.class, Boolean.class, new BooleanTypeAdapter()))
-                .registerTypeAdapterFactory(TypeAdapters.newFactory(int.class, Integer.class, new IntegerTypeAdapter()))
-                .registerTypeAdapterFactory(TypeAdapters.newFactory(long.class, Long.class, new LongTypeAdapter()))
-                .registerTypeAdapterFactory(TypeAdapters.newFactory(float.class, Float.class, new FloatTypeAdapter()))
-                .registerTypeAdapterFactory(TypeAdapters.newFactory(double.class, Double.class, new DoubleTypeAdapter()))
-                .registerTypeAdapterFactory(TypeAdapters.newFactory(BigDecimal.class, new BigDecimalTypeAdapter()))
-                .registerTypeAdapterFactory(new CollectionTypeAdapterFactory(constructor))
-                .registerTypeAdapterFactory(new ReflectiveTypeAdapterFactory(constructor, FieldNamingPolicy.IDENTITY, Excluder.DEFAULT))
-                .registerTypeAdapterFactory(TypeAdapters.newFactory(JSONObject.class, new JSONObjectTypeAdapter()))
-                .registerTypeAdapterFactory(TypeAdapters.newFactory(JSONArray.class, new JSONArrayTypeAdapter()));
-        // 添加到自定义的类型解析适配器，因为在 GsonBuilder.create 方法中会对 List 进行反转，所以这里需要放到最后的位置上，这样就会优先解析
-        for (TypeAdapterFactory typeAdapterFactory : TYPE_ADAPTER_FACTORIES) {
-            gsonBuilder.registerTypeAdapterFactory(typeAdapterFactory);
-        }
-        return gsonBuilder;
-    }
-}
\ No newline at end of file
Index: GsonFactory/src/main/java/cn/xihan/gson/factory/data/StringTypeAdapter.java
===================================================================
diff --git a/GsonFactory/src/main/java/cn/xihan/gson/factory/data/StringTypeAdapter.java b/GsonFactory/src/main/java/cn/xihan/gson/factory/data/StringTypeAdapter.java
deleted file mode 100644
--- a/GsonFactory/src/main/java/cn/xihan/gson/factory/data/StringTypeAdapter.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,39 +0,0 @@
-package cn.xihan.gson.factory.data;
-
-import com.google.gson.TypeAdapter;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonWriter;
-
-import java.io.IOException;
-
-/**
- *    author : Android 轮子哥
- *    github : https://github.com/getActivity/GsonFactory
- *    time   : 2020/05/05
- *    desc   : String 类型解析适配器，参考：{@link com.google.gson.internal.bind.TypeAdapters#STRING}
- */
-public class StringTypeAdapter extends TypeAdapter<String> {
-
-    @Override
-    public String read(JsonReader in) throws IOException {
-        switch (in.peek()) {
-            case STRING:
-            case NUMBER:
-                return in.nextString();
-            case BOOLEAN:
-                // 对于布尔类型比较特殊，需要做针对性处理
-                return Boolean.toString(in.nextBoolean());
-            case NULL:
-                in.nextNull();
-                return null;
-            default:
-                in.skipValue();
-                throw new IllegalArgumentException();
-        }
-    }
-
-    @Override
-    public void write(JsonWriter out, String value) throws IOException {
-        out.value(value);
-    }
-}
\ No newline at end of file
Index: README.md
===================================================================
diff --git a/README.md b/README.md
deleted file mode 100644
--- a/README.md	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,69 +0,0 @@
-# 简单易用的网络框架
-
-* 原作者项目地址：[Github](https://github.com/getActivity/EasyHttp)
-
-#### 集成步骤
-
-*  Gradle 依赖方法
-
-```groovy
- repositories {
-        // JitPack 远程仓库：https://jitpack.io
-        maven { url 'https://jitpack.io' }
-}
-```
-
-* 配置完远程仓库后，在项目 app 模块下的 `build.gradle` 文件中加入远程依赖
-
-```groovy
-
-dependencies {
-    // 网络请求框架：https://github.com/xihan123/EasyHttp
-    implementation 'com.github.xihan123.IDEA-EasyHttp:EasyHttp-11:11.0'
-    // OkHttp 框架：https://github.com/square/okhttp
-    implementation 'com.squareup.okhttp3:okhttp:<okhttp-version 4.x-5.x>'
-}
-```
-*  Maven 依赖方法
-
-```maven
-<repositories>
-		<repository>
-		    <id>jitpack.io</id>
-		    <url>https://jitpack.io</url>
-		</repository>
-	</repositories>
-
-	<dependency>
-	    <groupId>com.github.xihan123.IDEA-EasyHttp</groupId>
-	    <artifactId>EasyHttp-11</artifactId>
-	    <version>11.0</version>
-	</dependency>
-
-
-
-```
-
-
-* 需要注意的是：框架支持 IDEA Java/Kotlin 的项目集成
-            
-## [框架的具体用法请点击这里查看](HelpDoc.md)
-
-
-## License
-
-```text
-Copyright 2019 Huang JinQun
-
-Licensed under the Apache License, Version 2.0 (the "License");
-you may not use this file except in compliance with the License.
-You may obtain a copy of the License at
-
-   http://www.apache.org/licenses/LICENSE-2.0
-
-Unless required by applicable law or agreed to in writing, software
-distributed under the License is distributed on an "AS IS" BASIS,
-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-See the License for the specific language governing permissions and
-limitations under the License.
-```
\ No newline at end of file
Index: src/main/java/cn/xihan/http/body/JsonBody.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/body/JsonBody.java b/src/main/java/cn/xihan/http/body/JsonBody.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/body/JsonBody.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,80 +0,0 @@
-package cn.xihan.http.body;
-
-
-import cn.xihan.http.EasyUtils;
-import cn.xihan.http.model.ContentType;
-import org.json.JSONArray;
-import org.json.JSONObject;
-
-import java.io.IOException;
-import java.util.List;
-import java.util.Map;
-
-import okhttp3.MediaType;
-import okhttp3.RequestBody;
-import okio.BufferedSink;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/12/28
- *    desc   : Json 参数提交
- */
-public class JsonBody extends RequestBody {
-
-    /** Json 数据 */
-    private final String mJson;
-    /** 字节数组 */
-    private final byte[] mBytes;
-
-    public JsonBody(Map<?, ?> map) {
-        this(new JSONObject(map));
-    }
-
-    public JsonBody(List<?> list) {
-        this(new JSONArray(list));
-    }
-
-    public JsonBody(JSONObject jsonObject) {
-        mJson = EasyUtils.unescapeJson(jsonObject.toString());
-        mBytes = mJson.getBytes();
-    }
-
-    public JsonBody(JSONArray jsonArray) {
-        mJson = EasyUtils.unescapeJson(jsonArray.toString());
-        mBytes = mJson.getBytes();
-    }
-
-    public JsonBody(String json) {
-        mJson = json;
-        mBytes = mJson.getBytes();
-    }
-
-    @Override
-    public MediaType contentType() {
-        return ContentType.JSON;
-    }
-
-    @Override
-    public long contentLength() {
-        // 需要注意：这里需要用字节数组的长度来计算
-        return mBytes.length;
-    }
-
-    @Override
-    public void writeTo(BufferedSink sink) throws IOException {
-        sink.write(mBytes, 0, mBytes.length);
-    }
-
-    /**
-     * 获取 Json 字符串
-     */
-    public String getJson() {
-        return mJson;
-    }
-
-    @Override
-    public String toString() {
-        return mJson;
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/request/UrlRequest.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/request/UrlRequest.java b/src/main/java/cn/xihan/http/request/UrlRequest.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/request/UrlRequest.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,121 +0,0 @@
-package cn.xihan.http.request;
-
-
-
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-import cn.xihan.http.EasyConfig;
-import cn.xihan.http.EasyLog;
-import cn.xihan.http.model.BodyType;
-import cn.xihan.http.model.HttpHeaders;
-import cn.xihan.http.model.HttpParams;
-import okhttp3.HttpUrl;
-import okhttp3.Request;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/10/07
- *    desc   : 不带 RequestBody 的请求
- */
-public abstract class UrlRequest<T extends UrlRequest<?>> extends HttpRequest<T> {
-
-    public UrlRequest() {
-
-    }
-
-    @Override
-    protected void addHttpParams(HttpParams params, String key, Object value, BodyType type) {
-        params.put(key, value);
-    }
-
-    @Override
-    protected void addRequestParams(Request.Builder requestBuilder, HttpParams params, BodyType type) {
-        HttpUrl.Builder urlBuilder = requestBuilder.build().url().newBuilder();
-        // 添加参数
-        if (!params.isEmpty()) {
-            for (String key : params.getKeys()) {
-                Object value = params.get(key);
-                if (value instanceof List) {
-                    // 如果这是一个 List 集合
-                    List<?> list = ((List<?>) value);
-                    for (Object itemValue : list) {
-                        if (itemValue == null) {
-                            continue;
-                        }
-                        // Get 请求参数重复拼接：https://blog.csdn.net/weixin_38355349/article/details/104499948
-                        urlBuilder.addQueryParameter(key, String.valueOf(itemValue));
-                    }
-                } else if (value instanceof HashMap) {
-                    // 如果这是一个 Map 集合
-                    Map<?, ?> map = ((Map<?, ?>) value);
-                    for (Object itemKey : map.keySet()) {
-                        if (itemKey == null) {
-                            continue;
-                        }
-                        Object itemValue = map.get(itemKey);
-                        if (itemValue == null) {
-                            continue;
-                        }
-                        urlBuilder.addQueryParameter(key, String.valueOf(itemValue));
-                    }
-                } else {
-                    urlBuilder.addQueryParameter(key, String.valueOf(value));
-                }
-            }
-        }
-        HttpUrl link = urlBuilder.build();
-        requestBuilder.url(link);
-        requestBuilder.method(getRequestMethod(), null);
-    }
-
-    @Override
-    protected void printRequestLog(Request request, HttpParams params, HttpHeaders headers, BodyType type) {
-        if (!EasyConfig.getInstance().isLogEnabled()) {
-            return;
-        }
-
-        EasyLog.printKeyValue(this, "RequestUrl", String.valueOf(request.url()));
-        EasyLog.printKeyValue(this, "RequestMethod", getRequestMethod());
-
-        if (!headers.isEmpty() || !params.isEmpty()) {
-            EasyLog.printLine(this);
-        }
-
-        for (String key : headers.getKeys()) {
-            EasyLog.printKeyValue(this, key, headers.get(key));
-        }
-
-        if (!headers.isEmpty() && !params.isEmpty()) {
-            EasyLog.printLine(this);
-        }
-
-        for (String key : params.getKeys()) {
-            Object value = params.get(key);
-            if (value instanceof List) {
-                // 如果这是一个 List 集合
-                List<?> list = (List<?>) value;
-                for (int i = 0; i < list.size(); i++) {
-                    printKeyValue(key + "[" + i + "]", list.get(i));
-                }
-            } else if (value instanceof HashMap) {
-                // 如果这是一个 Map 集合
-                Map<?, ?> map = ((Map<?, ?>) value);
-                for (Object itemKey : map.keySet()) {
-                    if (itemKey == null) {
-                        continue;
-                    }
-                    printKeyValue(String.valueOf(itemKey), map.get(itemKey));
-                }
-            } else {
-                printKeyValue(key, String.valueOf(params.get(key)));
-            }
-        }
-
-        if (!headers.isEmpty() || !params.isEmpty()) {
-            EasyLog.printLine(this);
-        }
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/config/IRequestCache.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/config/IRequestCache.java b/src/main/java/cn/xihan/http/config/IRequestCache.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/config/IRequestCache.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,24 +0,0 @@
-package cn.xihan.http.config;
-
-
-import cn.xihan.http.model.CacheMode;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2021/05/22
- *    desc   : 请求缓存配置
- */
-public interface IRequestCache {
-
-    /**
-     * 获取缓存的模式
-     */
-
-    CacheMode getCacheMode();
-
-    /**
-     * 获取缓存的有效时长（以毫秒为单位）
-     */
-    long getCacheTime();
-}
\ No newline at end of file
Index: GsonFactory/src/main/java/cn/xihan/gson/factory/data/DoubleTypeAdapter.java
===================================================================
diff --git a/GsonFactory/src/main/java/cn/xihan/gson/factory/data/DoubleTypeAdapter.java b/GsonFactory/src/main/java/cn/xihan/gson/factory/data/DoubleTypeAdapter.java
deleted file mode 100644
--- a/GsonFactory/src/main/java/cn/xihan/gson/factory/data/DoubleTypeAdapter.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,41 +0,0 @@
-package cn.xihan.gson.factory.data;
-
-import com.google.gson.TypeAdapter;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonWriter;
-
-import java.io.IOException;
-
-/**
- *    author : Android 轮子哥
- *    github : https://github.com/getActivity/GsonFactory
- *    time   : 2020/05/05
- *    desc   : double / Double 类型解析适配器，参考：{@link com.google.gson.internal.bind.TypeAdapters#DOUBLE}
- */
-public class DoubleTypeAdapter extends TypeAdapter<Double> {
-
-    @Override
-    public Double read(JsonReader in) throws IOException {
-        switch (in.peek()) {
-            case NUMBER:
-                return in.nextDouble();
-            case STRING:
-                String result = in.nextString();
-                if (result == null || "".equals(result)) {
-                    return 0D;
-                }
-                return Double.parseDouble(result);
-            case NULL:
-                in.nextNull();
-                return null;
-            default:
-                in.skipValue();
-                throw new IllegalArgumentException();
-        }
-    }
-
-    @Override
-    public void write(JsonWriter out, Double value) throws IOException {
-        out.value(value);
-    }
-}
\ No newline at end of file
Index: FastKv/build.gradle
===================================================================
diff --git a/FastKv/build.gradle b/FastKv/build.gradle
deleted file mode 100644
--- a/FastKv/build.gradle	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,18 +0,0 @@
-plugins {
-    id 'java'
-}
-
-group 'cn.xihan.lib'
-version '1.0'
-
-repositories {
-    mavenCentral()
-}
-
-dependencies {
-
-}
-
-test {
-    useJUnitPlatform()
-}
Index: src/main/java/cn/xihan/http/callback/NormalCallback.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/callback/NormalCallback.java b/src/main/java/cn/xihan/http/callback/NormalCallback.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/callback/NormalCallback.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,178 +0,0 @@
-package cn.xihan.http.callback;
-
-
-
-import java.io.IOException;
-import java.lang.reflect.Type;
-
-import cn.xihan.http.EasyLog;
-import cn.xihan.http.EasyUtils;
-import cn.xihan.http.config.IRequestInterceptor;
-
-import cn.xihan.http.listener.OnHttpListener;
-import cn.xihan.http.model.CacheMode;
-import cn.xihan.http.request.HttpRequest;
-import okhttp3.Call;
-import okhttp3.Response;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/11/25
- *    desc   : 正常接口回调
- */
-@SuppressWarnings({"rawtypes", "unchecked"})
-public final class NormalCallback extends BaseCallback {
-
-    /** 请求配置 */
-    private final HttpRequest mHttpRequest;
-    /** 接口回调 */
-    private OnHttpListener mListener;
-    /** 解析类型 */
-    private Type mReflectType;
-
-    public NormalCallback(HttpRequest request) {
-        super(request);
-        mHttpRequest = request;
-    }
-
-    public NormalCallback setListener(OnHttpListener listener) {
-        mListener = listener;
-        mReflectType = mHttpRequest.getRequestHandler().getType(mListener);
-        return this;
-    }
-
-    @Override
-    public void start() {
-        CacheMode cacheMode = mHttpRequest.getRequestCache().getCacheMode();
-        if (cacheMode != CacheMode.USE_CACHE_ONLY &&
-                cacheMode != CacheMode.USE_CACHE_FIRST) {
-            super.start();
-            return;
-        }
-
-        try {
-            Object result = mHttpRequest.getRequestHandler().readCache(mHttpRequest,
-                    mReflectType, mHttpRequest.getRequestCache().getCacheTime());
-            EasyLog.printLog(mHttpRequest, "ReadCache result：" + result);
-
-            // 如果没有缓存，就请求网络
-            if (result == null) {
-                super.start();
-                return;
-            }
-
-            // 读取缓存成功
-            EasyUtils.post(() -> {
-                if (mListener == null) {
-                    return;
-                }
-                mListener.onStart(getCall());
-                mListener.onSucceed(result, true);
-                mListener.onEnd(getCall());
-            });
-
-            // 如果当前模式是先读缓存再写请求
-            if (cacheMode == CacheMode.USE_CACHE_FIRST) {
-                EasyUtils.postDelayed(() -> {
-
-                    // 将回调置为空，避免出现两次回调
-                    mListener = null;
-                    super.start();
-                }, 1);
-            }
-
-        } catch (Exception cacheException) {
-            EasyLog.printLog(mHttpRequest, "ReadCache error");
-            EasyLog.printThrowable(mHttpRequest, cacheException);
-            super.start();
-        }
-    }
-
-    @Override
-    protected void onStart(Call call) {
-        EasyUtils.post(() -> {
-            if (mListener == null) {
-                return;
-            }
-            mListener.onStart(call);
-        });
-    }
-
-    @Override
-    protected void onResponse(Response response) throws Exception {
-        // 打印请求耗时时间
-        EasyLog.printLog(mHttpRequest, "RequestConsuming：" +
-                (response.receivedResponseAtMillis() - response.sentRequestAtMillis()) + " ms");
-
-        IRequestInterceptor interceptor = mHttpRequest.getRequestInterceptor();
-        if (interceptor != null) {
-            response = interceptor.interceptResponse(mHttpRequest, response);
-        }
-
-        // 解析 Bean 类对象
-        final Object result = mHttpRequest.getRequestHandler().requestSucceed(
-                mHttpRequest, response, mReflectType);
-
-        CacheMode cacheMode = mHttpRequest.getRequestCache().getCacheMode();
-        if (cacheMode == CacheMode.USE_CACHE_ONLY ||
-                cacheMode == CacheMode.USE_CACHE_FIRST ||
-                cacheMode == CacheMode.USE_CACHE_AFTER_FAILURE) {
-            try {
-                boolean writeSucceed = mHttpRequest.getRequestHandler().writeCache(mHttpRequest, response, result);
-                EasyLog.printLog(mHttpRequest, "WriteCache result：" + writeSucceed);
-            } catch (Exception cacheException) {
-                EasyLog.printLog(mHttpRequest, "WriteCache error");
-                EasyLog.printThrowable(mHttpRequest, cacheException);
-            }
-        }
-
-        EasyUtils.post(() -> {
-            if (mListener == null) {
-                return;
-            }
-            mListener.onSucceed(result, false);
-            mListener.onEnd(getCall());
-        });
-    }
-
-    @Override
-    protected void onFailure(Exception exception) {
-        // 打印错误堆栈
-        EasyLog.printThrowable(mHttpRequest, exception);
-        // 如果设置了只在网络请求失败才去读缓存
-        if (exception instanceof IOException && mHttpRequest.getRequestCache().getCacheMode() == CacheMode.USE_CACHE_AFTER_FAILURE) {
-            try {
-                Object result = mHttpRequest.getRequestHandler().readCache(mHttpRequest,
-                        mReflectType, mHttpRequest.getRequestCache().getCacheTime());
-                EasyLog.printLog(mHttpRequest, "ReadCache result：" + result);
-                if (result != null) {
-                    EasyUtils.post(() -> {
-                        if (mListener == null) {
-                            return;
-                        }
-                        mListener.onSucceed(result, true);
-                        mListener.onEnd(getCall());
-                    });
-                    return;
-                }
-            } catch (Exception cacheException) {
-                EasyLog.printLog(mHttpRequest, "ReadCache error");
-                EasyLog.printThrowable(mHttpRequest, cacheException);
-            }
-        }
-
-        final Exception finalException = mHttpRequest.getRequestHandler().requestFail(mHttpRequest, exception);
-        if (finalException != exception) {
-            EasyLog.printThrowable(mHttpRequest, finalException);
-        }
-
-        EasyUtils.post(() -> {
-            if (mListener == null) {
-                return;
-            }
-            mListener.onFail(finalException);
-            mListener.onEnd(getCall());
-        });
-    }
-}
\ No newline at end of file
Index: GsonFactory/src/main/java/cn/xihan/gson/factory/element/ReflectiveFieldBound.java
===================================================================
diff --git a/GsonFactory/src/main/java/cn/xihan/gson/factory/element/ReflectiveFieldBound.java b/GsonFactory/src/main/java/cn/xihan/gson/factory/element/ReflectiveFieldBound.java
deleted file mode 100644
--- a/GsonFactory/src/main/java/cn/xihan/gson/factory/element/ReflectiveFieldBound.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,46 +0,0 @@
-package cn.xihan.gson.factory.element;
-
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonWriter;
-
-import java.io.IOException;
-
-/**
- *    author : Android 轮子哥
- *    github : https://github.com/getActivity/GsonFactory
- *    time   : 2020/12/08
- *    desc   : 反射字段捆绑类，参考：{@link com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField}
- */
-public abstract class ReflectiveFieldBound {
-
-    /** 字段名称 */
-    private final String mFieldName;
-    /** 序列化标记 */
-    private final boolean mSerialized;
-    /** 反序列化标记 */
-    private final boolean mDeserialized;
-
-    public ReflectiveFieldBound(String name, boolean serialized, boolean deserialized) {
-        mFieldName = name;
-        mSerialized = serialized;
-        mDeserialized = deserialized;
-    }
-
-    public String getFieldName() {
-        return mFieldName;
-    }
-
-    public boolean isDeserialized() {
-        return mDeserialized;
-    }
-
-    public boolean isSerialized() {
-        return mSerialized;
-    }
-
-    public abstract void write(JsonWriter writer, Object value) throws IOException, IllegalAccessException;
-
-    public abstract void read(JsonReader reader, Object value) throws IOException, IllegalAccessException;
-
-    public abstract boolean writeField(Object value) throws IllegalAccessException;
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/request/DeleteRequest.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/request/DeleteRequest.java b/src/main/java/cn/xihan/http/request/DeleteRequest.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/request/DeleteRequest.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,24 +0,0 @@
-package cn.xihan.http.request;
-
-
-import cn.xihan.http.model.HttpMethod;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/10/07
- *    desc   : Delete 请求
- *    doc    : Delete 请求该用 Url 还是 Body 来传递参数：
- *             <a href="https://stackoverflow.com/questions/299628/is-an-entity-body-allowed-for-an-http-delete-request">https://stackoverflow.com/questions/299628/is-an-entity-body-allowed-for-an-http-delete-request</a>
- */
-public final class DeleteRequest extends UrlRequest<DeleteRequest> {
-
-    public DeleteRequest() {
-
-    }
-
-    @Override
-    public String getRequestMethod() {
-        return HttpMethod.DELETE.toString();
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/model/HttpMethod.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/model/HttpMethod.java b/src/main/java/cn/xihan/http/model/HttpMethod.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/model/HttpMethod.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,49 +0,0 @@
-package cn.xihan.http.model;
-
-
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/05/19
- *    desc   : 请求方式
- */
-public enum HttpMethod {
-
-    /** GET 请求 */
-    GET("GET"),
-
-    /** Post 请求 */
-    POST("POST"),
-
-    /** Head 请求 */
-    HEAD("HEAD"),
-
-    /** Delete 请求 */
-    DELETE("DELETE"),
-
-    /** Put 请求 */
-    PUT("PUT"),
-
-    /** Patch 请求 */
-    PATCH("PATCH"),
-
-    /** Options 请求 */
-    OPTIONS("OPTIONS"),
-
-    /** Trace 请求 */
-    TRACE("TRACE");
-
-    /** 请求方式 */
-    private final String mMethod;
-
-    HttpMethod(String method) {
-        this.mMethod = method;
-    }
-
-
-    @Override
-    public String toString() {
-        return mMethod;
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/EasyConfig.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/EasyConfig.java b/src/main/java/cn/xihan/http/EasyConfig.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/EasyConfig.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,246 +0,0 @@
-package cn.xihan.http;
-
-
-
-import java.net.MalformedURLException;
-import java.net.URL;
-import java.util.HashMap;
-
-import cn.xihan.http.config.*;
-import okhttp3.OkHttpClient;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/05/19
- *    desc   : 网络请求配置类
- */
-@SuppressWarnings("unused")
-public final class EasyConfig {
-
-    private static volatile EasyConfig sConfig;
-
-    public static EasyConfig getInstance() {
-        if (sConfig == null) {
-            // 当前没有初始化配置
-            throw new IllegalStateException("You haven't initialized the configuration yet");
-        }
-        return sConfig;
-    }
-
-    private static void setInstance(EasyConfig config) {
-        sConfig = config;
-    }
-
-    public static EasyConfig with(OkHttpClient client) {
-        return new EasyConfig(client);
-    }
-
-    /** 服务器配置 */
-    private IRequestServer mServer;
-    /** 请求处理器 */
-    private IRequestHandler mHandler;
-    /** 请求拦截器 */
-    private IRequestInterceptor mInterceptor;
-    /** 日志打印策略 */
-    private ILogStrategy mLogStrategy;
-
-    /** OkHttp 客户端 */
-    private OkHttpClient mClient;
-
-    /** 通用参数 */
-    private HashMap<String, Object> mParams;
-    /** 通用请求头 */
-    private HashMap<String, String> mHeaders;
-
-    /** 日志开关 */
-    private boolean mLogEnabled = true;
-    /** 日志 TAG */
-    private String mLogTag = "EasyHttp";
-
-    /** 重试次数 */
-    private int mRetryCount;
-    /** 重试时间 */
-    private long mRetryTime = 2000;
-
-    private EasyConfig(OkHttpClient client) {
-        mClient = client;
-        mParams = new HashMap<>();
-        mHeaders = new HashMap<>();
-    }
-
-    public EasyConfig setServer(String host) {
-        return setServer(new RequestServer(host));
-    }
-
-    public EasyConfig setServer(IRequestServer server) {
-        mServer = server;
-        return this;
-    }
-
-    public EasyConfig setHandler(IRequestHandler handler) {
-        mHandler = handler;
-        return this;
-    }
-
-    public EasyConfig setInterceptor(IRequestInterceptor interceptor) {
-        mInterceptor = interceptor;
-        return this;
-    }
-
-    public EasyConfig setClient(OkHttpClient client) {
-        mClient = client;
-        if (mClient == null) {
-            throw new IllegalArgumentException("The OkHttp client object cannot be empty");
-        }
-        return this;
-    }
-
-    public EasyConfig setParams(HashMap<String, Object> params) {
-        if (params == null) {
-            params = new HashMap<>();
-        }
-        mParams = params;
-        return this;
-    }
-
-    public EasyConfig setHeaders(HashMap<String, String> headers) {
-        if (headers == null) {
-            headers = new HashMap<>();
-        }
-        mHeaders = headers;
-        return this;
-    }
-
-    public EasyConfig addHeader(String key, String value) {
-        if (key != null && value != null) {
-            mHeaders.put(key, value);
-        }
-        return this;
-    }
-
-    public EasyConfig removeHeader(String key) {
-        if (key != null) {
-            mHeaders.remove(key);
-        }
-        return this;
-    }
-
-    public EasyConfig addParam(String key, String value) {
-        if (key != null && value != null) {
-            mParams.put(key, value);
-        }
-        return this;
-    }
-
-    public EasyConfig removeParam(String key) {
-        if (key != null) {
-            mParams.remove(key);
-        }
-        return this;
-    }
-
-    public EasyConfig setLogStrategy(ILogStrategy strategy) {
-        mLogStrategy = strategy;
-        return this;
-    }
-
-    public EasyConfig setLogEnabled(boolean enabled) {
-        mLogEnabled = enabled;
-        return this;
-    }
-
-    public EasyConfig setLogTag(String tag) {
-        mLogTag = tag;
-        return this;
-    }
-
-    public EasyConfig setRetryCount(int count) {
-        if (count < 0) {
-            // 重试次数必须大于等于 0 次
-            throw new IllegalArgumentException("The number of retries must be greater than 0");
-        }
-        mRetryCount = count;
-        return this;
-    }
-
-    public EasyConfig setRetryTime(long time) {
-        if (time < 0) {
-            // 重试时间必须大于等于 0 毫秒
-            throw new IllegalArgumentException("The retry time must be greater than 0");
-        }
-        mRetryTime = time;
-        return this;
-    }
-
-    public IRequestServer getServer() {
-        return mServer;
-    }
-
-    public IRequestHandler getHandler() {
-        return mHandler;
-    }
-
-    public IRequestInterceptor getInterceptor() {
-        return mInterceptor;
-    }
-
-    public OkHttpClient getClient() {
-        return mClient;
-    }
-
-    public HashMap<String, Object> getParams() {
-        return mParams;
-    }
-
-    public HashMap<String, String> getHeaders() {
-        return mHeaders;
-    }
-
-    public ILogStrategy getLogStrategy() {
-        return mLogStrategy;
-    }
-
-    public boolean isLogEnabled() {
-        return mLogEnabled && mLogStrategy != null;
-    }
-
-    public String getLogTag() {
-        return mLogTag;
-    }
-
-    public int getRetryCount() {
-        return mRetryCount;
-    }
-
-    public long getRetryTime() {
-        return mRetryTime;
-    }
-
-    public void into() {
-        if (mClient == null) {
-            throw new IllegalArgumentException("The OkHttp client object cannot be empty");
-        }
-
-        if (mServer == null) {
-            throw new IllegalArgumentException("The host configuration cannot be empty");
-        }
-
-        if (mHandler == null) {
-            throw new IllegalArgumentException("The object being processed by the request cannot be empty");
-        }
-
-        try {
-            // 校验主机和路径的 url 是否合法
-            new URL(mServer.getHost());
-        } catch (MalformedURLException e) {
-            e.printStackTrace();
-            throw new IllegalArgumentException("The configured host path url address is not correct");
-        }
-
-        if (mLogStrategy == null) {
-            mLogStrategy = new LogStrategy();
-        }
-        EasyConfig.setInstance(this);
-    }
-}
\ No newline at end of file
Index: GsonFactory/src/main/java/cn/xihan/gson/factory/data/BooleanTypeAdapter.java
===================================================================
diff --git a/GsonFactory/src/main/java/cn/xihan/gson/factory/data/BooleanTypeAdapter.java b/GsonFactory/src/main/java/cn/xihan/gson/factory/data/BooleanTypeAdapter.java
deleted file mode 100644
--- a/GsonFactory/src/main/java/cn/xihan/gson/factory/data/BooleanTypeAdapter.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,41 +0,0 @@
-package cn.xihan.gson.factory.data;
-
-import com.google.gson.TypeAdapter;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonWriter;
-
-import java.io.IOException;
-
-/**
- *    author : Android 轮子哥
- *    github : https://github.com/getActivity/GsonFactory
- *    time   : 2020/05/05
- *    desc   : boolean / Boolean 类型解析适配器，参考：{@link com.google.gson.internal.bind.TypeAdapters#BOOLEAN}
- */
-public class BooleanTypeAdapter extends TypeAdapter<Boolean> {
-
-    @Override
-    public Boolean read(JsonReader in) throws IOException {
-        switch (in.peek()) {
-            case BOOLEAN:
-                return in.nextBoolean();
-            case STRING:
-                // 如果后台返回 "true" 或者 "TRUE"，则处理为 true，否则为 false
-                return Boolean.parseBoolean(in.nextString());
-            case NUMBER:
-                // 如果后台返回的是非 0 的数值则处理为 true，否则为 false
-                return in.nextInt() != 0;
-            case NULL:
-                in.nextNull();
-                return null;
-            default:
-                in.skipValue();
-                throw new IllegalArgumentException();
-        }
-    }
-
-    @Override
-    public void write(JsonWriter out, Boolean value) throws IOException {
-        out.value(value);
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/callback/DownloadCallback.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/callback/DownloadCallback.java b/src/main/java/cn/xihan/http/callback/DownloadCallback.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/callback/DownloadCallback.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,192 +0,0 @@
-package cn.xihan.http.callback;
-
-
-import java.io.File;
-import java.io.InputStream;
-import java.io.OutputStream;
-
-import cn.xihan.http.EasyLog;
-import cn.xihan.http.EasyUtils;
-import cn.xihan.http.config.IRequestInterceptor;
-import cn.xihan.http.exception.MD5Exception;
-import cn.xihan.http.exception.NullBodyException;
-
-import cn.xihan.http.listener.OnDownloadListener;
-import cn.xihan.http.request.HttpRequest;
-import okhttp3.Call;
-import okhttp3.Response;
-import okhttp3.ResponseBody;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/11/25
- *    desc   : 下载接口回调
- */
-public final class DownloadCallback extends BaseCallback {
-
-    /** 请求配置 */
-    private final HttpRequest<?> mHttpRequest;
-
-    /** 文件 MD5 正则表达式 */
-    private static final String FILE_MD5_REGEX = "^[\\w]{32}$";
-
-    /** 保存的文件 */
-    private File mFile;
-
-    /** 校验的 MD5 */
-    private String mMd5;
-
-    /** 下载监听回调 */
-    private OnDownloadListener mListener;
-
-    /** 下载总字节 */
-    private long mTotalByte;
-
-    /** 已下载字节 */
-    private long mDownloadByte;
-
-    /** 下载进度 */
-    private int mDownloadProgress;
-
-    public DownloadCallback(HttpRequest<?> request) {
-        super(request);
-        mHttpRequest = request;
-    }
-
-    public DownloadCallback setFile(File file) {
-        mFile = file;
-        return this;
-    }
-
-    public DownloadCallback setMd5(String md5) {
-        mMd5 = md5;
-        return this;
-    }
-
-    public DownloadCallback setListener(OnDownloadListener listener) {
-        mListener = listener;
-        return this;
-    }
-
-    @Override
-    protected void onStart(Call call) {
-        EasyUtils.post(() -> {
-            if (mListener == null) {
-                return;
-            }
-            mListener.onStart(mFile);
-        });
-    }
-
-    @Override
-    protected void onResponse(Response response) throws Exception {
-        // 打印请求耗时时间
-        EasyLog.printLog(mHttpRequest, "RequestConsuming：" +
-                (response.receivedResponseAtMillis() - response.sentRequestAtMillis()) + " ms");
-
-        IRequestInterceptor interceptor = mHttpRequest.getRequestInterceptor();
-        if (interceptor != null) {
-            response = interceptor.interceptResponse(mHttpRequest, response);
-        }
-
-        // 如果没有指定文件的 md5 值
-        if (mMd5 == null) {
-            // 获取响应头中的文件 MD5 值
-            String md5 = response.header("Content-MD5");
-            // 这个 md5 值必须是文件的 md5 值
-            if (!EasyUtils.isEmpty(md5) && md5.matches(FILE_MD5_REGEX)) {
-                mMd5 = md5;
-            }
-        }
-
-        File parentFile = mFile.getParentFile();
-        if (parentFile != null) {
-            EasyUtils.createFolder(parentFile);
-        }
-        ResponseBody body = response.body();
-        if (body == null) {
-            throw new NullBodyException("The response body is empty");
-        }
-
-        mTotalByte = body.contentLength();
-        if (mTotalByte < 0) {
-            mTotalByte = 0;
-        }
-
-        // 如果这个文件已经下载过，并且经过校验 MD5 是同一个文件的话，就直接回调下载成功监听
-        if (!EasyUtils.isEmpty(mMd5) && mFile.isFile() &&
-                mMd5.equalsIgnoreCase(EasyUtils.getFileMd5(EasyUtils.openFileInputStream(mFile)))) {
-            EasyUtils.post(() -> {
-                if (mListener == null) {
-                    return;
-                }
-                mListener.onComplete(mFile, true);
-                mListener.onEnd(mFile);
-                // 文件已存在，跳过下载
-                EasyLog.printLog(mHttpRequest, mFile.getPath() + " file already exists, skip download");
-            });
-            return;
-        }
-
-        int readLength;
-        mDownloadByte = 0;
-        byte[] bytes = new byte[8192];
-        InputStream inputStream = body.byteStream();
-        OutputStream outputStream = EasyUtils.openFileOutputStream(mFile);
-        while ((readLength = inputStream.read(bytes)) != -1) {
-            mDownloadByte += readLength;
-            outputStream.write(bytes, 0, readLength);
-            EasyUtils.post(() -> {
-                if (mListener == null) {
-                    return;
-                }
-                mListener.onByte(mFile, mTotalByte, mDownloadByte);
-                int progress = EasyUtils.getProgressProgress(mTotalByte, mDownloadByte);
-                // 只有下载进度发生改变的时候才回调此方法，避免引起不必要的 View 重绘
-                if (progress != mDownloadProgress) {
-                    mDownloadProgress = progress;
-                    mListener.onProgress(mFile, mDownloadProgress);
-                    EasyLog.printLog(mHttpRequest, mFile.getPath() +
-                            ", downloaded: " + mDownloadByte + " / " + mTotalByte +
-                            ", progress: " + progress + " %");
-                }
-            });
-        }
-        EasyUtils.closeStream(inputStream);
-        EasyUtils.closeStream(outputStream);
-
-        String md5 = EasyUtils.getFileMd5(EasyUtils.openFileInputStream(mFile));
-        if (!EasyUtils.isEmpty(mMd5) && !mMd5.equalsIgnoreCase(md5)) {
-            // 文件 MD5 值校验失败
-            throw new MD5Exception("MD5 verify failure", md5);
-        }
-
-        EasyUtils.post(() -> {
-            if (mListener == null) {
-                return;
-            }
-            mListener.onComplete(mFile, false);
-            mListener.onEnd(mFile);
-        });
-    }
-
-    @Override
-    protected void onFailure(final Exception e) {
-        EasyLog.printThrowable(mHttpRequest, e);
-        // 打印错误堆栈
-        final Exception finalException = mHttpRequest.getRequestHandler().requestFail(mHttpRequest, e);
-        if (finalException != e) {
-            EasyLog.printThrowable(mHttpRequest, finalException);
-        }
-
-        EasyUtils.post(() -> {
-            if (mListener == null) {
-                return;
-            }
-            mListener.onError(mFile, finalException);
-            mListener.onEnd(mFile);
-            EasyLog.printLog(mHttpRequest, mFile.getPath() + " download completed");
-        });
-    }
-}
\ No newline at end of file
Index: GsonFactory/src/main/java/cn/xihan/gson/factory/data/JSONArrayTypeAdapter.java
===================================================================
diff --git a/GsonFactory/src/main/java/cn/xihan/gson/factory/data/JSONArrayTypeAdapter.java b/GsonFactory/src/main/java/cn/xihan/gson/factory/data/JSONArrayTypeAdapter.java
deleted file mode 100644
--- a/GsonFactory/src/main/java/cn/xihan/gson/factory/data/JSONArrayTypeAdapter.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,45 +0,0 @@
-package cn.xihan.gson.factory.data;
-
-import com.google.gson.JsonElement;
-import com.google.gson.TypeAdapter;
-import com.google.gson.internal.bind.TypeAdapters;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonWriter;
-
-import org.json.JSONArray;
-import org.json.JSONException;
-
-import java.io.IOException;
-
-/**
- *    author : Android 轮子哥
- *    github : https://github.com/getActivity/GsonFactory
- *    time   : 2021/09/30
- *    desc   : JSONObject 类型解析适配器
- */
-public class JSONArrayTypeAdapter extends TypeAdapter<JSONArray> {
-
-    public TypeAdapter<JsonElement> mProxy = TypeAdapters.JSON_ELEMENT;
-
-    @Override
-    public JSONArray read(JsonReader in) throws IOException {
-        JsonElement read = mProxy.read(in);
-        if (read.isJsonArray()) {
-            try {
-                return new JSONArray(read.toString());
-            } catch (JSONException e) {
-                e.printStackTrace();
-            }
-        }
-        return null;
-    }
-
-    @Override
-    public void write(JsonWriter out, JSONArray value) throws IOException {
-        if (value == null) {
-            out.nullValue();
-            return;
-        }
-        mProxy.write(out, mProxy.fromJson(value.toString()));
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/config/IRequestHost.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/config/IRequestHost.java b/src/main/java/cn/xihan/http/config/IRequestHost.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/config/IRequestHost.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,18 +0,0 @@
-package cn.xihan.http.config;
-
-
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/05/19
- *    desc   : 请求主机配置
- */
-public interface IRequestHost {
-
-    /**
-     * 主机地址
-     */
-
-    String getHost();
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/exception/ResponseException.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/exception/ResponseException.java b/src/main/java/cn/xihan/http/exception/ResponseException.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/exception/ResponseException.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,28 +0,0 @@
-package cn.xihan.http.exception;
-
-import okhttp3.Response;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/06/25
- *    desc   : 服务器响应异常
- */
-public final class ResponseException extends HttpException {
-
-    private final Response mResponse;
-
-    public ResponseException(String message, Response response) {
-        super(message);
-        mResponse = response;
-    }
-
-    public ResponseException(String message, Throwable cause, Response response) {
-        super(message, cause);
-        mResponse = response;
-    }
-
-    public Response getResponse() {
-        return mResponse;
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/ssl/HttpSslFactory.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/ssl/HttpSslFactory.java b/src/main/java/cn/xihan/http/ssl/HttpSslFactory.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/ssl/HttpSslFactory.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,164 +0,0 @@
-package cn.xihan.http.ssl;
-
-import java.io.IOException;
-import java.io.InputStream;
-import java.security.KeyManagementException;
-import java.security.KeyStore;
-import java.security.KeyStoreException;
-import java.security.NoSuchAlgorithmException;
-import java.security.UnrecoverableKeyException;
-import java.security.cert.Certificate;
-import java.security.cert.CertificateException;
-import java.security.cert.CertificateFactory;
-
-import javax.net.ssl.HostnameVerifier;
-import javax.net.ssl.KeyManager;
-import javax.net.ssl.KeyManagerFactory;
-import javax.net.ssl.SSLContext;
-import javax.net.ssl.TrustManager;
-import javax.net.ssl.TrustManagerFactory;
-import javax.net.ssl.X509TrustManager;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/11/30
- *    desc   : Https 证书校验工厂
- */
-public final class HttpSslFactory {
-
-    /**
-     * 生成信任任何证书的配置
-     */
-    public static HttpSslConfig generateSslConfig() {
-        return generateSslConfigBase(null, null, null);
-    }
-
-    /**
-     * https 单向认证
-     */
-    public static HttpSslConfig generateSslConfig(X509TrustManager trustManager) {
-        return generateSslConfigBase(trustManager, null, null);
-    }
-
-    /**
-     * https 单向认证
-     */
-    public static HttpSslConfig generateSslConfig(InputStream... certificates) {
-        return generateSslConfigBase(null, null, null, certificates);
-    }
-
-    /**
-     * https 双向认证
-     */
-    public static HttpSslConfig generateSslConfig(InputStream bksFile, String password, InputStream... certificates) {
-        return generateSslConfigBase(null, bksFile, password, certificates);
-    }
-
-    /**
-     * https 双向认证
-     */
-    public static HttpSslConfig generateSslConfig(InputStream bksFile, String password, X509TrustManager trustManager) {
-        return generateSslConfigBase(trustManager, bksFile, password);
-    }
-
-    /**
-     * 生成认证配置
-     *
-     * @param trustManager          可以额外配置信任服务端的证书策略，否则默认是按CA证书去验证的，若不是CA可信任的证书，则无法通过验证
-     * @param bksFile               客户端使用 bks 证书校验服务端证书
-     * @param password              客户端的 bks 证书密码
-     * @param certificates          用含有服务端公钥的证书校验服务端证书
-     */
-    private static HttpSslConfig generateSslConfigBase(X509TrustManager trustManager, InputStream bksFile, String password, InputStream... certificates) {
-        try {
-            KeyManager[] keyManagers = prepareKeyManager(bksFile, password);
-            TrustManager[] trustManagers = prepareTrustManager(certificates);
-            X509TrustManager manager;
-            if (trustManager != null) {
-                // 优先使用用户自定义的 TrustManager
-                manager = trustManager;
-            } else if (trustManagers != null) {
-                // 然后使用默认的 TrustManager
-                manager = chooseTrustManager(trustManagers);
-            } else {
-                // 否则使用不安全的 TrustManager
-                manager = new UnSafeTrustManager();
-            }
-            // 创建 TLS 类型的 SsLContext 对象，使用我们的 TrustManager
-            SSLContext sslContext = SSLContext.getInstance("TLS");
-            // 用上面得到的 TrustManagers 初始化 SsLContext，这样 SslContext 就会信任keyStore中的证书
-            // 第一个参数是授权的密钥管理器，用来授权验证，比如授权自签名的证书验证。第二个是被授权的证书管理器，用来验证服务器端的证书
-            sslContext.init(keyManagers, new TrustManager[]{manager}, null);
-            // 通过 SslContext 获取 SSLSocketFactory 对象
-            return new HttpSslConfig(sslContext.getSocketFactory(), manager);
-        } catch (NoSuchAlgorithmException | KeyManagementException e) {
-            throw new AssertionError(e);
-        }
-    }
-
-    private static KeyManager[] prepareKeyManager(InputStream bksFile, String password) {
-        try {
-            if (bksFile == null || password == null) {
-                return null;
-            }
-            KeyStore keyStore = KeyStore.getInstance("BKS");
-            keyStore.load(bksFile, password.toCharArray());
-            KeyManagerFactory factory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());
-            factory.init(keyStore, password.toCharArray());
-            return factory.getKeyManagers();
-        } catch (IOException | CertificateException | UnrecoverableKeyException | NoSuchAlgorithmException | KeyStoreException e) {
-            e.printStackTrace();
-            return null;
-        }
-    }
-
-    private static TrustManager[] prepareTrustManager(InputStream... certificates) {
-        if (certificates == null || certificates.length <= 0) {
-            return null;
-        }
-        try {
-            CertificateFactory certificateFactory = CertificateFactory.getInstance("X.509");
-            // 创建一个默认类型的 KeyStore，存储我们信任的证书
-            KeyStore keyStore = KeyStore.getInstance(KeyStore.getDefaultType());
-            keyStore.load(null);
-            int index = 0;
-            for (InputStream certStream : certificates) {
-                String certificateAlias = Integer.toString(index++);
-                // 证书工厂根据证书文件的流生成证书 Cert
-                Certificate cert = certificateFactory.generateCertificate(certStream);
-                // 将 Cert 作为可信证书放入到 KeyStore 中
-                keyStore.setCertificateEntry(certificateAlias, cert);
-                try {
-                    if (certStream != null) {
-                        certStream.close();
-                    }
-                } catch (IOException e) {
-                    e.printStackTrace();
-                }
-            }
-            // 我们创建一个默认类型的 TrustManagerFactory
-            TrustManagerFactory factory = TrustManagerFactory.getInstance(TrustManagerFactory.getDefaultAlgorithm());
-            // 用我们之前的 KeyStore 实例初始化 TrustManagerFactory，这样 tmf 就会信任 KeyStore 中的证书
-            factory.init(keyStore);
-            // 通过 tmf 获取 TrustManager 数组，TrustManager 也会信任 KeyStore 中的证书
-            return factory.getTrustManagers();
-        } catch (IOException | CertificateException | KeyStoreException | NoSuchAlgorithmException e) {
-            e.printStackTrace();
-            return null;
-        }
-    }
-
-    private static X509TrustManager chooseTrustManager(TrustManager[] trustManagers) {
-        for (TrustManager trustManager : trustManagers) {
-            if (trustManager instanceof X509TrustManager) {
-                return (X509TrustManager) trustManager;
-            }
-        }
-        return null;
-    }
-
-    public static HostnameVerifier generateUnSafeHostnameVerifier() {
-        return new UnSafeHostnameVerifier();
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/exception/DataException.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/exception/DataException.java b/src/main/java/cn/xihan/http/exception/DataException.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/exception/DataException.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,18 +0,0 @@
-package cn.xihan.http.exception;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/06/25
- *    desc   : 数据解析异常
- */
-public final class DataException extends HttpException {
-
-    public DataException(String message) {
-        super(message);
-    }
-
-    public DataException(String message, Throwable cause) {
-        super(message, cause);
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/config/IRequestHandler.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/config/IRequestHandler.java b/src/main/java/cn/xihan/http/config/IRequestHandler.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/config/IRequestHandler.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,76 +0,0 @@
-package cn.xihan.http.config;
-
-
-
-import java.lang.reflect.Type;
-
-import cn.xihan.http.EasyUtils;
-import cn.xihan.http.request.HttpRequest;
-import okhttp3.Response;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/11/25
- *    desc   : 请求处理器
- */
-public interface IRequestHandler {
-
-    /**
-     * 请求成功时回调
-     *
-     * @param httpRequest   请求接口对象
-     * @param response      响应对象
-     * @param type          解析类型
-     * @return              返回结果
-     *
-     * @throws Exception    如果抛出则回调失败
-     */
-
-    Object requestSucceed(HttpRequest<?> httpRequest, Response response, Type type) throws Exception;
-
-    /**
-     * 请求失败
-     *
-     * @param httpRequest   请求接口对象
-     * @param e             错误对象
-     * @return              错误对象
-     */
-
-    Exception requestFail(HttpRequest<?> httpRequest, Exception e);
-
-    /**
-     * 读取缓存
-     *
-     * @param httpRequest   请求接口对象
-     * @param cacheTime     缓存的有效期（以毫秒为单位）
-     * @return              返回新的请求对象
-     */
-
-    default Object readCache( HttpRequest<?> httpRequest, Type type, long cacheTime) {
-        return null;
-    }
-
-    /**
-     * 写入缓存
-     *
-     * @param httpRequest   请求接口对象
-     * @param result        请求结果对象
-     * @return              缓存写入结果
-     */
-    default boolean writeCache(HttpRequest<?> httpRequest, Response response, Object result) {
-        return false;
-    }
-
-    /**
-     * 清空缓存
-     */
-    default void clearCache() {}
-
-    /**
-     * 解析泛型
-     */
-    default Type getType(Object object) {
-        return EasyUtils.getGenericType(object);
-    }
-}
\ No newline at end of file
Index: FastKv/src/main/java/cn/xihan/fastkv/FastBuffer.java
===================================================================
diff --git a/FastKv/src/main/java/cn/xihan/fastkv/FastBuffer.java b/FastKv/src/main/java/cn/xihan/fastkv/FastBuffer.java
deleted file mode 100644
--- a/FastKv/src/main/java/cn/xihan/fastkv/FastBuffer.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,300 +0,0 @@
-package cn.xihan.fastkv;
-
-import java.nio.charset.StandardCharsets;
-
-public class FastBuffer {
-    private static final int MAX_CHAR_LEN = 2048;
-    private char[] charBuf = null;
-
-    public byte[] hb;
-    public int position;
-
-    public FastBuffer(int capacity) {
-        this(new byte[capacity], 0);
-    }
-
-    public FastBuffer(byte[] array) {
-        this(array, 0);
-    }
-
-    public FastBuffer(byte[] array, int offset) {
-        hb = array;
-        position = offset;
-    }
-
-    public byte get() {
-        return hb[position++];
-    }
-
-    public final void put(byte v) {
-        hb[position++] = v;
-    }
-
-    public short getShort() {
-        return (short) (((hb[position++] & 0xFF)) |
-                ((hb[position++]) << 8));
-    }
-
-    public void putShort(short v) {
-        hb[position++] = (byte) v;
-        hb[position++] = (byte) (v >> 8);
-    }
-
-    public int getInt() {
-        return (((hb[position++] & 0xFF)) |
-                ((hb[position++] & 0xFF) << 8) |
-                ((hb[position++] & 0xFF) << 16) |
-                ((hb[position++]) << 24));
-    }
-
-    public void putInt(int v) {
-        hb[position++] = (byte) v;
-        hb[position++] = (byte) (v >> 8);
-        hb[position++] = (byte) (v >> 16);
-        hb[position++] = (byte) (v >> 24);
-    }
-
-    public void putInt(int i, int v) {
-        hb[i++] = (byte) v;
-        hb[i++] = (byte) (v >> 8);
-        hb[i++] = (byte) (v >> 16);
-        hb[i] = (byte) (v >> 24);
-    }
-
-    public int getVarint32() {
-        int x = hb[position++];
-        if ((x >> 7) == 0) return x;
-        x = (x & 0x7f) | (hb[position++] << 7);
-        if ((x >> 14) == 0) return x;
-        x = (x & 0x3fff) | (hb[position++] << 14);
-        if ((x >> 21) == 0) return x;
-        x = (x & 0x1fffff) | (hb[position++] << 21);
-        if ((x >> 28) == 0) return x;
-        x = (x & 0xfffffff) | (hb[position++] << 28);
-        return x;
-    }
-
-    public int putVarint32(int i, int v) {
-        while ((v & 0xffffff80) != 0) {
-            hb[i++] = (byte) ((v & 0x7f) | 0x80);
-            v >>>= 7;
-        }
-        hb[i++] = (byte) v;
-        return i;
-    }
-
-    public void putVarint32(int v) {
-        position = putVarint32(position, v);
-    }
-
-    public static int getVarint32Size(int v) {
-        if ((v >> 7) == 0) {
-            return 1;
-        } else if ((v >> 14) == 0) {
-            return 2;
-        } else if ((v >> 21) == 0) {
-            return 3;
-        } else if ((v >> 28) == 0) {
-            return 4;
-        }
-        return 5;
-    }
-
-    public void putLong(int i, long v) {
-        hb[i++] = (byte) v;
-        hb[i++] = (byte) (v >> 8);
-        hb[i++] = (byte) (v >> 16);
-        hb[i++] = (byte) (v >> 24);
-        hb[i++] = (byte) (v >> 32);
-        hb[i++] = (byte) (v >> 40);
-        hb[i++] = (byte) (v >> 48);
-        hb[i] = (byte) (v >> 56);
-    }
-
-    public void putLong(long v) {
-        putLong(position, v);
-        position += 8;
-    }
-
-    public long getLong(int i) {
-        return (((long) hb[i++] & 0xFF) |
-                (((long) hb[i++] & 0xFF) << 8) |
-                (((long) hb[i++] & 0xFF) << 16) |
-                (((long) hb[i++] & 0xFF) << 24) |
-                (((long) hb[i++] & 0xFF) << 32) |
-                (((long) hb[i++] & 0xFF) << 40) |
-                (((long) hb[i++] & 0xFF) << 48) |
-                (((long) hb[i]) << 56));
-    }
-
-    public long getLong() {
-        long value = getLong(position);
-        position += 8;
-        return value;
-    }
-
-    public float getFloat() {
-        return Float.intBitsToFloat(getInt());
-    }
-
-    public double getDouble() {
-        return Double.longBitsToDouble(getLong());
-    }
-
-    public byte[] getBytes(int len) {
-        byte[] bytes = new byte[len];
-        System.arraycopy(hb, position, bytes, 0, len);
-        position += len;
-        return bytes;
-    }
-
-    public void putBytes(byte[] src) {
-        int len = src.length;
-        if (len > 0) {
-            System.arraycopy(src, 0, hb, position, len);
-            position += len;
-        }
-    }
-
-    public String getString(int len) {
-        if (len < 0) {
-            return null;
-        } else if (len == 0) {
-            return "";
-        } else {
-            String str = decodeStr(len);
-            position += len;
-            return str;
-        }
-    }
-
-    public void putString(String str) {
-        if (str != null && !str.isEmpty()) {
-            encodeStr(str);
-        }
-    }
-
-    /**
-     * get string size in utf-8
-     *
-     * @param str The String
-     * @return The utf-8 size of the string
-     */
-    public static int getStringSize(String str) {
-        int j = 0;
-        int i = 0;
-        int n = str.length();
-        while (i < n) {
-            char c = str.charAt(i++);
-            if (c < 0x80) {
-                j += 1;
-            } else if (c < 0x800) {
-                j += 2;
-            } else if ((c < 0xD800 || c > 0xDFFF)) {
-                j += 3;
-            } else {
-                i++;
-                j += 4;
-            }
-        }
-        return j;
-    }
-
-    private char[] getCharBuf(int len) {
-        if (charBuf == null) {
-            if (len <= 256) {
-                charBuf = new char[256];
-            } else {
-                charBuf = new char[MAX_CHAR_LEN];
-            }
-        } else if (charBuf.length < len) {
-            charBuf = new char[MAX_CHAR_LEN];
-        }
-        return charBuf;
-    }
-
-    private String decodeStr(int len) {
-        if (len > MAX_CHAR_LEN) {
-            return new String(hb, position, len, StandardCharsets.UTF_8);
-        }
-        char[] buf = getCharBuf(len);
-        byte[] src = hb;
-        int i = position;
-        int j = 0;
-        int limit = position + len;
-        while (i < limit) {
-            byte b1 = src[i++];
-            if (b1 > 0) {
-                buf[j++] = (char) b1;
-            } else if (b1 < (byte) 0xE0) {
-                byte b2 = src[i++];
-                buf[j++] = (char) (((b1 & 0x1F) << 6) | (b2 & 0x3F));
-            } else if (b1 < (byte) 0xF0) {
-                byte b2 = src[i++];
-                byte b3 = src[i++];
-                buf[j++] = (char) (((b1 & 0x0F) << 12) | ((b2 & 0x3F) << 6) | (b3 & 0x3F));
-            } else {
-                byte b2 = src[i++];
-                byte b3 = src[i++];
-                byte b4 = src[i++];
-                int cp = ((b1 & 0x07) << 18) | ((b2 & 0x3F) << 12) | ((b3 & 0x3F) << 6) | (b4 & 0x3F);
-                buf[j++] = (char) (0xD7C0 + (cp >>> 10));
-                buf[j++] = (char) (0xDC00 + (cp & 0x3FF));
-            }
-        }
-        if (i > limit) {
-            throw new IllegalArgumentException("Invalid String");
-        }
-        return new String(buf, 0, j);
-    }
-
-    private void encodeStr(String s) {
-        byte[] buf = hb;
-        int j = position;
-        int i = 0;
-        int n = s.length();
-        while (i < n) {
-            char c = s.charAt(i++);
-            if (c < 0x80) {
-                // 0xxxxxxx
-                buf[j++] = (byte) c;
-            } else if (c < 0x800) {
-                // 110xxxxx 10xxxxxx
-                buf[j++] = (byte) (0xC0 | (c >>> 6));
-                buf[j++] = (byte) (0x80 | (0x3F & c));
-            } else if ((c < 0xD800 || c > 0xDFFF)) {
-                // 1110xxxx 10xxxxxx 10xxxxxx
-                buf[j++] = (byte) (0xE0 | (c >>> 12));
-                buf[j++] = (byte) (0x80 | (0x3F & (c >>> 6)));
-                buf[j++] = (byte) (0x80 | (0x3F & c));
-            } else {
-                // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
-                char c2 = s.charAt(i++);
-                int cp = (c << 10) + c2 + 0xFCA02400;
-                buf[j++] = (byte) (0xF0 | (cp >>> 18));
-                buf[j++] = (byte) (0x80 | (0x3F & (cp >>> 12)));
-                buf[j++] = (byte) (0x80 | (0x3F & (cp >>> 6)));
-                buf[j++] = (byte) (0x80 | (0x3F & cp));
-            }
-        }
-        position = j;
-    }
-
-    long getChecksum(int start, int size) {
-        if (size <= 0) return 0L;
-        int p = start;
-        int n = size >> 3;
-        int remain = size & 7;
-        long checkSum = 0L;
-        for (int i = 0; i < n; i++) {
-            checkSum ^= getLong(p);
-            p += 8;
-        }
-        int maxShift = remain << 3;
-        for (int i = 0; i < maxShift; i += 8) {
-            checkSum ^= ((long) hb[p++] & 0xFF) << i;
-        }
-        int shift = (start & 7) << 3;
-        return (checkSum << shift) | (checkSum >>> (64 - shift));
-    }
-}
Index: FastKv/src/main/java/cn/xihan/fastkv/Container.java
===================================================================
diff --git a/FastKv/src/main/java/cn/xihan/fastkv/Container.java b/FastKv/src/main/java/cn/xihan/fastkv/Container.java
deleted file mode 100644
--- a/FastKv/src/main/java/cn/xihan/fastkv/Container.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,142 +0,0 @@
-package cn.xihan.fastkv;
-
-/**
- * struct of primary type (boolean/int/float/long/double):
- * [type|keyLen|keyData|value]
- *
- * <p>
- * struct of variable type (string/array/object):
- * [type|keyLen|keyData|valueLen|value]
- *
- * <p>
- * type: 1 byte,
- * keyLen: 1 byte,
- * valueLen: 2 bytes.
- */
-class Container {
-    static abstract class BaseContainer {
-        // The offset record the start of value, not the start of key-value.
-        int offset;
-
-        abstract byte getType();
-    }
-
-    static class BooleanContainer extends BaseContainer {
-        boolean value;
-
-        BooleanContainer(int offset, boolean value) {
-            this.offset = offset;
-            this.value = value;
-        }
-
-        @Override
-        byte getType() {
-            return DataType.BOOLEAN;
-        }
-    }
-
-    static class IntContainer extends BaseContainer {
-        int value;
-
-        IntContainer(int offset, int value) {
-            this.offset = offset;
-            this.value = value;
-        }
-
-        @Override
-        byte getType() {
-            return DataType.INT;
-        }
-    }
-
-    static class FloatContainer extends BaseContainer {
-        float value;
-
-        FloatContainer(int offset, float value) {
-            this.offset = offset;
-            this.value = value;
-        }
-
-        @Override
-        byte getType() {
-            return DataType.FLOAT;
-        }
-    }
-
-    static class LongContainer extends BaseContainer {
-        long value;
-
-        LongContainer(int offset, long value) {
-            this.offset = offset;
-            this.value = value;
-        }
-
-        @Override
-        byte getType() {
-            return DataType.LONG;
-        }
-    }
-
-    static class DoubleContainer extends BaseContainer {
-        double value;
-
-        DoubleContainer(int offset, double value) {
-            this.offset = offset;
-            this.value = value;
-        }
-
-        @Override
-        byte getType() {
-            return DataType.DOUBLE;
-        }
-    }
-
-    static abstract class VarContainer extends BaseContainer {
-        Object value;
-        int start;
-        int valueSize;
-        boolean external;
-
-        VarContainer(int start, int offset, Object value, int size, boolean external) {
-            this.start = start;
-            this.offset = offset;
-            this.value = value;
-            this.valueSize = size;
-            this.external = external;
-        }
-    }
-
-    static class StringContainer extends VarContainer {
-        StringContainer(int start, int offset, String value, int size, boolean external) {
-            super(start, offset, value, size, external);
-        }
-
-        @Override
-        byte getType() {
-            return DataType.STRING;
-        }
-    }
-
-    static class ArrayContainer extends VarContainer {
-
-        ArrayContainer(int start, int offset, Object value, int size, boolean external) {
-            super(start, offset, value, size, external);
-        }
-
-        @Override
-        byte getType() {
-            return DataType.ARRAY;
-        }
-    }
-
-    static class ObjectContainer extends VarContainer {
-        ObjectContainer(int start, int offset, Object value, int size, boolean external) {
-            super(start, offset, value, size, external);
-        }
-
-        @Override
-        byte getType() {
-            return DataType.OBJECT;
-        }
-    }
-}
Index: src/main/java/cn/xihan/http/listener/OnDownloadListener.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/listener/OnDownloadListener.java b/src/main/java/cn/xihan/http/listener/OnDownloadListener.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/listener/OnDownloadListener.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,56 +0,0 @@
-package cn.xihan.http.listener;
-
-import java.io.File;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/05/19
- *    desc   : 下载监听器
- */
-public interface OnDownloadListener {
-
-    /**
-     * 下载开始
-     */
-    void onStart(File file);
-
-    /**
-     * 下载字节改变
-     *
-     * @param totalByte             总字节数
-     * @param downloadByte          已下载字节数
-     */
-    default void onByte(File file, long totalByte, long downloadByte) {}
-
-    /**
-     * 下载进度改变
-     *
-     * @param progress              下载进度值（0-100）
-     */
-    void onProgress(File file, int progress);
-
-    /**
-     * 请求成功
-     *
-     * @param cache         是否是通过缓存下载成功的
-     */
-    default void onComplete(File file, boolean cache) {
-        onComplete(file);
-    }
-
-    /**
-     * 下载完成
-     */
-    void onComplete(File file);
-
-    /**
-     * 下载出错
-     */
-    void onError(File file, Exception e);
-
-    /**
-     * 下载结束
-     */
-    void onEnd(File file);
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/request/DownloadRequest.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/request/DownloadRequest.java b/src/main/java/cn/xihan/http/request/DownloadRequest.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/request/DownloadRequest.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,176 +0,0 @@
-package cn.xihan.http.request;
-
-
-import java.io.File;
-
-import cn.xihan.http.EasyLog;
-import cn.xihan.http.EasyUtils;
-import cn.xihan.http.callback.DownloadCallback;
-import cn.xihan.http.config.DownloadApi;
-import cn.xihan.http.config.RequestServer;
-import cn.xihan.http.listener.OnDownloadListener;
-import cn.xihan.http.listener.OnHttpListener;
-import cn.xihan.http.model.*;
-import okhttp3.Request;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/07/20
- *    desc   : 下载请求
- */
-public final class DownloadRequest extends HttpRequest<DownloadRequest> {
-
-    private HttpRequest<?> mRealRequest;
-
-    /** 下载请求方式 */
-    private HttpMethod mMethod = HttpMethod.GET;
-
-    /** 保存的文件 */
-    private File mFile;
-
-    /** 校验的 md5 */
-    private String mMd5;
-
-    /** 下载监听回调 */
-    private OnDownloadListener mListener;
-
-    /** 请求执行对象 */
-    private CallProxy mCallProxy;
-
-    public DownloadRequest() {
-        mRealRequest = new GetRequest();
-    }
-
-    /**
-     * 设置请求方式
-     */
-    public DownloadRequest method(HttpMethod method) {
-        mMethod = method;
-        switch (mMethod) {
-            case GET:
-                // 如果这个下载请求方式是 Get
-                mRealRequest = new GetRequest();
-                break;
-            case POST:
-                // 如果这个下载请求方式是 Post
-                mRealRequest = new PostRequest();
-                break;
-            default:
-                throw new IllegalStateException("method nonsupport");
-        }
-        return this;
-    }
-
-    /**
-     * 设置下载地址
-     */
-    public DownloadRequest url(String url) {
-        server(new RequestServer(url));
-        api(new DownloadApi(""));
-        return this;
-    }
-
-    /**
-     * 设置保存的路径
-     */
-
-    public DownloadRequest file(String filePath) {
-        return file(new File(filePath));
-    }
-
-    public DownloadRequest file(File file) {
-        mFile = file;
-        return this;
-    }
-
-    /**
-     * 设置 MD5 值
-     */
-    public DownloadRequest md5(String md5) {
-        mMd5 = md5;
-        return this;
-    }
-
-    /**
-     * 设置下载监听
-     */
-    public DownloadRequest listener(OnDownloadListener listener) {
-        mListener = listener;
-        return this;
-    }
-
-    /**
-     * 开始下载
-     */
-    public DownloadRequest start() {
-        long delayMillis = getDelayMillis();
-        if (delayMillis > 0) {
-            // 打印请求延迟时间
-            EasyLog.printKeyValue(this, "RequestDelay", String.valueOf(delayMillis));
-        }
-
-        StackTraceElement[] stackTrace = new Throwable().getStackTrace();
-
-        EasyUtils.postDelayed(() -> {
-
-            EasyLog.printStackTrace(this, stackTrace);
-            mCallProxy = new CallProxy(createCall());
-            new DownloadCallback(this)
-                    .setFile(mFile)
-                    .setMd5(mMd5)
-                    .setListener(mListener)
-                    .setCall(mCallProxy)
-                    .start();
-        }, delayMillis);
-
-        return this;
-    }
-
-    /**
-     * 取消下载
-     */
-    public DownloadRequest stop() {
-        if (mCallProxy != null) {
-            mCallProxy.cancel();
-        }
-        return this;
-    }
-
-    @Override
-    public void request(OnHttpListener<?> listener) {
-        // 请调用 start 方法
-        throw new IllegalStateException("Call the start method");
-    }
-
-    @Override
-    public <Bean> Bean execute(ResponseClass<Bean> responseClass) {
-        // 请调用 start 方法
-        throw new IllegalStateException("Call the start method");
-    }
-
-    @Override
-    public DownloadRequest cancel() {
-        // 请调用 stop 方法
-        throw new IllegalStateException("Call the start method");
-    }
-
-    @Override
-    public String getRequestMethod() {
-        return String.valueOf(mMethod);
-    }
-
-    @Override
-    protected Request createRequest(String url, String tag, HttpParams params, HttpHeaders headers, BodyType type) {
-        return mRealRequest.api(getRequestApi()).createRequest(url, tag, params, headers, type);
-    }
-
-    @Override
-    protected void addHttpParams(HttpParams params, String key, Object value, BodyType type) {}
-
-    @Override
-    protected void addRequestParams(Request.Builder requestBuilder, HttpParams params, BodyType type) {}
-
-    @Override
-    protected void printRequestLog(Request request, HttpParams params, HttpHeaders headers, BodyType type) {}
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/model/ContentType.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/model/ContentType.java b/src/main/java/cn/xihan/http/model/ContentType.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/model/ContentType.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,48 +0,0 @@
-package cn.xihan.http.model;
-
-
-
-import java.net.FileNameMap;
-import java.net.URLConnection;
-
-import cn.xihan.http.EasyUtils;
-import okhttp3.MediaType;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2021/03/31
- *    desc   : RequestBody 包装类（用于获取上传进度）
- */
-public final class ContentType {
-
-    /** 字节流 */
-    public static final MediaType STREAM = MediaType.parse("application/octet-stream");
-
-    /** Json */
-    public static final MediaType JSON = MediaType.parse("application/json; charset=utf-8");
-
-    /** 纯文本 */
-    public static final MediaType TEXT = MediaType.parse("text/plain; charset=utf-8");
-
-    /**
-     * 根据文件名获取 MIME 类型
-     */
-    public static MediaType guessMimeType(String fileName) {
-        if (EasyUtils.isEmpty(fileName)) {
-            return STREAM;
-        }
-        FileNameMap fileNameMap = URLConnection.getFileNameMap();
-        // 解决文件名中含有#号异常的问题
-        fileName = fileName.replace("#", "");
-        String contentType = fileNameMap.getContentTypeFor(fileName);
-        if (contentType == null) {
-            return STREAM;
-        }
-        MediaType type = MediaType.parse(contentType);
-        if (type == null) {
-            type = STREAM;
-        }
-        return type;
-    }
-}
\ No newline at end of file
Index: GsonFactory/src/main/java/cn/xihan/gson/factory/data/IntegerTypeAdapter.java
===================================================================
diff --git a/GsonFactory/src/main/java/cn/xihan/gson/factory/data/IntegerTypeAdapter.java b/GsonFactory/src/main/java/cn/xihan/gson/factory/data/IntegerTypeAdapter.java
deleted file mode 100644
--- a/GsonFactory/src/main/java/cn/xihan/gson/factory/data/IntegerTypeAdapter.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,52 +0,0 @@
-package cn.xihan.gson.factory.data;
-
-import com.google.gson.TypeAdapter;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonWriter;
-
-import java.io.IOException;
-import java.math.BigDecimal;
-
-/**
- *    author : Android 轮子哥
- *    github : https://github.com/getActivity/GsonFactory
- *    time   : 2020/05/05
- *    desc   : int / Integer 类型解析适配器，参考：{@link com.google.gson.internal.bind.TypeAdapters#INTEGER}
- */
-public class IntegerTypeAdapter extends TypeAdapter<Integer> {
-
-    @Override
-    public Integer read(JsonReader in) throws IOException {
-        switch (in.peek()) {
-            case NUMBER:
-                try {
-                    return in.nextInt();
-                } catch (NumberFormatException e) {
-                    // 如果带小数点则会抛出这个异常
-                    return (int) in.nextDouble();
-                }
-            case STRING:
-                String result = in.nextString();
-                if (result == null || "".equals(result)) {
-                    return 0;
-                }
-                try {
-                    return Integer.parseInt(result);
-                } catch (NumberFormatException e) {
-                    // 如果带小数点则会抛出这个异常
-                    return (int) new BigDecimal(result).floatValue();
-                }
-            case NULL:
-                in.nextNull();
-                return null;
-            default:
-                in.skipValue();
-                throw new IllegalArgumentException();
-        }
-    }
-
-    @Override
-    public void write(JsonWriter out, Integer value) throws IOException {
-        out.value(value);
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/exception/TokenException.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/exception/TokenException.java b/src/main/java/cn/xihan/http/exception/TokenException.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/exception/TokenException.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,20 +0,0 @@
-package cn.xihan.http.exception;
-
-
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/05/19
- *    desc   : Token 失效异常
- */
-public final class TokenException extends HttpException {
-
-    public TokenException(String message) {
-        super(message);
-    }
-
-    public TokenException(String message, Throwable cause) {
-        super(message, cause);
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/listener/OnHttpListener.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/listener/OnHttpListener.java b/src/main/java/cn/xihan/http/listener/OnHttpListener.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/listener/OnHttpListener.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,41 +0,0 @@
-package cn.xihan.http.listener;
-
-import okhttp3.Call;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/05/19
- *    desc   : 请求回调监听器
- */
-public interface OnHttpListener<T> {
-
-    /**
-     * 请求开始
-     */
-    default void onStart(Call call) {}
-
-    /**
-     * 请求成功
-     *
-     * @param cache         是否是通过缓存请求成功的
-     */
-    default void onSucceed(T result, boolean cache) {
-        onSucceed(result);
-    }
-
-    /**
-     * 请求成功
-     */
-    void onSucceed(T result);
-
-    /**
-     * 请求出错
-     */
-    void onFail(Exception e);
-
-    /**
-     * 请求结束
-     */
-    default void onEnd(Call call) {}
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/request/HeadRequest.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/request/HeadRequest.java b/src/main/java/cn/xihan/http/request/HeadRequest.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/request/HeadRequest.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,23 +0,0 @@
-package cn.xihan.http.request;
-
-
-import cn.xihan.http.model.HttpMethod;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/10/07
- *    desc   : Head 请求
- */
-public final class HeadRequest extends UrlRequest<HeadRequest> {
-
-    public HeadRequest() {
-
-    }
-
-
-    @Override
-    public String getRequestMethod() {
-        return HttpMethod.HEAD.toString();
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/exception/MD5Exception.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/exception/MD5Exception.java b/src/main/java/cn/xihan/http/exception/MD5Exception.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/exception/MD5Exception.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,21 +0,0 @@
-package cn.xihan.http.exception;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/11/16
- *    desc   : MD5 校验异常
- */
-public final class MD5Exception extends HttpException {
-
-    private final String mMD5;
-
-    public MD5Exception(String message, String md5) {
-        super(message);
-        mMD5 = md5;
-    }
-
-    public String getMD5() {
-        return mMD5;
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/ssl/UnSafeHostnameVerifier.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/ssl/UnSafeHostnameVerifier.java b/src/main/java/cn/xihan/http/ssl/UnSafeHostnameVerifier.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/ssl/UnSafeHostnameVerifier.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,24 +0,0 @@
-package cn.xihan.http.ssl;
-
-
-
-import javax.net.ssl.HostnameVerifier;
-import javax.net.ssl.SSLSession;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/11/30
- *    desc   : 证书域名校验
- */
-public final class UnSafeHostnameVerifier implements HostnameVerifier {
-
-
-    @Override
-    public boolean verify(String hostname, SSLSession session) {
-        // 此类是用于主机名验证的基接口。 在握手期间，如果 URL 的主机名和服务器的标识主机名不匹配，
-        // 则验证机制可以回调此接口的实现程序来确定是否应该允许此连接。策略可以是基于证书的或依赖于其他验证方案。
-        // 当验证 URL 主机名使用的默认规则失败时使用这些回调。如果主机名是可接受的，则返回 true
-        return true;
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/body/UpdateBody.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/body/UpdateBody.java b/src/main/java/cn/xihan/http/body/UpdateBody.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/body/UpdateBody.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,79 +0,0 @@
-package cn.xihan.http.body;
-
-
-
-import java.io.File;
-import java.io.FileNotFoundException;
-import java.io.IOException;
-import java.io.InputStream;
-
-import cn.xihan.http.EasyUtils;
-import cn.xihan.http.model.ContentType;
-import okhttp3.MediaType;
-import okhttp3.RequestBody;
-import okio.BufferedSink;
-import okio.Okio;
-import okio.Source;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/12/14
- *    desc   : 上传文件流
- */
-public class UpdateBody extends RequestBody {
-
-    /** 上传源 */
-    private final Source mSource;
-
-    /** 内容类型 */
-    private final MediaType mMediaType;
-
-    /** 内容名称 */
-    private final String mKeyName;
-
-    /** 内容大小 */
-    private final long mLength;
-
-    public UpdateBody(File file) throws FileNotFoundException {
-        this(Okio.source(file), ContentType.guessMimeType(file.getName()), file.getName(), file.length());
-    }
-
-    public UpdateBody(InputStream inputStream, String name) throws IOException {
-        this(Okio.source(inputStream), ContentType.STREAM, name, inputStream.available());
-    }
-
-    public UpdateBody(Source source, MediaType type, String name, long length) {
-        mSource = source;
-        mMediaType = type;
-        mKeyName = name;
-        mLength = length;
-    }
-
-    @Override
-    public MediaType contentType() {
-        return mMediaType;
-    }
-
-    @Override
-    public long contentLength() {
-        if (mLength == 0) {
-            // 如果不能获取到大小，则返回 -1，参考 RequestBody.contentLength 方法实现
-            return -1;
-        }
-        return mLength;
-    }
-
-    @Override
-    public void writeTo(BufferedSink sink) throws IOException {
-        try {
-            sink.writeAll(mSource);
-        } finally {
-            EasyUtils.closeStream(mSource);
-        }
-    }
-
-    public String getKeyName() {
-        return mKeyName;
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/model/CallProxy.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/model/CallProxy.java b/src/main/java/cn/xihan/http/model/CallProxy.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/model/CallProxy.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,79 +0,0 @@
-package cn.xihan.http.model;
-
-
-
-import java.io.IOException;
-
-import okhttp3.Call;
-import okhttp3.Callback;
-import okhttp3.Request;
-import okhttp3.Response;
-import okio.Timeout;
-import org.jetbrains.annotations.NotNull;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/12/14
- *    desc   : 请求对象代理
- */
-public final class CallProxy implements Call {
-
-    private Call mCall;
-
-    public CallProxy(Call call) {
-        mCall = call;
-    }
-
-    public void setCall(Call call) {
-        mCall = call;
-    }
-
-
-    @NotNull
-    @Override
-    public Request request() {
-        return mCall.request();
-    }
-
-
-    @NotNull
-    @Override
-    public Response execute() throws IOException {
-        return mCall.execute();
-    }
-
-    @Override
-    public void enqueue(@NotNull Callback responseCallback) {
-        mCall.enqueue(responseCallback);
-    }
-
-    @Override
-    public void cancel() {
-        mCall.cancel();
-    }
-
-    @Override
-    public boolean isExecuted() {
-        return mCall.isExecuted();
-    }
-
-    @Override
-    public boolean isCanceled() {
-        return mCall.isCanceled();
-    }
-
-
-    @NotNull
-    @Override
-    public Timeout timeout() {
-        return mCall.timeout();
-    }
-
-
-    @NotNull
-    @Override
-    public Call clone() {
-        return mCall.clone();
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/model/RequestHandler.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/model/RequestHandler.java b/src/main/java/cn/xihan/http/model/RequestHandler.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/model/RequestHandler.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,187 +0,0 @@
-package cn.xihan.http.model;
-
-
-import cn.xihan.gson.factory.GsonFactory;
-import cn.xihan.http.EasyLog;
-import cn.xihan.http.EasyUtils;
-import cn.xihan.http.config.IRequestHandler;
-import cn.xihan.http.exception.*;
-import cn.xihan.http.request.HttpRequest;
-import com.google.gson.JsonSyntaxException;
-
-
-import java.io.IOException;
-import java.io.InputStream;
-import java.lang.reflect.GenericArrayType;
-import java.lang.reflect.Type;
-import java.net.SocketTimeoutException;
-import java.net.UnknownHostException;
-
-import okhttp3.Headers;
-import okhttp3.Response;
-import okhttp3.ResponseBody;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/05/19
- *    desc   : 请求处理类
- */
-public final class RequestHandler implements IRequestHandler {
-
-
-
-    public RequestHandler() {
-
-    }
-
-
-    @Override
-    public Object requestSucceed(HttpRequest<?> httpRequest, Response response,
-                                 Type type) throws Exception {
-        if (Response.class.equals(type)) {
-            return response;
-        }
-
-        if (!response.isSuccessful()) {
-            // 返回响应异常
-            throw new ResponseException(EasyUtils.RESPONSE_ERROR + ", responseCode: " +
-                    response.code() + ", message: " + response.message(), response);
-        }
-
-        if (Headers.class.equals(type)) {
-            return response.headers();
-        }
-
-        ResponseBody body = response.body();
-        if (body == null) {
-            throw new NullBodyException(EasyUtils.DATA_ERROR);
-        }
-
-        if (ResponseBody.class.equals(type)) {
-            return body;
-        }
-
-        // 如果是用数组接收，判断一下是不是用 byte[] 类型进行接收的
-        if(type instanceof GenericArrayType) {
-            Type genericComponentType = ((GenericArrayType) type).getGenericComponentType();
-            if (byte.class.equals(genericComponentType)) {
-                return body.bytes();
-            }
-        }
-
-        if (InputStream.class.equals(type)) {
-            return body.byteStream();
-        }
-
-        String text;
-        try {
-            text = body.string();
-        } catch (IOException e) {
-            // 返回结果读取异常
-            throw new DataException(EasyUtils.RESPONSE_ERROR, e);
-        }
-
-        // 打印这个 Json 或者文本
-        EasyLog.printJson(httpRequest, text);
-
-        if (String.class.equals(type)) {
-            return text;
-        }
-
-        final Object result;
-
-        try {
-            result = GsonFactory.getSingletonGson().fromJson(text, type);
-        } catch (JsonSyntaxException e) {
-            // 返回结果读取异常
-            throw new DataException(EasyUtils.DATA_ERROR, e);
-        }
-
-        if (result instanceof HttpData) {
-            HttpData<?> model = (HttpData<?>) result;
-
-            if (model.isRequestSucceed()) {
-                // 代表执行成功
-                return result;
-            }
-
-            if (model.isTokenFailure()) {
-                // 代表登录失效，需要重新登录
-                throw new TokenException(EasyUtils.LOGIN_INVALID);
-            }
-
-            // 代表执行失败
-            throw new ResultException(model.getMessage(), model);
-        }
-        return result;
-    }
-
-
-    @Override
-    public Exception requestFail(HttpRequest<?> httpRequest, Exception e) {
-        if (e instanceof HttpException) {
-            if (e instanceof TokenException) {
-                // 登录信息失效，跳转到登录页
-
-            }
-            return e;
-        }
-
-        if (e instanceof SocketTimeoutException) {
-            return new TimeoutException(EasyUtils.TIME_OUT, e);
-        }
-
-        if (e instanceof UnknownHostException) {
-
-            // 判断网络是否连接
-            if (EasyUtils.isNetworkAvailable()) {
-                // 有连接就是服务器的问题
-                return new ServerException(EasyUtils.CONNECT_ERROR, e);
-            }
-            // 没有连接就是网络异常
-            return new NetworkException(EasyUtils.ERROR, e);
-        }
-
-        if (e instanceof IOException) {
-            return new CancelException(EasyUtils.REQUEST_CANCEL, e);
-        }
-
-        return new HttpException(e.getMessage(), e);
-    }
-
-
-    @Override
-    public Object readCache(HttpRequest<?> httpRequest, Type type, long cacheTime) {
-        String cacheKey = HttpCacheManager.generateCacheKey(httpRequest);
-        String cacheValue = HttpCacheManager.getFastKv().getString(cacheKey, null);
-        if (cacheValue == null || "".equals(cacheValue) || "{}".equals(cacheValue)) {
-            return null;
-        }
-        EasyLog.printLog(httpRequest, "----- readCache cacheKey -----");
-        EasyLog.printJson(httpRequest, cacheKey);
-        EasyLog.printLog(httpRequest, "----- readCache cacheValue -----");
-        EasyLog.printJson(httpRequest, cacheValue);
-        return GsonFactory.getSingletonGson().fromJson(cacheValue, type);
-    }
-
-    @Override
-    public boolean writeCache(HttpRequest<?> httpRequest, Response response, Object result) {
-        String cacheKey = HttpCacheManager.generateCacheKey(httpRequest);
-        String cacheValue = GsonFactory.getSingletonGson().toJson(result);
-        if (cacheValue == null || "".equals(cacheValue) || "{}".equals(cacheValue)) {
-            return false;
-        }
-        EasyLog.printLog(httpRequest, "----- writeCache cacheKey -----");
-        EasyLog.printJson(httpRequest, cacheKey);
-        EasyLog.printLog(httpRequest, "----- writeCache cacheValue -----");
-        EasyLog.printJson(httpRequest, cacheValue);
-        HttpCacheManager.getFastKv().putString(cacheKey, cacheValue);
-        return HttpCacheManager.getFastKv().getString(cacheKey, null) != null;
-    }
-
-    @Override
-    public void clearCache() {
-        HttpCacheManager.getFastKv().clear();
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/model/HttpHeaders.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/model/HttpHeaders.java b/src/main/java/cn/xihan/http/model/HttpHeaders.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/model/HttpHeaders.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,54 +0,0 @@
-package cn.xihan.http.model;
-
-
-
-import cn.xihan.http.EasyConfig;
-
-import java.util.HashMap;
-import java.util.Set;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/07/20
- *    desc   : 请求头封装
- */
-public final class HttpHeaders {
-
-    /** 请求头存放集合 */
-    private final HashMap<String, String> mHeaders = new HashMap<>(EasyConfig.getInstance().getHeaders());
-
-    public void put(String key, String value) {
-        if (key == null || value == null) {
-            return;
-        }
-        mHeaders.put(key, value);
-    }
-
-    public void remove(String key) {
-        if (key == null) {
-            return;
-        }
-        mHeaders.remove(key);
-    }
-
-    public String get(String key) {
-        return mHeaders.get(key);
-    }
-
-    public void clear() {
-        mHeaders.clear();
-    }
-
-    public boolean isEmpty() {
-        return mHeaders.isEmpty();
-    }
-
-    public Set<String> getKeys() {
-        return mHeaders.keySet();
-    }
-
-    public HashMap<String, String> getHeaders() {
-        return mHeaders;
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/request/PutRequest.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/request/PutRequest.java b/src/main/java/cn/xihan/http/request/PutRequest.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/request/PutRequest.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,22 +0,0 @@
-package cn.xihan.http.request;
-
-
-import cn.xihan.http.model.HttpMethod;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/10/07
- *    desc   : Put 请求
- */
-public final class PutRequest extends BodyRequest<PutRequest> {
-
-    public PutRequest() {
-
-    }
-
-    @Override
-    public String getRequestMethod() {
-        return HttpMethod.PUT.toString();
-    }
-}
\ No newline at end of file
Index: GsonFactory/src/main/java/cn/xihan/gson/factory/element/ReflectiveTypeAdapter.java
===================================================================
diff --git a/GsonFactory/src/main/java/cn/xihan/gson/factory/element/ReflectiveTypeAdapter.java b/GsonFactory/src/main/java/cn/xihan/gson/factory/element/ReflectiveTypeAdapter.java
deleted file mode 100644
--- a/GsonFactory/src/main/java/cn/xihan/gson/factory/element/ReflectiveTypeAdapter.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,108 +0,0 @@
-package cn.xihan.gson.factory.element;
-
-import cn.xihan.gson.factory.GsonFactory;
-import cn.xihan.gson.factory.JsonCallback;
-import com.google.gson.JsonSyntaxException;
-import com.google.gson.TypeAdapter;
-import com.google.gson.internal.ObjectConstructor;
-import com.google.gson.reflect.TypeToken;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonToken;
-import com.google.gson.stream.JsonWriter;
-
-
-import java.io.IOException;
-import java.util.Map;
-
-/**
- *    author : Android 轮子哥
- *    github : https://github.com/getActivity/GsonFactory
- *    time   : 2020/12/08
- *    desc   : Object 解析适配器，参考：{@link com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter}
- */
-public class ReflectiveTypeAdapter<T> extends TypeAdapter<T> {
-
-    private final ObjectConstructor<T> mConstructor;
-    private final Map<String, ReflectiveFieldBound> mBoundFields;
-
-    private TypeToken<?> mTypeToken;
-    private String mFieldName;
-
-    public ReflectiveTypeAdapter(ObjectConstructor<T> constructor, Map<String, ReflectiveFieldBound> fields) {
-        mConstructor = constructor;
-        mBoundFields = fields;
-    }
-
-    public void setReflectiveType(TypeToken<?> typeToken, String fieldName) {
-        mTypeToken = typeToken;
-        mFieldName = fieldName;
-    }
-
-    @Override
-    public T read(JsonReader in) throws IOException {
-        JsonToken jsonToken = in.peek();
-
-        if (jsonToken == JsonToken.NULL) {
-            in.nextNull();
-            return null;
-        }
-
-        if (jsonToken != JsonToken.BEGIN_OBJECT) {
-            in.skipValue();
-            JsonCallback callback = GsonFactory.getJsonCallback();
-            if (callback != null) {
-                callback.onTypeException(mTypeToken, mFieldName, jsonToken);
-            }
-            return null;
-        }
-
-        T instance = mConstructor.construct();
-        in.beginObject();
-        while (in.hasNext()) {
-            String name = in.nextName();
-            ReflectiveFieldBound field = mBoundFields.get(name);
-            if (field == null || !field.isDeserialized()) {
-                in.skipValue();
-                continue;
-            }
-
-            JsonToken peek = in.peek();
-
-            try {
-                field.read(in, instance);
-            } catch (IllegalStateException e) {
-                throw new JsonSyntaxException(e);
-            } catch (IllegalAccessException e) {
-                throw new AssertionError(e);
-            } catch (IllegalArgumentException e) {
-                JsonCallback callback = GsonFactory.getJsonCallback();
-                if (callback != null) {
-                    callback.onTypeException(TypeToken.get(instance.getClass()), field.getFieldName(), peek);
-                }
-            }
-        }
-        in.endObject();
-        return instance;
-    }
-
-    @Override
-    public void write(JsonWriter out, T value) throws IOException {
-        if (value == null) {
-            out.nullValue();
-            return;
-        }
-
-        out.beginObject();
-        for (ReflectiveFieldBound fieldBound : mBoundFields.values()) {
-            try {
-                if (fieldBound.writeField(value)) {
-                    out.name(fieldBound.getFieldName());
-                    fieldBound.write(out, value);
-                }
-            } catch (IllegalAccessException e) {
-                throw new AssertionError(e);
-            }
-        }
-        out.endObject();
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/ssl/HttpSslConfig.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/ssl/HttpSslConfig.java b/src/main/java/cn/xihan/http/ssl/HttpSslConfig.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/ssl/HttpSslConfig.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,29 +0,0 @@
-package cn.xihan.http.ssl;
-
-import javax.net.ssl.SSLSocketFactory;
-import javax.net.ssl.X509TrustManager;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/11/30
- *    desc   : Https 配置类
- */
-public final class HttpSslConfig {
-
-    private final SSLSocketFactory mSSLSocketFactory;
-    private final X509TrustManager mTrustManager;
-
-    HttpSslConfig(SSLSocketFactory factory, X509TrustManager manager) {
-        mSSLSocketFactory = factory;
-        mTrustManager = manager;
-    }
-
-    public SSLSocketFactory getSslSocketFactory() {
-        return mSSLSocketFactory;
-    }
-
-    public X509TrustManager getTrustManager() {
-        return mTrustManager;
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/exception/ServerException.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/exception/ServerException.java b/src/main/java/cn/xihan/http/exception/ServerException.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/exception/ServerException.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,18 +0,0 @@
-package cn.xihan.http.exception;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/12/01
- *    desc   : 服务器连接异常
- */
-public final class ServerException extends HttpException {
-
-    public ServerException(String message) {
-        super(message);
-    }
-
-    public ServerException(String message, Throwable cause) {
-        super(message, cause);
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/config/IRequestType.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/config/IRequestType.java b/src/main/java/cn/xihan/http/config/IRequestType.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/config/IRequestType.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,19 +0,0 @@
-package cn.xihan.http.config;
-
-
-import cn.xihan.http.model.BodyType;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/01/01
- *    desc   : 请求接口配置
- */
-public interface IRequestType {
-
-    /**
-     * 获取参数的提交类型
-     */
-
-    BodyType getBodyType();
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/EasyLog.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/EasyLog.java b/src/main/java/cn/xihan/http/EasyLog.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/EasyLog.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,93 +0,0 @@
-package cn.xihan.http;
-
-
-
-import cn.xihan.http.request.HttpRequest;
-
-import java.util.concurrent.Executors;
-import java.util.concurrent.LinkedBlockingQueue;
-import java.util.concurrent.ThreadPoolExecutor;
-import java.util.concurrent.TimeUnit;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/05/10
- *    desc   : 日志打印类
- */
-public final class EasyLog {
-
-    /** 创建线程池来打印日志，解决出现大日志阻塞线程的情况 */
-    @SuppressWarnings("AlibabaThreadShouldSetName")
-    private static final ThreadPoolExecutor EXECUTOR = new ThreadPoolExecutor(1, 1,
-            0L, TimeUnit.MILLISECONDS, new LinkedBlockingQueue<>(),
-            Executors.defaultThreadFactory(), new ThreadPoolExecutor.DiscardPolicy());
-
-    /**
-     * 打印分割线
-     */
-    public static void printLine(HttpRequest<?> httpRequest) {
-        if (!EasyConfig.getInstance().isLogEnabled()) {
-            return;
-        }
-        EXECUTOR.execute(() -> EasyConfig.getInstance().getLogStrategy().printLine(getLogTag(httpRequest)));
-    }
-
-    /**
-     * 打印日志
-     */
-    public static void printLog(HttpRequest<?> httpRequest, String log) {
-        if (!EasyConfig.getInstance().isLogEnabled()) {
-            return;
-        }
-        EXECUTOR.execute(() -> EasyConfig.getInstance().getLogStrategy().printLog(getLogTag(httpRequest), log));
-    }
-
-    /**
-     * 打印 Json
-     */
-    public static void printJson(HttpRequest<?> httpRequest, String json) {
-        if (!EasyConfig.getInstance().isLogEnabled()) {
-            return;
-        }
-        EXECUTOR.execute(() -> EasyConfig.getInstance().getLogStrategy().printJson(getLogTag(httpRequest), json));
-    }
-
-    /**
-     * 打印键值对
-     */
-    public static void printKeyValue(HttpRequest<?> httpRequest, String key, String value) {
-        if (!EasyConfig.getInstance().isLogEnabled()) {
-            return;
-        }
-        EXECUTOR.execute(() -> EasyConfig.getInstance().getLogStrategy().printKeyValue(getLogTag(httpRequest), key, value));
-    }
-
-    /**
-     * 打印异常
-     */
-    public static void printThrowable(HttpRequest<?> httpRequest, Throwable throwable) {
-        if (!EasyConfig.getInstance().isLogEnabled()) {
-            return;
-        }
-        EXECUTOR.execute(() -> EasyConfig.getInstance().getLogStrategy().printThrowable(getLogTag(httpRequest), throwable));
-    }
-
-    /**
-     * 打印堆栈
-     */
-    public static void printStackTrace(HttpRequest<?> httpRequest, StackTraceElement[] stackTrace) {
-        if (!EasyConfig.getInstance().isLogEnabled()) {
-            return;
-        }
-        EXECUTOR.execute(() -> EasyConfig.getInstance().getLogStrategy().printStackTrace(getLogTag(httpRequest), stackTrace));
-    }
-
-    private static String getLogTag(HttpRequest<?> httpRequest) {
-        String logTag = EasyConfig.getInstance().getLogTag();
-        if (httpRequest == null) {
-            return logTag;
-        }
-        return logTag + " " + httpRequest.getRequestApi().getClass().getSimpleName();
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/exception/TimeoutException.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/exception/TimeoutException.java b/src/main/java/cn/xihan/http/exception/TimeoutException.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/exception/TimeoutException.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,18 +0,0 @@
-package cn.xihan.http.exception;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/06/25
- *    desc   : 服务器超时异常
- */
-public final class TimeoutException extends HttpException {
-
-    public TimeoutException(String message) {
-        super(message);
-    }
-
-    public TimeoutException(String message, Throwable cause) {
-        super(message, cause);
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/body/ProgressBody.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/body/ProgressBody.java b/src/main/java/cn/xihan/http/body/ProgressBody.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/body/ProgressBody.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,92 +0,0 @@
-package cn.xihan.http.body;
-
-
-import java.io.IOException;
-
-import cn.xihan.http.EasyLog;
-import cn.xihan.http.EasyUtils;
-
-import cn.xihan.http.listener.OnUpdateListener;
-import cn.xihan.http.request.HttpRequest;
-import okhttp3.MediaType;
-import okhttp3.RequestBody;
-import okio.Buffer;
-import okio.BufferedSink;
-import okio.ForwardingSink;
-import okio.Okio;
-import okio.Sink;
-import org.jetbrains.annotations.NotNull;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/08/15
- *    desc   : RequestBody 包装类（用于获取上传进度）
- */
-public class ProgressBody extends RequestBody {
-
-    private final HttpRequest<?> mHttpRequest;
-    private final RequestBody mRequestBody;
-    private final OnUpdateListener<?> mListener;
-
-
-    /** 总字节数 */
-    private long mTotalByte;
-    /** 已上传字节数 */
-    private long mUpdateByte;
-    /** 上传进度值 */
-    private int mUpdateProgress;
-
-    public ProgressBody(HttpRequest<?> httpRequest, RequestBody body, OnUpdateListener<?> listener) {
-        mHttpRequest = httpRequest;
-        mRequestBody = body;
-        mListener = listener;
-    }
-
-    @Override
-    public MediaType contentType() {
-        return mRequestBody.contentType();
-    }
-
-    @Override
-    public long contentLength() throws IOException {
-        return mRequestBody.contentLength();
-    }
-
-    @Override
-    public void writeTo(@NotNull BufferedSink sink) throws IOException {
-        mTotalByte = contentLength();
-        sink = Okio.buffer(new WrapperSink(sink));
-        mRequestBody.writeTo(sink);
-        sink.flush();
-    }
-
-    private class WrapperSink extends ForwardingSink {
-
-        public WrapperSink(Sink delegate) {
-            super(delegate);
-        }
-
-        @Override
-        public void write(@NotNull Buffer source, long byteCount) throws IOException {
-            super.write(source, byteCount);
-            mUpdateByte += byteCount;
-            EasyUtils.post(() -> {
-                if (mListener != null) {
-                    mListener.onByte(mTotalByte, mUpdateByte);
-                }
-                int progress = EasyUtils.getProgressProgress(mTotalByte, mUpdateByte);
-                // 只有上传进度发生改变的时候才回调此方法，避免引起不必要的 View 重绘
-                if (progress != mUpdateProgress) {
-                    mUpdateProgress = progress;
-                    if (mListener != null) {
-                        mListener.onProgress(progress);
-                    }
-                    EasyLog.printLog(mHttpRequest, "Uploading in progress, uploaded: " +
-                            mUpdateByte + " / " + mTotalByte +
-                            ", progress: " + progress + "%");
-                }
-            });
-        }
-    }
-}
\ No newline at end of file
Index: GsonFactory/src/main/java/cn/xihan/gson/factory/data/JSONObjectTypeAdapter.java
===================================================================
diff --git a/GsonFactory/src/main/java/cn/xihan/gson/factory/data/JSONObjectTypeAdapter.java b/GsonFactory/src/main/java/cn/xihan/gson/factory/data/JSONObjectTypeAdapter.java
deleted file mode 100644
--- a/GsonFactory/src/main/java/cn/xihan/gson/factory/data/JSONObjectTypeAdapter.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,45 +0,0 @@
-package cn.xihan.gson.factory.data;
-
-import com.google.gson.JsonElement;
-import com.google.gson.TypeAdapter;
-import com.google.gson.internal.bind.TypeAdapters;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonWriter;
-
-import org.json.JSONException;
-import org.json.JSONObject;
-
-import java.io.IOException;
-
-/**
- *    author : Android 轮子哥
- *    github : https://github.com/getActivity/GsonFactory
- *    time   : 2021/09/30
- *    desc   : JSONObject 类型解析适配器
- */
-public class JSONObjectTypeAdapter extends TypeAdapter<JSONObject> {
-
-    public TypeAdapter<JsonElement> mProxy = TypeAdapters.JSON_ELEMENT;
-
-    @Override
-    public JSONObject read(JsonReader in) throws IOException {
-        JsonElement read = mProxy.read(in);
-        if (read.isJsonObject()) {
-            try {
-                return new JSONObject(read.toString());
-            } catch (JSONException e) {
-                e.printStackTrace();
-            }
-        }
-        return null;
-    }
-
-    @Override
-    public void write(JsonWriter out, JSONObject value) throws IOException {
-        if (value == null) {
-            out.nullValue();
-            return;
-        }
-        mProxy.write(out, mProxy.fromJson(value.toString()));
-    }
-}
\ No newline at end of file
Index: GsonFactory/src/main/java/cn/xihan/gson/factory/element/ReflectiveTypeAdapterFactory.java
===================================================================
diff --git a/GsonFactory/src/main/java/cn/xihan/gson/factory/element/ReflectiveTypeAdapterFactory.java b/GsonFactory/src/main/java/cn/xihan/gson/factory/element/ReflectiveTypeAdapterFactory.java
deleted file mode 100644
--- a/GsonFactory/src/main/java/cn/xihan/gson/factory/element/ReflectiveTypeAdapterFactory.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,135 +0,0 @@
-package cn.xihan.gson.factory.element;
-
-import com.google.gson.FieldNamingStrategy;
-import com.google.gson.Gson;
-import com.google.gson.TypeAdapter;
-import com.google.gson.TypeAdapterFactory;
-import com.google.gson.annotations.JsonAdapter;
-import com.google.gson.internal.$Gson$Types;
-import com.google.gson.internal.ConstructorConstructor;
-import com.google.gson.internal.Excluder;
-import com.google.gson.reflect.TypeToken;
-
-import java.lang.reflect.Field;
-import java.lang.reflect.GenericArrayType;
-import java.lang.reflect.Type;
-import java.util.Collection;
-import java.util.LinkedHashMap;
-import java.util.List;
-import java.util.Map;
-
-/**
- *    author : Android 轮子哥
- *    github : https://github.com/getActivity/GsonFactory
- *    time   : 2020/12/08
- *    desc   : Object 解析适配器，参考：{@link com.google.gson.internal.bind.ReflectiveTypeAdapterFactory}
- */
-public class ReflectiveTypeAdapterFactory implements TypeAdapterFactory {
-
-    private final ConstructorConstructor mConstructorConstructor;
-    private final FieldNamingStrategy mFieldNamingPolicy;
-    private final Excluder mExcluder;
-
-    public ReflectiveTypeAdapterFactory(ConstructorConstructor constructor,
-                                        FieldNamingStrategy strategy, Excluder excluder) {
-        mConstructorConstructor = constructor;
-        mFieldNamingPolicy = strategy;
-        mExcluder = excluder;
-    }
-
-    @Override
-    public <T> TypeAdapter<T> create(Gson gson, final TypeToken<T> type) {
-        Class<? super T> raw = type.getRawType();
-
-        // 判断是否包含这种类型
-        if (ReflectiveTypeUtils.containsClass(raw)) {
-            return null;
-        }
-        // 判断是否是数组
-        if (type.getType() instanceof GenericArrayType ||
-                type.getType() instanceof Class &&
-                 ((Class<?>) type.getType()).isArray()) {
-            return null;
-        }
-        // 如果是基本数据类型
-        if (!Object.class.isAssignableFrom(raw)) {
-            return null;
-        }
-        // 如果是 List 类型
-        if (Collection.class.isAssignableFrom(raw)) {
-            return null;
-        }
-        // 如果是 Map 数组
-        if (Map.class.isAssignableFrom(raw)) {
-            return null;
-        }
-        // 判断是否有自定义解析注解
-        JsonAdapter annotation = raw.getAnnotation(JsonAdapter.class);
-        if (annotation != null) {
-            return null;
-        }
-        // 如果是枚举类型
-        if (Enum.class.isAssignableFrom(raw) && raw != Enum.class) {
-            return null;
-        }
-        ReflectiveTypeAdapter<T> reflectiveTypeAdapter =
-                new ReflectiveTypeAdapter<>(mConstructorConstructor.get(type), getBoundFields(gson, type, raw));
-        reflectiveTypeAdapter.setReflectiveType(type, null);
-        return reflectiveTypeAdapter;
-    }
-
-    private Map<String, ReflectiveFieldBound> getBoundFields(Gson gson, TypeToken<?> type, Class<?> raw) {
-        Map<String, ReflectiveFieldBound> result = new LinkedHashMap<>();
-        if (raw.isInterface()) {
-            return result;
-        }
-
-        Type declaredType = type.getType();
-        while (raw != Object.class) {
-            Field[] fields = raw.getDeclaredFields();
-            for (Field field : fields) {
-                boolean serialize = excludeField(field, true);
-                boolean deserialize = excludeField(field, false);
-                if (!serialize && !deserialize) {
-                    continue;
-                }
-                field.setAccessible(true);
-                Type fieldType = $Gson$Types.resolve(type.getType(), raw, field.getGenericType());
-                List<String> fieldNames = getFieldNames(field);
-                ReflectiveFieldBound previous = null;
-                for (int i = 0; i < fieldNames.size(); ++i) {
-                    String name = fieldNames.get(i);
-                    if (i != 0) {
-                        // only serialize the default name
-                        serialize = false;
-                    }
-                    ReflectiveFieldBound fieldBound = ReflectiveTypeUtils.createBoundField(gson, mConstructorConstructor, field, name,
-                            TypeToken.get(fieldType), serialize, deserialize);
-                    ReflectiveFieldBound replaced = result.put(name, fieldBound);
-                    if (previous == null) {
-                        previous = replaced;
-                    }
-                }
-                if (previous != null) {
-                    throw new IllegalArgumentException(declaredType
-                            + " declares multiple JSON fields named " + previous.getFieldName());
-                }
-            }
-            type = TypeToken.get($Gson$Types.resolve(type.getType(), raw, raw.getGenericSuperclass()));
-            raw = type.getRawType();
-        }
-        return result;
-    }
-
-    private boolean excludeField(Field field, boolean serialize) {
-        return excludeField(field, serialize, mExcluder);
-    }
-
-    private static boolean excludeField(Field field, boolean serialize, Excluder excluder) {
-        return !excluder.excludeClass(field.getType(), serialize) && !excluder.excludeField(field, serialize);
-    }
-
-    private List<String> getFieldNames(Field field) {
-        return ReflectiveTypeUtils.getFieldName(mFieldNamingPolicy, field);
-    }
-}
\ No newline at end of file
Index: GsonFactory/src/main/java/cn/xihan/gson/factory/JsonCallback.java
===================================================================
diff --git a/GsonFactory/src/main/java/cn/xihan/gson/factory/JsonCallback.java b/GsonFactory/src/main/java/cn/xihan/gson/factory/JsonCallback.java
deleted file mode 100644
--- a/GsonFactory/src/main/java/cn/xihan/gson/factory/JsonCallback.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,22 +0,0 @@
-package cn.xihan.gson.factory;
-
-import com.google.gson.reflect.TypeToken;
-import com.google.gson.stream.JsonToken;
-
-/**
- *    author : Android 轮子哥
- *    github : https://github.com/getActivity/GsonFactory
- *    time   : 2021/02/02
- *    desc   : Json 解析异常监听器
- */
-public interface JsonCallback {
-
-    /**
-     * 类型解析异常
-     *
-     * @param typeToken             类型 Token
-     * @param fieldName             字段名称（可能为空）
-     * @param jsonToken             后台给定的类型
-     */
-    void onTypeException(TypeToken<?> typeToken, String fieldName, JsonToken jsonToken);
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/exception/NetworkException.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/exception/NetworkException.java b/src/main/java/cn/xihan/http/exception/NetworkException.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/exception/NetworkException.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,18 +0,0 @@
-package cn.xihan.http.exception;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/06/25
- *    desc   : 网络连接异常
- */
-public final class NetworkException extends HttpException {
-
-    public NetworkException(String message) {
-        super(message);
-    }
-
-    public NetworkException(String message, Throwable cause) {
-        super(message, cause);
-    }
-}
\ No newline at end of file
Index: GsonFactory/src/main/java/cn/xihan/gson/factory/element/ReflectiveTypeUtils.java
===================================================================
diff --git a/GsonFactory/src/main/java/cn/xihan/gson/factory/element/ReflectiveTypeUtils.java b/GsonFactory/src/main/java/cn/xihan/gson/factory/element/ReflectiveTypeUtils.java
deleted file mode 100644
--- a/GsonFactory/src/main/java/cn/xihan/gson/factory/element/ReflectiveTypeUtils.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,177 +0,0 @@
-package cn.xihan.gson.factory.element;
-
-import com.google.gson.FieldNamingStrategy;
-import com.google.gson.Gson;
-import com.google.gson.TypeAdapter;
-import com.google.gson.TypeAdapterFactory;
-import com.google.gson.annotations.JsonAdapter;
-import com.google.gson.annotations.SerializedName;
-import com.google.gson.internal.ConstructorConstructor;
-import com.google.gson.internal.Primitives;
-import com.google.gson.reflect.TypeToken;
-import com.google.gson.stream.JsonReader;
-import com.google.gson.stream.JsonWriter;
-
-import java.io.IOException;
-import java.lang.reflect.Field;
-import java.math.BigDecimal;
-import java.math.BigInteger;
-import java.net.InetAddress;
-import java.net.URI;
-import java.net.URL;
-import java.sql.Time;
-import java.sql.Timestamp;
-import java.util.*;
-import java.util.concurrent.atomic.AtomicBoolean;
-import java.util.concurrent.atomic.AtomicInteger;
-import java.util.concurrent.atomic.AtomicIntegerArray;
-import java.util.concurrent.atomic.AtomicLong;
-import java.util.concurrent.atomic.AtomicLongArray;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/GsonFactory">https://github.com/getActivity/GsonFactory</a>
- *    time   : 2020/12/08
- *    desc   : 反射工具类
- */
-public class ReflectiveTypeUtils {
-
-    private final static ArrayList<Class<?>> TYPE_TOKENS = new ArrayList<>();
-
-    static {
-        // 添加 Gson 已适配的类型
-        TYPE_TOKENS.add(String.class);
-        TYPE_TOKENS.add(Integer.class);
-        TYPE_TOKENS.add(Boolean.class);
-        TYPE_TOKENS.add(Byte.class);
-        TYPE_TOKENS.add(Short.class);
-        TYPE_TOKENS.add(Long.class);
-        TYPE_TOKENS.add(Double.class);
-        TYPE_TOKENS.add(Float.class);
-        TYPE_TOKENS.add(Number.class);
-        TYPE_TOKENS.add(AtomicInteger.class);
-        TYPE_TOKENS.add(AtomicBoolean.class);
-        TYPE_TOKENS.add(AtomicLong.class);
-        TYPE_TOKENS.add(AtomicLongArray.class);
-        TYPE_TOKENS.add(AtomicIntegerArray.class);
-        TYPE_TOKENS.add(Character.class);
-        TYPE_TOKENS.add(StringBuilder.class);
-        TYPE_TOKENS.add(StringBuffer.class);
-        TYPE_TOKENS.add(BigDecimal.class);
-        TYPE_TOKENS.add(BigInteger.class);
-        TYPE_TOKENS.add(URL.class);
-        TYPE_TOKENS.add(URI.class);
-        TYPE_TOKENS.add(UUID.class);
-        TYPE_TOKENS.add(Currency.class);
-        TYPE_TOKENS.add(Locale.class);
-        TYPE_TOKENS.add(InetAddress.class);
-        TYPE_TOKENS.add(BitSet.class);
-        TYPE_TOKENS.add(Date.class);
-        TYPE_TOKENS.add(GregorianCalendar.class);
-        TYPE_TOKENS.add(Calendar.class);
-        TYPE_TOKENS.add(Time.class);
-        TYPE_TOKENS.add(java.sql.Date.class);
-        TYPE_TOKENS.add(Timestamp.class);
-        TYPE_TOKENS.add(Class.class);
-    }
-
-    public static boolean containsClass(Class<?> clazz) {
-        return TYPE_TOKENS.contains(clazz);
-    }
-
-    public static ReflectiveFieldBound createBoundField(final Gson gson, final ConstructorConstructor constructor, final Field field, final String fieldName,
-                                                        final TypeToken<?> fieldType, boolean serialize, boolean deserialize) {
-
-        // 判断是否是基本数据类型
-        final boolean primitive = Primitives.isPrimitive(fieldType.getRawType());
-
-        return new ReflectiveFieldBound(fieldName, serialize, deserialize) {
-
-            final TypeAdapter<?> typeAdapter = getFieldAdapter(gson, constructor, field, fieldType, fieldName);
-
-            @SuppressWarnings({"unchecked", "rawtypes"})
-            @Override
-            public void write(JsonWriter writer, Object value) throws IOException, IllegalAccessException {
-                Object fieldValue = field.get(value);
-                TypeAdapter typeWrapper = new TypeAdapterRuntimeTypeWrapper(gson, typeAdapter, fieldType.getType());
-                typeWrapper.write(writer, fieldValue);
-            }
-
-            @Override
-            public void read(JsonReader reader, Object value) throws IOException, IllegalAccessException {
-                Object fieldValue = typeAdapter.read(reader);
-                if (fieldValue != null || !primitive) {
-                    field.set(value, fieldValue);
-                }
-            }
-
-            @Override
-            public boolean writeField(Object value) throws IllegalAccessException {
-                if (!isSerialized()) {
-                    return false;
-                }
-
-                Object fieldValue = field.get(value);
-                return fieldValue != value;
-            }
-        };
-    }
-
-    public static TypeAdapter<?> getFieldAdapter(Gson gson, ConstructorConstructor constructor, Field field, TypeToken<?> fieldType, String fieldName) {
-        TypeAdapter<?> adapter = null;
-        JsonAdapter annotation = field.getAnnotation(JsonAdapter.class);
-        if (annotation != null) {
-            adapter = getTypeAdapter(constructor, gson, fieldType, annotation);
-        }
-        if (adapter == null) {
-            adapter = gson.getAdapter(fieldType);
-        }
-        if (adapter instanceof CollectionTypeAdapter) {
-            ((CollectionTypeAdapter<?>) adapter).setReflectiveType(TypeToken.get(field.getDeclaringClass()), fieldName);
-        }
-        if (adapter instanceof ReflectiveTypeAdapter) {
-            ((ReflectiveTypeAdapter<?>) adapter).setReflectiveType(TypeToken.get(field.getDeclaringClass()), fieldName);
-        }
-        return adapter;
-    }
-
-    public static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructor,
-                                                Gson gson,
-                                                TypeToken<?> fieldType,
-                                                JsonAdapter annotation) {
-        Class<?> value = annotation.value();
-        TypeAdapter<?> typeAdapter;
-
-        if (TypeAdapter.class.isAssignableFrom(value)) {
-            Class<TypeAdapter<?>> typeAdapterClass = (Class<TypeAdapter<?>>) value;
-            typeAdapter = constructor.get(TypeToken.get(typeAdapterClass)).construct();
-        } else if (TypeAdapterFactory.class.isAssignableFrom(value)) {
-            Class<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;
-            typeAdapter = constructor.get(TypeToken.get(typeAdapterFactory))
-                    .construct()
-                    .create(gson, fieldType);
-        } else {
-            throw new IllegalArgumentException(
-                    "@JsonAdapter value must be TypeAdapter or TypeAdapterFactory reference.");
-        }
-
-        if (typeAdapter != null) {
-            typeAdapter = typeAdapter.nullSafe();
-        }
-
-        return typeAdapter;
-    }
-
-    public static List<String> getFieldName(FieldNamingStrategy fieldNamingPolicy, Field field) {
-        SerializedName serializedName = field.getAnnotation(SerializedName.class);
-        List<String> fieldNames = new LinkedList<>();
-        if (serializedName == null) {
-            fieldNames.add(fieldNamingPolicy.translateName(field));
-        } else {
-            fieldNames.add(serializedName.value());
-            String[] alternates = serializedName.alternate();
-            fieldNames.addAll(Arrays.asList(alternates));
-        }
-        return fieldNames;
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/config/LogStrategy.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/config/LogStrategy.java b/src/main/java/cn/xihan/http/config/LogStrategy.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/config/LogStrategy.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,76 +0,0 @@
-package cn.xihan.http.config;
-
-
-import cn.xihan.http.EasyUtils;
-
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/04/24
- *    desc   : 网络请求日志打印默认实现
- */
-public final class LogStrategy implements ILogStrategy {
-
-    @Override
-    public void printLog(String tag, String log) {
-        // 答应tag 和 log
-
-        System.out.println(tag + "----:" + log);
-    }
-
-    @Override
-    public void printJson(String tag, String json) {
-        String text = EasyUtils.formatJson(json);
-        if (EasyUtils.isEmpty(text)) {
-            return;
-        }
-
-        // 打印 Json 数据最好换一行再打印会好看一点
-        text = " \n" + text;
-
-        int segmentSize = 3 * 1024;
-        long length = text.length();
-        if (length <= segmentSize) {
-            // 长度小于等于限制直接打印
-            printLog(tag, text);
-            return;
-        }
-
-        // 循环分段打印日志
-        while (text.length() > segmentSize) {
-            String logContent = text.substring(0, segmentSize);
-            text = text.replace(logContent, "");
-            printLog(tag, logContent);
-        }
-
-        // 打印剩余日志
-        printLog(tag, text);
-    }
-
-    @Override
-    public void printKeyValue(String tag, String key, String value) {
-        printLog(tag, key + " = " + value);
-    }
-
-    @Override
-    public void printThrowable(String tag, Throwable throwable) {
-        System.out.println(tag + "----:" +  throwable.getMessage());
-    }
-
-    @Override
-    public void printStackTrace(String tag, StackTraceElement[] stackTrace) {
-        for (StackTraceElement element : stackTrace) {
-            // 获取代码行数
-            int lineNumber = element.getLineNumber();
-            // 获取类的全路径
-            String className = element.getClassName();
-            if (lineNumber <= 0 || className.startsWith("com.hjq.http")) {
-                continue;
-            }
-
-            printLog(tag, "RequestCode = (" + element.getFileName() + ":" + lineNumber + ") ");
-            break;
-        }
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/annotation/HttpHeader.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/annotation/HttpHeader.java b/src/main/java/cn/xihan/http/annotation/HttpHeader.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/annotation/HttpHeader.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,18 +0,0 @@
-package cn.xihan.http.annotation;
-
-import java.lang.annotation.Documented;
-import java.lang.annotation.ElementType;
-import java.lang.annotation.Retention;
-import java.lang.annotation.RetentionPolicy;
-import java.lang.annotation.Target;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/05/19
- *    desc   : 请求头注解（标记这个字段是一个请求头的参数）
- */
-@Documented
-@Retention(RetentionPolicy.RUNTIME)
-@Target(ElementType.FIELD)
-public @interface HttpHeader {}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/annotation/HttpRename.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/annotation/HttpRename.java b/src/main/java/cn/xihan/http/annotation/HttpRename.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/annotation/HttpRename.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,24 +0,0 @@
-package cn.xihan.http.annotation;
-
-import java.lang.annotation.Documented;
-import java.lang.annotation.ElementType;
-import java.lang.annotation.Retention;
-import java.lang.annotation.RetentionPolicy;
-import java.lang.annotation.Target;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/05/19
- *    desc   : 重命名注解
- */
-@Documented
-@Retention(RetentionPolicy.RUNTIME)
-@Target(ElementType.FIELD)
-public @interface HttpRename {
-
-    /**
-     * 默认以字段的名称作为参数名，使用此注解可修改
-     */
-    String value();
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/ssl/UnSafeTrustManager.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/ssl/UnSafeTrustManager.java b/src/main/java/cn/xihan/http/ssl/UnSafeTrustManager.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/ssl/UnSafeTrustManager.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,29 +0,0 @@
-package cn.xihan.http.ssl;
-
-
-
-import java.security.cert.X509Certificate;
-
-import javax.net.ssl.X509TrustManager;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/11/30
- *    desc   : 为了解决客户端不信任服务器数字证书的问题，网络上大部分的解决方案都是让客户端不对证书做任何检查，这是一种有很大安全漏洞的办法
- */
-public final class UnSafeTrustManager implements X509TrustManager {
-
-
-    @Override
-    public void checkClientTrusted(X509Certificate[] chain, String authType) {}
-
-
-    @Override
-    public void checkServerTrusted(X509Certificate[] chain, String authType) {}
-
-    @Override
-    public X509Certificate[] getAcceptedIssuers() {
-        return new X509Certificate[]{};
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/request/PostRequest.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/request/PostRequest.java b/src/main/java/cn/xihan/http/request/PostRequest.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/request/PostRequest.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,23 +0,0 @@
-package cn.xihan.http.request;
-
-
-import cn.xihan.http.model.HttpMethod;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/07/20
- *    desc   : 主体请求
- */
-public final class PostRequest extends BodyRequest<PostRequest> {
-
-    public PostRequest() {
-
-    }
-
-
-    @Override
-    public String getRequestMethod() {
-        return HttpMethod.POST.toString();
-    }
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/config/RequestServer.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/config/RequestServer.java b/src/main/java/cn/xihan/http/config/RequestServer.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/config/RequestServer.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,33 +0,0 @@
-package cn.xihan.http.config;
-
-
-import cn.xihan.http.annotation.HttpIgnore;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/05/19
- *    desc   : 服务器简单配置
- */
-public final class RequestServer implements IRequestServer {
-
-    /** 主机地址 */
-    @HttpIgnore
-    private final String mHost;
-
-    public RequestServer(String host) {
-        mHost = host;
-    }
-
-
-    @Override
-    public String getHost() {
-        return mHost;
-    }
-
-
-    @Override
-    public String toString() {
-        return mHost;
-    }
-}
\ No newline at end of file
Index: HelpDoc.md
===================================================================
diff --git a/HelpDoc.md b/HelpDoc.md
deleted file mode 100644
--- a/HelpDoc.md	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,1154 +0,0 @@
-# 目录
-
-* [集成文档](#集成文档)
-
-    * [服务器配置](#服务器配置)
-
-    * [框架初始化](#框架初始化)
-
-* [使用文档](#使用文档)
-
-    * [配置接口](#配置接口)
-
-    * [发起请求](#发起请求)
-
-    * [上传文件](#上传文件)
-
-    * [下载文件](#下载文件)
-
-    * [同步请求](#同步请求)
-
-    * [请求缓存](#请求缓存)
-
-* [疑难解答](#疑难解答)
-
-    * [如何设置 Cookie](#如何设置-cookie)
-
-    * [如何添加或者删除全局参数](#如何添加或者删除全局参数)
-
-    * [如何定义全局的动态参数](#如何定义全局的动态参数)
-
-    * [如何在请求中忽略某个全局参数](#如何在请求中忽略某个全局参数)
-
-    * [如何获取服务器配置](#如何获取服务器配置)
-
-    * [如何修改接口的服务器配置](#如何修改接口的服务器配置)
-
-    * [如何配置多域名](#如何配置多域名)
-
-    * [如何修改参数的提交方式](#如何修改参数的提交方式)
-
-    * [如何对接口进行加密或者解密](#如何对接口进行加密或者解密)
-
-    * [如何忽略某个参数](#如何忽略某个参数)
-
-    * [如何传入请求头](#如何传入请求头)
-
-    * [如何重命名参数或者请求头的名称](#如何重命名参数或者请求头的名称)
-
-    * [如何上传文件](#如何上传文件)
-
-    * [如何上传文件列表](#如何上传文件列表)
-
-    * [如何设置超时重试](#如何设置超时重试)
-
-    * [如何设置请求超时时间](#如何设置请求超时时间)
-
-    * [如何设置不打印日志](#如何设置不打印日志)
-
-    * [如何取消已发起的请求](#如何取消已发起的请求)
-
-    * [如何延迟发起一个请求](#如何延迟发起一个请求)
-
-    * [如何对接口路径进行动态化拼接](#如何对接口路径进行动态化拼接)
-
-    * [Https 如何配置信任所有证书](#https-如何配置信任所有证书)
-
-    * [我不想一个接口写一个类怎么办](#我不想一个接口写一个类怎么办)
-
-    * [我想用 Json 数组作为参数进行上传该怎么办](#我想用-json-数组作为参数进行上传该怎么办)
-
-    * [接口参数的 Key 值是动态变化的该怎么办](#接口参数的-key-值是动态变化的该怎么办)
-
-    * [如何设置自定义的 UA 标识](#如何设置自定义的-ua-标识)
-
-    * [我想自定义一个 RequestBody 进行请求该怎么办](#我想自定义一个-requestbody-进行请求该怎么办)
-
-
-# 集成文档
-
-#### 服务器配置
-
-```java
-public class RequestServer implements IRequestServer {
-
-    @NonNull
-    @Override
-    public String getHost() {
-        return "https://www.baidu.com/";
-    }
-
-    @NonNull
-    @Override
-    public BodyType getBodyType() {
-        // 参数以 Json 格式提交（默认是表单）
-        return BodyType.JSON;
-    }
-}
-```
-
-#### 框架初始化
-
-* 需要配置请求结果处理，具体封装可以参考 [RequestHandler](app/src/main/java/com/hjq/easy/demo/http/model/RequestHandler.java)
-
-```java
-OkHttpClient okHttpClient = new OkHttpClient.Builder()
-        .build();
-
-EasyConfig.with(okHttpClient)
-        // 是否打印日志
-        .setLogEnabled(false)
-        // 设置服务器配置
-        .setServer(server)
-        // 设置请求处理策略
-        .setHandler(new RequestHandler())
-        // 设置拦截器
-        .setInterceptor(new IRequestInterceptor() {
-                    @Override
-                    public void interceptArguments(HttpRequest<?> httpRequest, HttpParams params, HttpHeaders headers) {
-                        headers.put("timestamp", String.valueOf(System.currentTimeMillis()));
-                    }
-                })
-        // 设置请求重试次数
-        .setRetryCount(3)
-        // 添加全局请求参数
-        //.addParam("token", "6666666")
-        // 添加全局请求头
-        //.addHeader("time", "20191030")
-        // 启用配置
-        .into();
-```
-
-* 上述是创建配置，更新配置可以使用
-
-```java
-EasyConfig.getInstance()
-        .addParam("token", data.getData().getToken());
-```
-
-
-# 使用文档
-
-#### 配置接口
-
-```java
-public final class LoginApi implements IRequestApi {
-
-    @NonNull
-    @Override
-    public String getApi() {
-        return "user/login";
-    }
-
-    /** 用户名 */
-    private String userName;
-
-    /** 登录密码 */
-    private String password;
-
-    public LoginApi setUserName(String userName) {
-        this.userName = userName;
-        return this;
-    }
-
-    public LoginApi setPassword(String password) {
-        this.password = password;
-        return this;
-    }
-}
-```
-
-* 可为这个类的字段加上一些注解
-
-    * @HttpHeader：标记这个字段是一个请求头参数
-
-    * @HttpIgnore：标记这个字段不会被发送给后台
-
-    * @HttpRename：重新定义这个字段发送给后台的参数或者请求头名称
-
-* 可在这个类实现一些接口
-
-    * implements IRequestHost：实现这个接口之后可以重新指定这个请求的主机地址
-
-    * implements IRequestType：实现这个接口之后可以重新指定这个请求的提交方式
-
-    * implements IRequestCache：实现这个接口之后可以重新指定这个请求的缓存模式
-
-    * implements IRequestClient：实现这个接口之后可以重新指定这个请求所用的 OkHttpClient 对象
-
-* 字段作为请求参数的衡量标准
-
-    * 假设某个字段的属性值为空，那么这个字段将不会作为请求参数发送给后台
-
-    * 假设果某个字段类型是 String，属性值是空字符串，那么这个字段就会作为请求参数，如果是空对象则不会
-
-    * 假设某个字段类型是 int，因为基本数据类型没有空值，所以这个字段一定会作为请求参数，但是可以换成 Integer 对象来避免，因为 Integer 的默认值是 null
-
-* 我举个栗子：[https://www.baidu.com/api/user/getInfo](https://www.baidu.com/)，那么标准的写法就是
-
-```java
-public final class XxxApi implements IRequestServer, IRequestApi {
-
-    @NonNull
-    @Override
-    public String getHost() {
-        return "https://www.baidu.com/";
-    }
-
-    @NonNull
-    @Override
-    public String getApi() {
-        return "user/getInfo";
-    }
-}
-```
-
-#### 发起请求
-
-* 需要配置请求状态及生命周期处理，具体封装可以参考 [BaseActivity](app/src/main/java/com/hjq/http/demo/BaseActivity.java)
-
-```java
-EasyHttp.post()
-        .api(new LoginApi()
-                .setUserName("Android 轮子哥")
-                .setPassword("123456"))
-        .request(new HttpCallback<HttpData<LoginBean>>(activity) {
-
-            @Override
-            public void onSucceed(HttpData<LoginBean> data) {
-                ToastUtils.show("登录成功");
-            }
-        });
-```
-
-* 这里展示 post 用法，另外 EasyHttp 还支持 get、head、delete、put、patch 请求方式，这里不再过多演示
-
-#### 上传文件
-
-```java
-public final class UpdateImageApi implements IRequestApi, IRequestType {
-
-    @NonNull
-    @Override
-    public String getApi() {
-        return "upload/";
-    }
-
-    @NonNull
-    @Override
-    public BodyType getBodyType() {
-        // 上传文件需要使用表单的形式提交
-        return BodyType.FORM;
-    }
-
-    /** 本地图片 */
-    private File image;
-
-    public UpdateImageApi(File image) {
-        this.image = image;
-    }
-
-    public UpdateImageApi setImage(File image) {
-        this.image = image;
-        return this;
-    }
-}
-```
-
-```java
-EasyHttp.post()
-        .api(new UpdateImageApi(file))
-        .request(new OnUpdateListener<Void>() {
-
-            @Override
-            public void onStart(Call call) {
-                mProgressBar.setVisibility(View.VISIBLE);
-            }
-
-            @Override
-            public void onProgress(int progress) {
-                mProgressBar.setProgress(progress);
-            }
-
-            @Override
-            public void onSucceed(Void result) {
-                ToastUtils.show("上传成功");
-            }
-
-            @Override
-            public void onFail(Exception e) {
-                ToastUtils.show("上传失败");
-            }
-
-            @Override
-            public void onEnd(Call call) {
-                mProgressBar.setVisibility(View.GONE);
-            }
-        });
-```
-
-* **需要注意的是：如果上传的文件过多或者过大，可能会导致请求超时，可以重新设置本次请求超时时间，超时时间建议根据文件大小而定，具体设置超时方式文档有介绍，可以在本页面直接搜索。**
-
-* 当然除了可以使用 `File` 类型的对象进行上传，还可以使用 `FileContentResolver`、`InputStream`、`RequestBody`、`MultipartBody.Part` 类型的对象进行上传，如果你需要批量上传，请使用 `List<File>`、`List<FileContentResolver>`、`List<InputStream>`、`List<RequestBody>`、`List<MultipartBody.Part>`、 类型的对象来做批量上传。
-
-#### 下载文件
-
-* 下载缓存策略：在指定下载文件 md5 或者后台有返回 md5 的情况下，下载框架默认开启下载缓存模式，如果这个文件已经存在手机中，并且经过 md5 校验文件完整，框架就不会重复下载，而是直接回调下载监听。减轻服务器压力，减少用户等待时间。
-
-```java
-EasyHttp.download()
-        .method(HttpMethod.GET)
-        .file(new File(Environment.getExternalStorageDirectory(), "微信.apk"))
-        //.url("https://qd.myapp.com/myapp/qqteam/AndroidQQ/mobileqq_android.apk")
-        .url("http://dldir1.qq.com/weixin/android/weixin708android1540.apk")
-        .md5("2E8BDD7686474A7BC4A51ADC3667CABF")
-        .listener(new OnDownloadListener() {
-
-            @Override
-            public void onStart(File file) {
-                mProgressBar.setVisibility(View.VISIBLE);
-            }
-
-            @Override
-            public void onProgress(File file, int progress) {
-                mProgressBar.setProgress(progress);
-            }
-
-            @Override
-            public void onComplete(File file) {
-                ToastUtils.show("下载完成：" + file.getPath());
-                installApk(MainActivity.this, file);
-            }
-
-            @Override
-            public void onError(File file, Exception e) {
-                ToastUtils.show("下载出错：" + e.getMessage());
-            }
-
-            @Override
-            public void onEnd(File file) {
-                mProgressBar.setVisibility(View.GONE);
-            }
-
-        }).start();
-```
-
-#### 请求缓存
-
-* 需要先实现读取和写入缓存的接口，已内置可以跳过，这里以 FastKV 为例
-
-```java
-public final class HttpCacheManager {
-
-   private volatile static FastKV sFastKv;
-
-
-   /**
-    * 获取单例的 FastKV 实例
-    */
-   public static FastKV getFastKv() {
-      if(sFastKv == null) {
-         synchronized (RequestHandler.class) {
-            if (sFastKv == null) {
-                // 存放位置 文件名
-               sFastKv = new FastKV.Builder(System.getProperty("user.dir") + "\\cache","http_cache_id").build();
-            }
-         }
-      }
-      return sFastKv;
-   }
-
-   /**
-    * 生成缓存的 key
-    */
-   public static String generateCacheKey(HttpRequest<?> httpRequest) {
-      IRequestApi requestApi = httpRequest.getRequestApi();
-      return "用户 id" + "\n" + requestApi.getApi() + "\n" + GsonFactory.getSingletonGson().toJson(requestApi);
-   }
-}
-```
-
-
-```java
-public final class RequestHandler implements IRequestHandler {
-
-   
-    ..................
-
-      @Override
-    public Object readCache(HttpRequest<?> httpRequest, Type type, long cacheTime) {
-        String cacheKey = HttpCacheManager.generateCacheKey(httpRequest);
-        String cacheValue = HttpCacheManager.getFastKv().getString(cacheKey, null);
-        if (cacheValue == null || "".equals(cacheValue) || "{}".equals(cacheValue)) {
-            return null;
-        }
-        EasyLog.printLog(httpRequest, "----- readCache cacheKey -----");
-        EasyLog.printJson(httpRequest, cacheKey);
-        EasyLog.printLog(httpRequest, "----- readCache cacheValue -----");
-        EasyLog.printJson(httpRequest, cacheValue);
-        return GsonFactory.getSingletonGson().fromJson(cacheValue, type);
-    }
-
-   @Override
-    public boolean writeCache(HttpRequest<?> httpRequest, Response response, Object result) {
-        String cacheKey = HttpCacheManager.generateCacheKey(httpRequest);
-        String cacheValue = GsonFactory.getSingletonGson().toJson(result);
-        if (cacheValue == null || "".equals(cacheValue) || "{}".equals(cacheValue)) {
-            return false;
-        }
-        EasyLog.printLog(httpRequest, "----- writeCache cacheKey -----");
-        EasyLog.printJson(httpRequest, cacheKey);
-        EasyLog.printLog(httpRequest, "----- writeCache cacheValue -----");
-        EasyLog.printJson(httpRequest, cacheValue);
-        HttpCacheManager.getFastKv().putString(cacheKey, cacheValue);
-        return HttpCacheManager.getFastKv().getString(cacheKey, null) != null;
-    }
-
-       @Override
-    public void clearCache() {
-        HttpCacheManager.getFastKv().clear();
-    }
-}
-```
-
-* 首先请求缓存模式有四种方式，都在 `CacheMode` 这个枚举类中
-
-```java
-public enum CacheMode {
-
-    /**
-     * 默认（按照 Http 协议来缓存）
-     */
-    DEFAULT,
-
-    /**
-     * 不使用缓存（禁用 Http 协议缓存）
-     */
-    NO_CACHE,
-
-    /**
-     * 只使用缓存
-     *
-     * 已有缓存的情况下：读取缓存 -> 回调成功
-     * 没有缓存的情况下：请求网络 -> 写入缓存 -> 回调成功
-     */
-    USE_CACHE_ONLY,
-
-    /**
-     * 优先使用缓存
-     *
-     * 已有缓存的情况下：先读缓存 —> 回调成功 —> 请求网络 —> 刷新缓存
-     * 没有缓存的情况下：请求网络 -> 写入缓存 -> 回调成功
-     */
-    USE_CACHE_FIRST,
-
-    /**
-     * 只在网络请求失败才去读缓存
-     */
-    USE_CACHE_AFTER_FAILURE
-}
-```
-
-* 为某个接口设置缓存模式
-
-```java
-public final class XxxApi implements IRequestApi, IRequestCache {
-
-    @NonNull
-    @Override
-    public String getApi() {
-        return "xxx/";
-    }
-
-    @NonNull
-    @Override
-    public CacheMode getCacheMode() {
-        // 设置优先使用缓存
-        return CacheMode.USE_CACHE_FIRST;
-    }
-}
-```
-
-* 全局设置缓存模式
-
-```java
-public class XxxServer implements IRequestServer {
-
-    @NonNull
-    @Override
-    public String getHost() {
-        return "https://www.xxxxxxx.com/";
-    }
-
-    @NonNull
-    @Override
-    public CacheMode getCacheMode() {
-        // 只在请求失败才去读缓存
-        return CacheMode.USE_CACHE_AFTER_FAILURE;
-    }
-}
-```
-
-# 疑难解答
-
-#### 如何设置 Cookie
-
-* EasyHttp 是基于 OkHttp 封装的，而 OkHttp 本身就是支持设置 Cookie，所以用法和 OkHttp 是一样的
-
-```java
-OkHttpClient okHttpClient = new OkHttpClient.Builder()
-        .cookieJar(new XxxCookieJar())
-        .build();
-
-EasyConfig.with(okHttpClient)
-        .setXxx()
-        .into();
-```
-
-#### 如何添加或者删除全局参数
-
-* 添加全局请求参数
-
-```java
-EasyConfig.getInstance().addParam("key", "value");
-```
-
-* 移除全局请求参数
-
-```java
-EasyConfig.getInstance().removeParam("key");
-```
-
-* 添加全局请求头
-
-```java
-EasyConfig.getInstance().addHeader("key", "value");
-```
-
-* 移除全局请求头
-
-```java
-EasyConfig.getInstance().removeHeader("key");
-```
-
-#### 如何定义全局的动态参数
-
-```java
-EasyConfig.getInstance().setInterceptor(new IRequestInterceptor() {
-
-    @Override
-    public void interceptArguments(@NonNull HttpRequest<?> httpRequest, @NonNull HttpParams params, @NonNull HttpHeaders headers) {
-        headers.put("key", "value");
-        params.put("key", "value");
-    }
-});
-```
-
-#### 如何在请求中忽略某个全局参数
-
-```java
-public final class XxxApi implements IRequestApi {
-
-    @NonNull
-    @Override
-    public String getApi() {
-        return "xxx/xxxx";
-    }
-    
-    @HttpIgnore
-    private String token;
-}
-```
-
-#### 如何获取服务器配置
-
-```java
-IRequestServer server = EasyConfig.getInstance().getServer();
-// 获取当前全局的服务器主机地址
-String host = server.getHost();
-```
-
-#### 如何修改接口的服务器配置
-
-* 先定义一个服务器配置
-
-```java
-public class XxxServer implements IRequestServer {
-
-    @NonNull
-    @Override
-    public String getHost() {
-        return "https://www.xxxxxxx.com/";
-    }
-}
-```
-
-* 再将它应用到全局配置中
-
-```java
-EasyConfig.getInstance().setServer(new XxxServer());
-```
-
-* 如果只是针对某个接口可以这样配置
-
-```java
-public final class XxxApi extends XxxServer implements IRequestApi {
-
-    @NonNull
-    @Override
-    public String getApi() {
-        return "xxx/xxxx";
-    }
-}
-```
-
-* 如果不想单独定义一个类，也可以这样写
-
-```java
-public final class XxxApi implements IRequestServer, IRequestApi {
-
-    @NonNull
-    @Override
-    public String getHost() {
-        return "https://www.xxxxxxx.com/";
-    }
-
-    @NonNull
-    @Override
-    public String getApi() {
-        return "xxx/xxxx";
-    }
-}
-```
-
-#### 如何配置多域名
-
-* 先定义一个普通接口的测试服和正式服的配置
-
-```java
-public class TestServer implements IRequestServer {
-
-    @NonNull
-    @Override
-    public String getHost() {
-        return "https://www.test.xxxxxxx.com/";
-    }
-}
-```
-
-```java
-public class ReleaseServer implements IRequestServer {
-
-    @NonNull
-    @Override
-    public String getHost() {
-        return "https://www.xxxxxxx.com/";
-    }
-}
-```
-
-* 再将它应用到全局配置中
-
-```java
-IRequestServer server;
-if (BuildConfig.DEBUG) {
-    server = new TestServer();
-} else {
-    server = new ReleaseServer();
-}
-EasyConfig.getInstance().setServer(server);
-```
-
-* 假设要为 H5 业务模块设定特定服务器配置，可以这样做
-
-```java
-public class H5Server implements IRequestServer {
-
-    @NonNull
-    @Override
-    public String getHost() {
-        IRequestServer server = EasyConfig.getInstance().getServer();
-        if (server instanceof TestServer) {
-            return "https://www.test.h5.xxxxxxx.com/";
-        }
-        return "https://www.h5.xxxxxxx.com/";
-    }
-}
-```
-
-* 在配置接口的时候继承 H5Server 就可以了，其他 H5 模块的配置也是雷同
-
-```java
-public final class UserAgreementApi extends H5Server implements IRequestApi {
-
-    @NonNull
-    @Override
-    public String getApi() {
-        return "user/agreement";
-    }
-}
-```
-
-#### 如何修改参数的提交方式
-
-* 以表单的形式提交参数（默认）
-
-```java
-public class XxxServer implements IRequestServer {
-
-    @NonNull
-    @Override
-    public String getHost() {
-        return "https://www.xxxxxxx.com/";
-    }
-
-    @NonNull
-    @Override
-    public BodyType getBodyType() {
-        return BodyType.FORM;
-    }
-}
-```
-
-* 以 Json 的形式提交参数
-
-```java
-public class XxxServer implements IRequestServer {
-
-    @NonNull
-    @Override
-    public String getHost() {
-        return "https://www.xxxxxxx.com/";
-    }
-
-    @NonNull
-    @Override
-    public BodyType getBodyType() {
-        return BodyType.JSON;
-    }
-}
-```
-
-* 当然也支持对某个接口进行单独配置
-
-```java
-public final class XxxApi implements IRequestApi, IRequestType {
-
-    @NonNull
-    @Override
-    public String getApi() {
-        return "xxx/xxxx";
-    }
-
-    @NonNull
-    @Override
-    public BodyType getBodyType() {
-        return BodyType.JSON;
-    }
-}
-```
-
-* 表单和 Json 方式提交的优缺点对比
-
-|  场景  | 表单方式  | Json 方式 |
-| :----: | :------: |  :-----: |
-|   多级参数  |  不支持  |   支持  |
-|   文件上传  |   支持  |  不支持  |
-
-#### 如何对接口进行加密或者解密
-
-* 关于这个问题，其实可以利用框架中提供的 IRequestInterceptor 接口来实现，通过重写接口中的对应方法进行拦截，修改对象的内容从而达到加密的效果。
-
-```java
-public interface IRequestInterceptor {
-
-    /**
-     * 拦截参数
-     *
-     * @param httpRequest   接口对象
-     * @param params        请求参数
-     * @param headers       请求头参数
-     */
-    default void interceptArguments(@NonNull HttpRequest<?> httpRequest, @NonNull HttpParams params, @NonNull HttpHeaders headers) {}
-
-    /**
-     * 拦截请求头
-     *
-     * @param httpRequest   接口对象
-     * @param request       请求头对象
-     * @return              返回新的请求头
-     */
-    @NonNull
-    default Request interceptRequest(@NonNull HttpRequest<?> httpRequest, @NonNull Request request) {
-        return request;
-    }
-
-    /**
-     * 拦截器响应头
-     *
-     * @param httpRequest   接口对象
-     * @param response      响应头对象
-     * @return              返回新的响应头
-     */
-    @NonNull
-    default Response interceptResponse(@NonNull HttpRequest<?> httpRequest, @NonNull Response response) {
-        return response;
-    }
-}
-```
-
-```java
-// 在框架初始化的时候设置拦截器
-EasyConfig.with(okHttpClient)
-        // 设置请求参数拦截器
-        .setInterceptor(new XxxInterceptor())
-        .into();
-```
-
-* 如果你只想对某个接口进行加解密，可以让 Api 类单独实现 IRequestInterceptor 接口，这样它就不会走全局的配置。
-
-#### 如何忽略某个参数
-
-```java
-public final class XxxApi implements IRequestApi {
-
-    @NonNull
-    @Override
-    public String getApi() {
-        return "xxx/xxxx";
-    }
-    
-    @HttpIgnore
-    private String address;
-}
-```
-
-#### 如何传入请求头
-
-```java
-public final class XxxApi implements IRequestApi {
-
-    @NonNull
-    @Override
-    public String getApi() {
-        return "xxx/xxxx";
-    }
-    
-    @HttpHeader
-    private String time;
-}
-```
-
-#### 如何重命名参数或者请求头的名称
-
-```java
-public final class XxxApi implements IRequestApi {
-
-    @NonNull
-    @Override
-    public String getApi() {
-        return "xxx/xxxx";
-    }
-    
-    @HttpRename("k")
-    private String keyword;
-}
-```
-
-#### 如何上传文件
-
-* 使用 File 对象上传
-
-```java
-public final class XxxApi implements IRequestApi {
-    
-    @NonNull
-    @Override
-    public String getApi() {
-        return "xxx/xxxx";
-    }
-    
-    private File file;
-}
-```
-
-* 使用 InputStream 对象上传
-
-```java
-public final class XxxApi implements IRequestApi {
-    
-    @NonNull
-    @Override
-    public String getApi() {
-        return "xxx/xxxx";
-    }
-    
-    private InputStream inputStream;
-}
-```
-
-* 使用 RequestBody 对象上传
-
-```java
-public final class XxxApi implements IRequestApi {
-
-    @NonNull
-    @Override
-    public String getApi() {
-        return "xxx/xxxx";
-    }
-    
-    private RequestBody requestBody;
-}
-```
-
-#### 如何上传文件列表
-
-```java
-public final class XxxApi implements IRequestApi {
-
-    @NonNull
-    @Override
-    public String getApi() {
-        return "xxx/xxxx";
-    }
-    
-    private List<File> files;
-}
-```
-
-#### 如何设置超时重试
-
-```java
-// 设置请求重试次数
-EasyConfig.getInstance().setRetryCount(3);
-// 设置请求重试时间
-EasyConfig.getInstance().setRetryTime(1000);
-```
-
-#### 如何设置请求超时时间
-
-* 全局配置（针对所有接口都生效）
-
-```java
-OkHttpClient.Builder builder = new OkHttpClient.Builder();
-builder.readTimeout(5000, TimeUnit.MILLISECONDS);
-builder.writeTimeout(5000, TimeUnit.MILLISECONDS);
-builder.connectTimeout(5000, TimeUnit.MILLISECONDS);
-
-EasyConfig.with(builder.build())
-        .into();
-```
-
-* 局部配置（只在某个接口上生效）
-
-```java
-public final class XxxApi implements IRequestApi, IRequestClient {
-
-    @NonNull
-    @Override
-    public String getApi() {
-        return "xxxx/";
-    }
-
-    @NonNull
-    @Override
-    public OkHttpClient getOkHttpClient() {
-        OkHttpClient.Builder builder = EasyConfig.getInstance().getOkHttpClient().newBuilder();
-        builder.readTimeout(5000, TimeUnit.MILLISECONDS);
-        builder.writeTimeout(5000, TimeUnit.MILLISECONDS);
-        builder.connectTimeout(5000, TimeUnit.MILLISECONDS);
-        return builder.build();
-    }
-}
-```
-
-#### 如何设置不打印日志
-
-```java
-EasyConfig.getInstance().setLogEnabled(false);
-```
-
-#### 如何取消已发起的请求
-
-```java
-// 取消和这个 LifecycleOwner 关联的请求
-EasyHttp.cancel(LifecycleOwner lifecycleOwner);
-// 取消指定 Tag 标记的请求
-EasyHttp.cancel(Object tag);
-// 取消所有请求
-EasyHttp.cancel();
-```
-
-#### 如何延迟发起一个请求
-
-```java
-EasyHttp.post(MainActivity.this)
-        .api(new XxxApi())
-        // 延迟 5 秒后请求
-        .delay(5000)
-        .request(new HttpCallback<HttpData<XxxBean>>(MainActivity.this) {
-
-            @Override
-            public void onSucceed(HttpData<XxxBean> result) {
-                
-            }
-        });
-```
-
-#### 如何对接口路径进行动态化拼接
-
-```java
-public final class XxxApi implements IRequestApi {
-
-    @NonNull
-    @Override
-    public String getApi() {
-        return "article/query/" + pageNumber + "/json";
-    }
-
-    @HttpIgnore
-    private int pageNumber;
-
-    public XxxApi setPageNumber(int pageNumber) {
-        this.pageNumber = pageNumber;
-        return this;
-    }
-}
-```
-
-#### Https 如何配置信任所有证书
-
-* 在初始化 OkHttp 的时候这样设置
-
-```java
-HttpSslConfig sslConfig = HttpSslFactory.generateSslConfig();
-OkHttpClient okHttpClient = new OkHttpClient.Builder()
-        .sslSocketFactory(sslConfig.getsSLSocketFactory(), sslConfig.getTrustManager())
-        .hostnameVerifier(HttpSslFactory.generateUnSafeHostnameVerifier())
-        .build();
-```
-* 但是不推荐这样做，因为这样是不安全的，意味着每个请求都不会用 Https 去校验
-
-* 当然框架中也提供了一些生成的证书的 API，具体请参见 com.hjq.http.ssl 包下的类
-
-#### 我不想一个接口写一个类怎么办
-
-* 先定义一个 URL 管理类，将 URL 配置到这个类中
-
-```java
-public final class HttpUrls {
-
-    /** 获取用户信息 */
-    public static final String GET_USER_INFO =  "user/getUserInfo";
-}
-```
-
-* 然后在 EasyHttp 引入接口路径
-
-```java
-EasyHttp.post()
-        .api(HttpUrls.GET_USER_INFO)
-        .request(new HttpCallback<HttpData<XxxBean>>(this) {
-
-            @Override
-            public void onSucceed(HttpData<XxxBean> result) {
-
-            }
-        });
-```
-
-* 不过这种方式只能应用于没有参数的接口，有参数的接口还是需要写一个类，因为框架只会在 Api 类中去解析参数。
-
-* 虽然 EasyHttp 开放了这种写法，但是身为作者的我并不推荐你这样写，因为这样写会导致扩展性很差，比如后续加参数，还要再改回来，并且无法对接口进行动态化配置。
-
-
-#### 我想用 Json 数组作为参数进行上传该怎么办
-
-* 由于 Api 类最终会转换成一个 JsonObject 类型的字符串，如果你需要上传 JsonArray 类型的字符串，请使用以下方式实现
-
-```java
-List<Xxx> parameter = new ArrayList<>();
-list.add(xxx);
-list.add(xxx);
-String json = gson.toJson(parameter);
-
-EasyHttp.post()
-        .api(new XxxApi())
-        .body(new JsonBody(json))
-        .request(new HttpCallback<HttpData<Xxx>>(this) {
-
-            @Override
-            public void onSucceed(HttpData<Xxx> result) {
-
-            }
-        });
-```
-
-* 但是我个人不推荐将 JsonArray 作为参数的根部类型，因为这样的接口后续的扩展性极差。
-
-#### 接口参数的 Key 值是动态变化的该怎么办
-
-* 框架是通过反射解析 Api 类中的字段来作为参数的，字段名作为参数的 Key 值，字段值作为参数的 Value 值，由于 Java 无法动态更改类的字段名，所以无法通过正常的手段进行修改，你如果有这种需求，请通过以下方式进行实现
-
-```java
-HashMap<String, Object> parameter = new HashMap<>();
-
-// 添加全局参数
-HashMap<String, Object> globalParams = EasyConfig.getInstance().getParams();
-Set<String> keySet = globalParams.keySet();
-for (String key : keySet) {
-    parameter.put(key, globalParams.get(key));
-}
-
-// 添加自定义参数
-parameter.put("key1", value1);
-parameter.put("key2", value2);
-
-String json = gson.toJson(parameter);
-
-EasyHttp.post()
-        .api(new XxxApi())
-        .body(new JsonBody(json))
-        .request(new HttpCallback<HttpData<Xxx>>(this) {
-
-            @Override
-            public void onSucceed(HttpData<Xxx> result) {
-
-            }
-        });
-```
-
-#### 如何设置自定义的 UA 标识
-
-* 首先 UA 是 User Agent 的简称，当我们没有设置自定义 UA 标识的时候，那么 OkHttp 会在 BridgeInterceptor 拦截器添加一个默认的 UA 标识，那么如何在 EasyHttp 设置自定义 UA 标识呢？其实很简单，UA 标识本质上其实就是一个请求头，在 EasyHttp 中添加一个请求头为 `"User-Agent` 的参数即可，至于怎么添加请求头，前面的文档已经有介绍了，这里不再赘述。
-
-#### 我想自定义一个 RequestBody 进行请求该怎么办
-
-* 在一些极端的情况下，框架无法满足使用的前提下，这个时候需要自定义 `RequestBody` 来实现，那么怎么使用自定义 `RequestBody` 呢？框架其实有开放方法，具体使用示例如下：
-
-```java
-EasyHttp.post()
-        .api(new XxxApi())
-        .body(RequestBody body)
-        .request(new HttpCallback<HttpData<Xxx>>(this) {
-
-            @Override
-            public void onSucceed(HttpData<Xxx> result) {
-                
-            }
-        });
-```
-
-* 需要注意的是：由于 Post 请求是将参数放置到 `RequestBody` 上面，而一个请求只能设置一个 `RequestBody`，如果你设置了自定义 `body(RequestBody body)`，那么框架将不会去将 `XxxApi` 类中的字段解析成参数。另外除了 Post 请求，Put 请求和 Patch 请求也可以使用这种方式进行设置，这里不再赘述。
-
Index: src/main/java/cn/xihan/http/model/BodyType.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/model/BodyType.java b/src/main/java/cn/xihan/http/model/BodyType.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/model/BodyType.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,20 +0,0 @@
-package cn.xihan.http.model;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/12/18
- *    desc   : 参数提交方式
- */
-public enum BodyType {
-
-    /**
-     * 表单提交
-     */
-    FORM,
-
-    /**
-     * JSON 提交
-     */
-    JSON
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/callback/BaseCallback.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/callback/BaseCallback.java b/src/main/java/cn/xihan/http/callback/BaseCallback.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/callback/BaseCallback.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,104 +0,0 @@
-package cn.xihan.http.callback;
-
-
-
-import java.io.IOException;
-import java.net.SocketTimeoutException;
-
-import cn.xihan.http.EasyConfig;
-import cn.xihan.http.EasyLog;
-import cn.xihan.http.EasyUtils;
-
-import cn.xihan.http.model.CallProxy;
-import cn.xihan.http.request.HttpRequest;
-import okhttp3.Call;
-import okhttp3.Callback;
-import okhttp3.Response;
-import org.jetbrains.annotations.NotNull;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2019/11/25
- *    desc   : 接口回调基类
- */
-public abstract class BaseCallback implements Callback {
-
-    /** 请求配置 */
-    private final HttpRequest<?> mHttpRequest;
-
-    /** 请求任务对象 */
-    private CallProxy mCall;
-
-    /** 当前重试次数 */
-    private int mRetryCount;
-
-    public BaseCallback(HttpRequest<?> request) {
-        mHttpRequest = request;
-    }
-
-    public BaseCallback setCall(CallProxy call) {
-        mCall = call;
-        return this;
-    }
-
-    public void start() {
-        mCall.enqueue(this);
-        onStart(mCall);
-    }
-
-    protected CallProxy getCall() {
-        return mCall;
-    }
-
-    @Override
-    public void onResponse(@NotNull Call call, @NotNull Response response) {
-        try {
-            // 收到响应
-            onResponse(response);
-        } catch (Exception e) {
-            // 回调失败
-            onFailure(e);
-        } finally {
-            // 关闭响应
-            EasyUtils.closeStream(response);
-        }
-    }
-
-    @Override
-    public void onFailure(@NotNull Call call, @NotNull IOException e) {
-        // 服务器请求超时重试
-        if (e instanceof SocketTimeoutException && mRetryCount < EasyConfig.getInstance().getRetryCount()) {
-            // 设置延迟 N 秒后重试该请求
-            EasyUtils.postDelayed(() -> {
-
-                mRetryCount++;
-                Call newCall = call.clone();
-                mCall.setCall(newCall);
-                newCall.enqueue(BaseCallback.this);
-                // 请求超时，正在执行延迟重试
-                EasyLog.printLog(mHttpRequest, "The request timed out, a delayed retry is being performed, the number of retries: " +
-                        mRetryCount + " / " + EasyConfig.getInstance().getRetryCount());
-
-            }, EasyConfig.getInstance().getRetryTime());
-
-            return;
-        }
-        onFailure(e);
-    }
-
-    /**
-     * 请求开始
-     */
-    protected abstract void onStart(Call call);
-
-    /**
-     * 请求成功
-     */
-    protected abstract void onResponse(Response response) throws Exception;
-
-    /**
-     * 请求失败
-     */
-    protected abstract void onFailure(Exception e);
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/model/CacheMode.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/model/CacheMode.java b/src/main/java/cn/xihan/http/model/CacheMode.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/model/CacheMode.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,41 +0,0 @@
-package cn.xihan.http.model;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2021/05/22
- *    desc   : 数据缓存模式
- */
-public enum CacheMode {
-
-    /**
-     * 默认（按照 Http 协议来缓存）
-     */
-    DEFAULT,
-
-    /**
-     * 不使用缓存（禁用 Http 协议缓存）
-     */
-    NO_CACHE,
-
-    /**
-     * 只使用缓存
-     *
-     * 已有缓存的情况下：读取缓存 -> 回调成功
-     * 没有缓存的情况下：请求网络 -> 写入缓存 -> 回调成功
-     */
-    USE_CACHE_ONLY,
-
-    /**
-     * 优先使用缓存
-     *
-     * 已有缓存的情况下：先读缓存 —> 回调成功 —> 请求网络 —> 刷新缓存
-     * 没有缓存的情况下：请求网络 -> 写入缓存 -> 回调成功
-     */
-    USE_CACHE_FIRST,
-
-    /**
-     * 只在网络请求失败才去读缓存
-     */
-    USE_CACHE_AFTER_FAILURE
-}
\ No newline at end of file
Index: src/main/java/cn/xihan/http/request/PatchRequest.java
===================================================================
diff --git a/src/main/java/cn/xihan/http/request/PatchRequest.java b/src/main/java/cn/xihan/http/request/PatchRequest.java
deleted file mode 100644
--- a/src/main/java/cn/xihan/http/request/PatchRequest.java	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ /dev/null	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
@@ -1,22 +0,0 @@
-package cn.xihan.http.request;
-
-
-import cn.xihan.http.model.HttpMethod;
-
-/**
- *    author : Android 轮子哥
- *    github : <a href="https://github.com/getActivity/EasyHttp">https://github.com/getActivity/EasyHttp</a>
- *    time   : 2020/10/07
- *    desc   : Patch 请求
- */
-public final class PatchRequest extends BodyRequest<PatchRequest> {
-
-    public PatchRequest() {
-
-    }
-
-    @Override
-    public String getRequestMethod() {
-        return HttpMethod.PATCH.toString();
-    }
-}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0941fa80-b6b2-49e7-a71f-cc0e6e081e55\" name=\"变更\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Kotlin Object\" />\r\n        <option value=\"Kotlin Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"28eCT1Gjn970iMEVSr330fnXolh\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"jdk.selected.JAVA_MODULE\": \"1.8\",\r\n    \"last_opened_file_path\": \"F:/Java/Projects/EasyHttp-11-KT/src/main/java/cn/xihan/lib/easyhttp\",\r\n    \"settings.editor.selected.configurable\": \"preferences.language.Kotlin\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"F:\\Java\\Projects\\EasyHttp-11-KT\\src\\main\\java\\cn\\xihan\\lib\\easyhttp\" />\r\n      <recent name=\"F:\\Java\\Projects\\EasyHttp-11-KT\\src\\main\\java\\cn\\xihan\\lib\\easyhttp\\ssl\" />\r\n      <recent name=\"F:\\Java\\Projects\\EasyHttp-11-KT\\src\\main\\kotlin\\cn.xihan.lib.easyhttp\" />\r\n      <recent name=\"F:\\Java\\Projects\\EasyHttp-11-KT\\GsonFactory\\src\\main\\java\\cn\\xihan\\lib\\gson\\factory\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"MainKt\" type=\"JetRunConfigurationType\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"MainKt\" />\r\n      <module name=\"EasyHttp-11-KT.test\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Kotlin.MainKt\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"应用程序级\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"默认任务\">\r\n      <changelist id=\"0941fa80-b6b2-49e7-a71f-cc0e6e081e55\" name=\"变更\" comment=\"\" />\r\n      <created>1651567669619</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1651567669619</updated>\r\n      <workItem from=\"1651567670863\" duration=\"249000\" />\r\n      <workItem from=\"1651567937240\" duration=\"6595000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ b/.idea/workspace.xml	(date 1655627189390)
@@ -4,7 +4,104 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="0941fa80-b6b2-49e7-a71f-cc0e6e081e55" name="变更" comment="" />
+    <list default="true" id="0941fa80-b6b2-49e7-a71f-cc0e6e081e55" name="变更" comment="update Kotlin 1.7.0">
+      <change afterPath="$PROJECT_DIR$/.idea/gradle.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/build.gradle" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/src/main/java/cn/xihan/lib/gson/factory/GsonFactory.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/src/main/java/cn/xihan/lib/gson/factory/JsonCallback.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/src/main/java/cn/xihan/lib/gson/factory/data/BigDecimalTypeAdapter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/src/main/java/cn/xihan/lib/gson/factory/data/BooleanTypeAdapter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/src/main/java/cn/xihan/lib/gson/factory/data/DoubleTypeAdapter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/src/main/java/cn/xihan/lib/gson/factory/data/FloatTypeAdapter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/src/main/java/cn/xihan/lib/gson/factory/data/IntegerTypeAdapter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/src/main/java/cn/xihan/lib/gson/factory/data/JSONArrayTypeAdapter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/src/main/java/cn/xihan/lib/gson/factory/data/JSONObjectTypeAdapter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/src/main/java/cn/xihan/lib/gson/factory/data/LongTypeAdapter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/src/main/java/cn/xihan/lib/gson/factory/data/StringTypeAdapter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/src/main/java/cn/xihan/lib/gson/factory/element/CollectionTypeAdapter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/src/main/java/cn/xihan/lib/gson/factory/element/CollectionTypeAdapterFactory.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/src/main/java/cn/xihan/lib/gson/factory/element/ReflectiveFieldBound.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/src/main/java/cn/xihan/lib/gson/factory/element/ReflectiveTypeAdapter.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/src/main/java/cn/xihan/lib/gson/factory/element/ReflectiveTypeAdapterFactory.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/src/main/java/cn/xihan/lib/gson/factory/element/ReflectiveTypeUtils.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/GsonFactory/src/main/java/cn/xihan/lib/gson/factory/element/TypeAdapterRuntimeTypeWrapper.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/gradle/wrapper/gradle-wrapper.jar" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/gradle/wrapper/gradle-wrapper.properties" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/EasyConfig.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/EasyHttp.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/EasyLog.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/EasyUtils.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/annotation/HttpHeader.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/annotation/HttpIgnore.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/annotation/HttpRename.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/body/JsonBody.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/body/ProgressBody.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/body/TextBody.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/body/UpdateBody.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/callback/BaseCallback.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/callback/DownloadCallback.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/callback/NormalCallback.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/config/DownloadApi.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/config/ILogStrategy.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/config/IRequestApi.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/config/IRequestCache.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/config/IRequestClient.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/config/IRequestHandler.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/config/IRequestHost.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/config/IRequestInterceptor.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/config/IRequestServer.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/config/IRequestType.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/config/LogStrategy.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/config/RequestApi.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/config/RequestServer.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/config/RequestUrl.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/exception/CancelException.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/exception/DataException.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/exception/HttpException.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/exception/MD5Exception.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/exception/NetworkException.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/exception/NullBodyException.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/exception/ResponseException.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/exception/ResultException.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/exception/ServerException.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/exception/TimeoutException.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/exception/TokenException.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/listener/HttpCallback.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/listener/OnDownloadListener.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/listener/OnHttpListener.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/listener/OnUpdateListener.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/model/BodyType.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/model/CacheMode.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/model/CallProxy.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/model/ContentType.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/model/HttpData.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/model/HttpHeaders.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/model/HttpListData.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/model/HttpMethod.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/model/HttpParams.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/model/RequestHandler.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/model/ResponseClass.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/request/BodyRequest.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/request/DeleteRequest.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/request/DownloadRequest.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/request/GetRequest.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/request/HeadRequest.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/request/HttpRequest.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/request/OptionsRequest.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/request/PatchRequest.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/request/PostRequest.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/request/PutRequest.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/request/TraceRequest.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/request/UrlRequest.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/ssl/HttpSslConfig.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/ssl/HttpSslFactory.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/ssl/UnSafeHostnameVerifier.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/cn/xihan/lib/easyhttp/ssl/UnSafeTrustManager.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/kotlin/Main.kt" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -14,6 +111,18 @@
     <projectState path="$PROJECT_DIR$">
       <ProjectState />
     </projectState>
+  </component>
+  <component name="ExternalProjectsManager">
+    <system id="GRADLE">
+      <state>
+        <projects_view>
+          <tree_state>
+            <expand />
+            <select />
+          </tree_state>
+        </projects_view>
+      </state>
+    </system>
   </component>
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
@@ -22,6 +131,9 @@
         <option value="Kotlin Class" />
       </list>
     </option>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
@@ -33,12 +145,22 @@
   </component>
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
+    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "Project.color": "20312c",
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
     "WebServerToolWindowFactoryState": "false",
     "jdk.selected.JAVA_MODULE": "1.8",
     "last_opened_file_path": "F:/Java/Projects/EasyHttp-11-KT/src/main/java/cn/xihan/lib/easyhttp",
-    "settings.editor.selected.configurable": "preferences.language.Kotlin"
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "project.structure.last.edited": "项目",
+    "project.structure.proportion": "0.17",
+    "project.structure.side.proportion": "0.2551724",
+    "settings.editor.selected.configurable": "preferences.pluginManager"
   }
 }]]></component>
   <component name="RecentsManager">
@@ -73,11 +195,38 @@
       <updated>1651567669619</updated>
       <workItem from="1651567670863" duration="249000" />
       <workItem from="1651567937240" duration="6595000" />
+      <workItem from="1655626728005" duration="173000" />
+      <workItem from="1655626904084" duration="286000" />
     </task>
+    <task id="LOCAL-00001" summary="update Kotlin 1.7.0">
+      <created>1655627040506</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1655627040506</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
+  </component>
+  <component name="Vcs.Log.Tabs.Properties">
+    <option name="TAB_STATES">
+      <map>
+        <entry key="MAIN">
+          <value>
+            <State />
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+  <component name="VcsManagerConfiguration">
+    <option name="CHECK_CODE_SMELLS_BEFORE_PROJECT_COMMIT" value="false" />
+    <option name="CHECK_NEW_TODO" value="false" />
+    <MESSAGE value="update Kotlin 1.7.0" />
+    <option name="LAST_COMMIT_MESSAGE" value="update Kotlin 1.7.0" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># 项目排除路径\r\n/.gradle/\r\n/build/\r\n/build/classes/java/main/\r\n/FastKv/build/\r\n/FastKv/build/classes/java/main/\r\n/GsonFactory/build/\r\n/GsonFactory/build/classes/java/main/\r\n/out/
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ b/.gitignore	(date 1655622810428)
@@ -1,9 +1,42 @@
-# 项目排除路径
-/.gradle/
-/build/
-/build/classes/java/main/
-/FastKv/build/
-/FastKv/build/classes/java/main/
-/GsonFactory/build/
-/GsonFactory/build/classes/java/main/
-/out/
\ No newline at end of file
+.gradle
+build/
+!gradle/wrapper/gradle-wrapper.jar
+!**/src/main/**/build/
+!**/src/test/**/build/
+
+### IntelliJ IDEA ###
+.idea/modules.xml
+.idea/jarRepositories.xml
+.idea/compiler.xml
+.idea/libraries/
+*.iws
+*.iml
+*.ipr
+out/
+!**/src/main/**/out/
+!**/src/test/**/out/
+
+### Eclipse ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+bin/
+!**/src/main/**/bin/
+!**/src/test/**/bin/
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+
+### VS Code ###
+.vscode/
+
+### Mac OS ###
+.DS_Store
\ No newline at end of file
Index: GsonFactory/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'java'\r\n}\r\n\r\n\r\ngroup 'cn.xihan.lib'\r\nversion '1.0'\r\n\r\nrepositories {\r\n    mavenCentral()\r\n}\r\n\r\ndependencies {\r\n    implementation 'org.json:json:latest.release'\r\n    implementation 'com.google.code.gson:gson:2.9.0'\r\n}\r\n\r\ntest {\r\n    useJUnitPlatform()\r\n}\r\n\r\n// 防止编码问题\r\ntasks.withType(Javadoc) {\r\n    options.addStringOption('Xdoclint:none', '-quiet')\r\n    options.addStringOption('encoding', 'UTF-8')\r\n    options.addStringOption('charSet', 'UTF-8')\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GsonFactory/build.gradle b/GsonFactory/build.gradle
--- a/GsonFactory/build.gradle	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ b/GsonFactory/build.gradle	(date 1651571563096)
@@ -2,17 +2,15 @@
     id 'java'
 }
 
-
 group 'cn.xihan.lib'
-version '1.0'
 
 repositories {
     mavenCentral()
 }
 
 dependencies {
-    implementation 'org.json:json:latest.release'
-    implementation 'com.google.code.gson:gson:2.9.0'
+    compileOnly 'org.json:json:latest.release'
+    compileOnly 'com.google.code.gson:gson:2.9.0'
 }
 
 test {
@@ -24,4 +22,4 @@
     options.addStringOption('Xdoclint:none', '-quiet')
     options.addStringOption('encoding', 'UTF-8')
     options.addStringOption('charSet', 'UTF-8')
-}
+}
\ No newline at end of file
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>rootProject.name = 'EasyHttp-11'\r\n\r\ninclude 'GsonFactory'\r\ninclude 'FastKv'\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/settings.gradle b/settings.gradle
--- a/settings.gradle	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ b/settings.gradle	(date 1651568128298)
@@ -1,4 +1,4 @@
-rootProject.name = 'EasyHttp-11'
 
+rootProject.name = 'EasyHttp-11-KT'
 include 'GsonFactory'
-include 'FastKv'
+
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>distributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-7.4-bin.zip\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
--- a/gradle/wrapper/gradle-wrapper.properties	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ b/gradle/wrapper/gradle-wrapper.properties	(date 1655626920865)
@@ -1,5 +1,5 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-7.4-bin.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-7.4.2-bin.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'java'\r\n    id 'maven-publish'\r\n}\r\n\r\ngroup 'cn.xihan.lib'\r\nversion '11.0'\r\n\r\nsourceCompatibility = 1.8 // java 8\r\ntargetCompatibility = 1.8\r\n\r\nrepositories {\r\n    mavenCentral()\r\n}\r\n\r\ndependencies {\r\n    implementation 'com.squareup.okhttp3:okhttp:latest.release'\r\n    implementation 'com.google.code.gson:gson:latest.release'\r\n    implementation 'org.json:json:latest.release'\r\n\r\n    implementation project('FastKv')\r\n    implementation project('GsonFactory')\r\n}\r\n\r\ntest {\r\n    useJUnitPlatform()\r\n}\r\n\r\njava {\r\n    withSourcesJar()\r\n    withJavadocJar()\r\n}\r\n\r\npublishing {\r\n    publications {\r\n        maven(MavenPublication) {\r\n            from components.java\r\n        }\r\n    }\r\n}\r\n\r\n\r\nsubprojects {\r\n    apply plugin: 'java'\r\n    apply plugin: 'maven-publish'\r\n\r\n    sourceCompatibility = 1.8 // java 8\r\n    targetCompatibility = 1.8\r\n\r\n    java {\r\n        withSourcesJar()\r\n        withJavadocJar()\r\n    }\r\n\r\n    publishing {\r\n        publications {\r\n            maven(MavenPublication) {\r\n                groupId project.group\r\n                artifactId project.name\r\n                version project.version\r\n                from components.java\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nwrapper {\r\n    gradleVersion = \"7.4\"\r\n    distributionType = Wrapper.DistributionType.BIN\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision 5324a4256d9d1017789e0626d0a8d6111f121ca1)
+++ b/build.gradle	(date 1655626842345)
@@ -1,72 +1,53 @@
 plugins {
-    id 'java'
+    id 'org.jetbrains.kotlin.jvm' version '1.7.0'
     id 'maven-publish'
 }
 
-group 'cn.xihan.lib'
-version '11.0'
-
-sourceCompatibility = 1.8 // java 8
-targetCompatibility = 1.8
+group = 'cn.xihan.lib'
+version = '11.0'
 
 repositories {
     mavenCentral()
+    maven { url "https://s01.oss.sonatype.org/content/repositories/releases" }
+    maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots" }
 }
 
 dependencies {
-    implementation 'com.squareup.okhttp3:okhttp:latest.release'
+    implementation 'com.squareup.okhttp3:okhttp:5.0.0-SNAPSHOT'
     implementation 'com.google.code.gson:gson:latest.release'
     implementation 'org.json:json:latest.release'
 
-    implementation project('FastKv')
-    implementation project('GsonFactory')
+    implementation project(":GsonFactory")
+    //testImplementation 'org.jetbrains.kotlin:kotlin-test'
 }
 
 test {
     useJUnitPlatform()
 }
 
-java {
-    withSourcesJar()
-    withJavadocJar()
-}
-
-publishing {
-    publications {
-        maven(MavenPublication) {
-            from components.java
-        }
-    }
+compileKotlin {
+    kotlinOptions.jvmTarget = '1.8'
 }
 
-
-subprojects {
-    apply plugin: 'java'
-    apply plugin: 'maven-publish'
-
-    sourceCompatibility = 1.8 // java 8
-    targetCompatibility = 1.8
-
-    java {
-        withSourcesJar()
-        withJavadocJar()
-    }
+compileTestKotlin {
+    kotlinOptions.jvmTarget = '1.8'
+}
 
-    publishing {
-        publications {
-            maven(MavenPublication) {
-                groupId project.group
-                artifactId project.name
-                version project.version
-                from components.java
-            }
+publishing {
+    publications {
+        maven(MavenPublication) {
+            groupId project.group
+            artifactId project.name
+            version project.version
+            from components.java
         }
     }
 }
 
 wrapper {
-    gradleVersion = "7.4"
+    gradleVersion = "7.4.2"
     distributionType = Wrapper.DistributionType.BIN
 }
 
 
+
